1 encontre el token COMENTARIO_BLOQUE: /* 

* A program to perform Euclid's algorithm to computer
* the greates common denominator (GCD) of a pair of integers.
*/
3 encontre el token TIPO_ENTERO: int
3 encontre el token VARIABLE: gcd
3 encontre el token PARENTESIS_IZQUIERDO: (
3 encontre el token TIPO_ENTERO: int
3 encontre el token VARIABLE: u
3 encontre el token COMA: ,
3 encontre el token TIPO_ENTERO: int
3 encontre el token VARIABLE: v
3 encontre el token PARENTESIS_DERECHO: )
4 encontre el token LLAVE_IZQ: {
5 encontre el token PALABRA_RESERVADA_IF: if
5 encontre el token PARENTESIS_IZQUIERDO: (
5 encontre el token VARIABLE: v
5 encontre el token IGUAL: ==
5 encontre el token NUMERO_ENTERO: 0
5 encontre el token PARENTESIS_DERECHO: )
5 encontre el token PALABRA_RESERVADA_THEN: then
5 encontre el token PALABRA_RESERVADA_RETURN: return
5 encontre el token VARIABLE: u
5 encontre el token SEMICOLON: ;
5 encontre el token PALABRA_RESERVADA_ELSE: else
5 encontre el token PALABRA_RESERVADA_RETURN: return
5 encontre el token VARIABLE: gcd
5 encontre el token PARENTESIS_IZQUIERDO: (
5 encontre el token VARIABLE: v
5 encontre el token COMA: ,
5 encontre el token VARIABLE: u
5 encontre el token OPERADOR_RESTA: -
5 encontre el token VARIABLE: u
5 encontre el token OPERADOR_DIVIDIR: /
5 encontre el token VARIABLE: v
5 encontre el token OPERADOR_MULTIPLICAR: *
5 encontre el token VARIABLE: v
5 encontre el token PARENTESIS_DERECHO: )
5 encontre el token SEMICOLON: ;
6 encontre el token COMENTARIO_BLOQUE: /* u-u/v*v == u mod v */
7 encontre el token LLAVE_DER: }
9 encontre el token PALABRA_RESERVADA_MAIN: main
9 encontre el token PARENTESIS_IZQUIERDO: (
9 encontre el token PARENTESIS_DERECHO: )
10 encontre el token LLAVE_IZQ: {
11 encontre el token TIPO_ENTERO: int
11 encontre el token VARIABLE: x
11 encontre el token SEMICOLON: ;
11 encontre el token TIPO_ENTERO: int
11 encontre el token VARIABLE: y
11 encontre el token SEMICOLON: ;
12 encontre el token VARIABLE: x
12 encontre el token ASIGNACION: =
12 encontre el token VARIABLE: input
12 encontre el token PARENTESIS_IZQUIERDO: (
12 encontre el token PARENTESIS_DERECHO: )
12 encontre el token SEMICOLON: ;
12 encontre el token VARIABLE: y
12 encontre el token ASIGNACION: =
12 encontre el token VARIABLE: input
12 encontre el token PARENTESIS_IZQUIERDO: (
12 encontre el token PARENTESIS_DERECHO: )
12 encontre el token SEMICOLON: ;
13 encontre el token VARIABLE: output
13 encontre el token PARENTESIS_IZQUIERDO: (
13 encontre el token VARIABLE: gcd
13 encontre el token PARENTESIS_IZQUIERDO: (
13 encontre el token VARIABLE: x
13 encontre el token COMA: ,
13 encontre el token VARIABLE: y
13 encontre el token PARENTESIS_DERECHO: )
13 encontre el token PARENTESIS_DERECHO: )
13 encontre el token SEMICOLON: ;
14 encontre el token LLAVE_DER: }
