Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CARACTER_ERROR
    COMENTARIOS
    COMENTARIO_BLOQUE
    ENTERO_SOBREPASADO
    NUMERO_DECIMAL_CON_ERROR
    NUMERO_DECIMAL_CON_ERROR2
    PALABRA_RESERVADA_MAIN
    PALABRA_RESERVADA_NULL
    TIPO_DECIMAL
    VARIABLE_ERROR

Grammar

Rule 0     S' -> program
Rule 1     program -> declList
Rule 2     declList -> declList decl
Rule 3     declList -> decl
Rule 4     decl -> varDecl
Rule 5     decl -> funDecl
Rule 6     decl -> LINEAS
Rule 7     varDecl -> typeSpec varDeclList SEMICOLON
Rule 8     scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON
Rule 9     scopedVarDecl -> typeSpec varDeclList SEMICOLON
Rule 10    varDeclList -> varDeclList COMA varDeclInit
Rule 11    varDeclList -> varDeclInit
Rule 12    varDeclInit -> varDeclId
Rule 13    varDeclInit -> varDeclId COLON simpleExp
Rule 14    varDeclId -> VARIABLE
Rule 15    varDeclId -> VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO
Rule 16    typeSpec -> TIPO_ENTERO
Rule 17    typeSpec -> PALABRA_RESERVADA_BOOL
Rule 18    typeSpec -> TIPO_CARACTER
Rule 19    funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt
Rule 20    funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt
Rule 21    parms -> parmList
Rule 22    parms -> eps
Rule 23    parmList -> parmList SEMICOLON parmTypeList
Rule 24    parmList -> parmTypeList
Rule 25    parmTypeList -> typeSpec parmIdList
Rule 26    parmIdList -> parmIdList COMA parmId
Rule 27    parmIdList -> parmId
Rule 28    parmId -> VARIABLE
Rule 29    parmId -> VARIABLE CORCHETE_IZQUIERDO CORCHETE_DERECHO
Rule 30    stmt -> expStmt
Rule 31    stmt -> compoundStmt
Rule 32    stmt -> selectStmt
Rule 33    stmt -> iterStmt
Rule 34    stmt -> returnStmt
Rule 35    stmt -> breakStmt
Rule 36    expStmt -> exp SEMICOLON
Rule 37    expStmt -> SEMICOLON
Rule 38    compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER
Rule 39    localDecls -> localDecls scopedVarDecl
Rule 40    localDecls -> eps
Rule 41    stmtList -> stmtList stmt
Rule 42    stmtList -> eps
Rule 43    selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt
Rule 44    selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
Rule 45    iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt
Rule 46    iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt
Rule 47    iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp
Rule 48    iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp PALABRA_RESERVADA_BY simpleExp
Rule 49    returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON
Rule 50    returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON
Rule 51    breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON
Rule 52    exp -> mutable ASIGNACION exp
Rule 53    exp -> mutable SUMA_RESULTADO exp
Rule 54    exp -> mutable RESTA_RESULTADO exp
Rule 55    exp -> mutable MULTI_RESULTADO exp
Rule 56    exp -> mutable DIVI_RESULTADO exp
Rule 57    exp -> mutable INCREMENTO
Rule 58    exp -> mutable DECREMENTO
Rule 59    exp -> simpleExp
Rule 60    simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp
Rule 61    simpleExp -> andExp
Rule 62    andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp
Rule 63    andExp -> unaryRelExp
Rule 64    unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp
Rule 65    unaryRelExp -> relExp
Rule 66    relExp -> minmaxExp relop minmaxExp
Rule 67    relExp -> minmaxExp
Rule 68    relop -> MENOR_IGUAL
Rule 69    relop -> MENOR
Rule 70    relop -> MAYOR
Rule 71    relop -> MAYOR_IGUAL
Rule 72    relop -> IGUAL
Rule 73    relop -> DISTINTO
Rule 74    minmaxExp -> minmaxExp minmaxop sumExp
Rule 75    minmaxExp -> sumExp
Rule 76    minmaxop -> PUNTOS_MAYOR_PUNTOS
Rule 77    minmaxop -> PUNTOS_MENOR_PUNTOS
Rule 78    sumExp -> sumExp sumop mulExp
Rule 79    sumExp -> mulExp
Rule 80    sumop -> OPERADOR_SUMA
Rule 81    sumop -> OPERADOR_RESTA
Rule 82    mulExp -> mulExp mulop unaryExp
Rule 83    mulExp -> unaryExp
Rule 84    mulop -> OPERADOR_MULTIPLICAR
Rule 85    mulop -> OPERADOR_DIVIDIR
Rule 86    mulop -> OPERADOR_MODULO
Rule 87    unaryExp -> unaryop unaryExp
Rule 88    unaryExp -> factor
Rule 89    unaryop -> OPERADOR_RESTA
Rule 90    unaryop -> OPERADOR_MULTIPLICAR
Rule 91    unaryop -> OP_TERNARIO
Rule 92    factor -> immutable
Rule 93    factor -> mutable
Rule 94    mutable -> VARIABLE
Rule 95    mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
Rule 96    immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
Rule 97    immutable -> call
Rule 98    immutable -> constant
Rule 99    call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
Rule 100   args -> argList
Rule 101   args -> eps
Rule 102   argList -> argList COMA exp
Rule 103   argList -> exp
Rule 104   constant -> NUMERO_ENTERO
Rule 105   constant -> NUMERO_DECIMAL
Rule 106   constant -> CARACTER
Rule 107   constant -> CADENA
Rule 108   constant -> PALABRA_RESERVADA_TRUE
Rule 109   constant -> PALABRA_RESERVADA_FALSE
Rule 110   eps -> <empty>

Terminals, with rules where they appear

ASIGNACION           : 46 52
BUCLE_FOR            : 46
BUCLE_WHILE          : 45
CADENA               : 107
CARACTER             : 106
CARACTER_ERROR       : 
COLON                : 13
COMA                 : 10 26 102
COMENTARIOS          : 
COMENTARIO_BLOQUE    : 
CORCHETE_DERECHO     : 15 29 95
CORCHETE_IZQUIERDO   : 15 29 95
DECREMENTO           : 58
DISTINTO             : 73
DIVI_RESULTADO       : 56
ENTERO_SOBREPASADO   : 
IGUAL                : 72
INCREMENTO           : 57
LINEAS               : 6
LLAVE_DER            : 38
LLAVE_IZQ            : 38
MAYOR                : 70
MAYOR_IGUAL          : 71
MENOR                : 69
MENOR_IGUAL          : 68
MULTI_RESULTADO      : 55
NUMERO_DECIMAL       : 105
NUMERO_DECIMAL_CON_ERROR : 
NUMERO_DECIMAL_CON_ERROR2 : 
NUMERO_ENTERO        : 15 104
OPERADOR_DIVIDIR     : 85
OPERADOR_MODULO      : 86
OPERADOR_MULTIPLICAR : 84 90
OPERADOR_RESTA       : 81 89
OPERADOR_SUMA        : 80
OP_TERNARIO          : 91
PALABRA_RESERVADA_AND : 62
PALABRA_RESERVADA_BOOL : 17
PALABRA_RESERVADA_BREAK : 51
PALABRA_RESERVADA_BY : 48
PALABRA_RESERVADA_DO : 45 46
PALABRA_RESERVADA_ELSE : 44
PALABRA_RESERVADA_FALSE : 109
PALABRA_RESERVADA_IF : 43 44
PALABRA_RESERVADA_MAIN : 
PALABRA_RESERVADA_NOT : 64
PALABRA_RESERVADA_NULL : 
PALABRA_RESERVADA_OR : 60
PALABRA_RESERVADA_RETURN : 49 50
PALABRA_RESERVADA_STATIC : 8
PALABRA_RESERVADA_THEN : 43 44
PALABRA_RESERVADA_TO : 47 48
PALABRA_RESERVADA_TRUE : 108
PARENTESIS_DERECHO   : 19 20 96 99
PARENTESIS_IZQUIERDO : 19 20 96 99
PUNTOS_MAYOR_PUNTOS  : 76
PUNTOS_MENOR_PUNTOS  : 77
RESTA_RESULTADO      : 54
SEMICOLON            : 7 8 9 23 36 37 49 50 51
SUMA_RESULTADO       : 53
TIPO_CARACTER        : 18
TIPO_DECIMAL         : 
TIPO_ENTERO          : 16
VARIABLE             : 14 15 19 20 28 29 46 94 95 99
VARIABLE_ERROR       : 
error                : 

Nonterminals, with rules where they appear

andExp               : 60 61 62
argList              : 100 102
args                 : 99
breakStmt            : 35
call                 : 97
compoundStmt         : 31
constant             : 98
decl                 : 2 3
declList             : 1 2
eps                  : 22 40 42 101
exp                  : 36 50 52 53 54 55 56 95 96 102 103
expStmt              : 30
factor               : 88
funDecl              : 5
immutable            : 92
iterRange            : 46
iterStmt             : 33
localDecls           : 38 39
minmaxExp            : 66 66 67 74
minmaxop             : 74
mulExp               : 78 79 82
mulop                : 82
mutable              : 52 53 54 55 56 57 58 93
parmId               : 26 27
parmIdList           : 25 26
parmList             : 21 23
parmTypeList         : 23 24
parms                : 19 20
program              : 0
relExp               : 65
relop                : 66
returnStmt           : 34
scopedVarDecl        : 39
selectStmt           : 32
simpleExp            : 13 43 44 45 47 47 48 48 48 59 60
stmt                 : 19 20 41 43 44 44 45 46
stmtList             : 38 41
sumExp               : 74 75 78
sumop                : 78
typeSpec             : 7 8 9 19 25
unaryExp             : 82 83 87
unaryRelExp          : 62 63 64
unaryop              : 87
varDecl              : 4
varDeclId            : 12 13
varDeclInit          : 10 11
varDeclList          : 7 8 9 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declList
    (2) declList -> . declList decl
    (3) declList -> . decl
    (4) decl -> . varDecl
    (5) decl -> . funDecl
    (6) decl -> . LINEAS
    (7) varDecl -> . typeSpec varDeclList SEMICOLON
    (19) funDecl -> . typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt
    (20) funDecl -> . VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt
    (16) typeSpec -> . TIPO_ENTERO
    (17) typeSpec -> . PALABRA_RESERVADA_BOOL
    (18) typeSpec -> . TIPO_CARACTER

    LINEAS          shift and go to state 6
    VARIABLE        shift and go to state 8
    TIPO_ENTERO     shift and go to state 9
    PALABRA_RESERVADA_BOOL shift and go to state 10
    TIPO_CARACTER   shift and go to state 11

    program                        shift and go to state 1
    declList                       shift and go to state 2
    decl                           shift and go to state 3
    varDecl                        shift and go to state 4
    funDecl                        shift and go to state 5
    typeSpec                       shift and go to state 7

state 1

    (0) S' -> program .



state 2

    (1) program -> declList .
    (2) declList -> declList . decl
    (4) decl -> . varDecl
    (5) decl -> . funDecl
    (6) decl -> . LINEAS
    (7) varDecl -> . typeSpec varDeclList SEMICOLON
    (19) funDecl -> . typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt
    (20) funDecl -> . VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt
    (16) typeSpec -> . TIPO_ENTERO
    (17) typeSpec -> . PALABRA_RESERVADA_BOOL
    (18) typeSpec -> . TIPO_CARACTER

    $end            reduce using rule 1 (program -> declList .)
    LINEAS          shift and go to state 6
    VARIABLE        shift and go to state 8
    TIPO_ENTERO     shift and go to state 9
    PALABRA_RESERVADA_BOOL shift and go to state 10
    TIPO_CARACTER   shift and go to state 11

    decl                           shift and go to state 12
    varDecl                        shift and go to state 4
    funDecl                        shift and go to state 5
    typeSpec                       shift and go to state 7

state 3

    (3) declList -> decl .

    LINEAS          reduce using rule 3 (declList -> decl .)
    VARIABLE        reduce using rule 3 (declList -> decl .)
    TIPO_ENTERO     reduce using rule 3 (declList -> decl .)
    PALABRA_RESERVADA_BOOL reduce using rule 3 (declList -> decl .)
    TIPO_CARACTER   reduce using rule 3 (declList -> decl .)
    $end            reduce using rule 3 (declList -> decl .)


state 4

    (4) decl -> varDecl .

    LINEAS          reduce using rule 4 (decl -> varDecl .)
    VARIABLE        reduce using rule 4 (decl -> varDecl .)
    TIPO_ENTERO     reduce using rule 4 (decl -> varDecl .)
    PALABRA_RESERVADA_BOOL reduce using rule 4 (decl -> varDecl .)
    TIPO_CARACTER   reduce using rule 4 (decl -> varDecl .)
    $end            reduce using rule 4 (decl -> varDecl .)


state 5

    (5) decl -> funDecl .

    LINEAS          reduce using rule 5 (decl -> funDecl .)
    VARIABLE        reduce using rule 5 (decl -> funDecl .)
    TIPO_ENTERO     reduce using rule 5 (decl -> funDecl .)
    PALABRA_RESERVADA_BOOL reduce using rule 5 (decl -> funDecl .)
    TIPO_CARACTER   reduce using rule 5 (decl -> funDecl .)
    $end            reduce using rule 5 (decl -> funDecl .)


state 6

    (6) decl -> LINEAS .

    LINEAS          reduce using rule 6 (decl -> LINEAS .)
    VARIABLE        reduce using rule 6 (decl -> LINEAS .)
    TIPO_ENTERO     reduce using rule 6 (decl -> LINEAS .)
    PALABRA_RESERVADA_BOOL reduce using rule 6 (decl -> LINEAS .)
    TIPO_CARACTER   reduce using rule 6 (decl -> LINEAS .)
    $end            reduce using rule 6 (decl -> LINEAS .)


state 7

    (7) varDecl -> typeSpec . varDeclList SEMICOLON
    (19) funDecl -> typeSpec . VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt
    (10) varDeclList -> . varDeclList COMA varDeclInit
    (11) varDeclList -> . varDeclInit
    (12) varDeclInit -> . varDeclId
    (13) varDeclInit -> . varDeclId COLON simpleExp
    (14) varDeclId -> . VARIABLE
    (15) varDeclId -> . VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO

    VARIABLE        shift and go to state 14

    varDeclList                    shift and go to state 13
    varDeclInit                    shift and go to state 15
    varDeclId                      shift and go to state 16

state 8

    (20) funDecl -> VARIABLE . PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt

    PARENTESIS_IZQUIERDO shift and go to state 17


state 9

    (16) typeSpec -> TIPO_ENTERO .

    VARIABLE        reduce using rule 16 (typeSpec -> TIPO_ENTERO .)


state 10

    (17) typeSpec -> PALABRA_RESERVADA_BOOL .

    VARIABLE        reduce using rule 17 (typeSpec -> PALABRA_RESERVADA_BOOL .)


state 11

    (18) typeSpec -> TIPO_CARACTER .

    VARIABLE        reduce using rule 18 (typeSpec -> TIPO_CARACTER .)


state 12

    (2) declList -> declList decl .

    LINEAS          reduce using rule 2 (declList -> declList decl .)
    VARIABLE        reduce using rule 2 (declList -> declList decl .)
    TIPO_ENTERO     reduce using rule 2 (declList -> declList decl .)
    PALABRA_RESERVADA_BOOL reduce using rule 2 (declList -> declList decl .)
    TIPO_CARACTER   reduce using rule 2 (declList -> declList decl .)
    $end            reduce using rule 2 (declList -> declList decl .)


state 13

    (7) varDecl -> typeSpec varDeclList . SEMICOLON
    (10) varDeclList -> varDeclList . COMA varDeclInit

    SEMICOLON       shift and go to state 18
    COMA            shift and go to state 19


state 14

    (19) funDecl -> typeSpec VARIABLE . PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt
    (14) varDeclId -> VARIABLE .
    (15) varDeclId -> VARIABLE . CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO

    PARENTESIS_IZQUIERDO shift and go to state 20
    COLON           reduce using rule 14 (varDeclId -> VARIABLE .)
    SEMICOLON       reduce using rule 14 (varDeclId -> VARIABLE .)
    COMA            reduce using rule 14 (varDeclId -> VARIABLE .)
    CORCHETE_IZQUIERDO shift and go to state 21


state 15

    (11) varDeclList -> varDeclInit .

    SEMICOLON       reduce using rule 11 (varDeclList -> varDeclInit .)
    COMA            reduce using rule 11 (varDeclList -> varDeclInit .)


state 16

    (12) varDeclInit -> varDeclId .
    (13) varDeclInit -> varDeclId . COLON simpleExp

    SEMICOLON       reduce using rule 12 (varDeclInit -> varDeclId .)
    COMA            reduce using rule 12 (varDeclInit -> varDeclId .)
    COLON           shift and go to state 22


state 17

    (20) funDecl -> VARIABLE PARENTESIS_IZQUIERDO . parms PARENTESIS_DERECHO stmt
    (21) parms -> . parmList
    (22) parms -> . eps
    (23) parmList -> . parmList SEMICOLON parmTypeList
    (24) parmList -> . parmTypeList
    (110) eps -> .
    (25) parmTypeList -> . typeSpec parmIdList
    (16) typeSpec -> . TIPO_ENTERO
    (17) typeSpec -> . PALABRA_RESERVADA_BOOL
    (18) typeSpec -> . TIPO_CARACTER

    PARENTESIS_DERECHO reduce using rule 110 (eps -> .)
    TIPO_ENTERO     shift and go to state 9
    PALABRA_RESERVADA_BOOL shift and go to state 10
    TIPO_CARACTER   shift and go to state 11

    parms                          shift and go to state 23
    parmList                       shift and go to state 24
    eps                            shift and go to state 25
    parmTypeList                   shift and go to state 26
    typeSpec                       shift and go to state 27

state 18

    (7) varDecl -> typeSpec varDeclList SEMICOLON .

    LINEAS          reduce using rule 7 (varDecl -> typeSpec varDeclList SEMICOLON .)
    VARIABLE        reduce using rule 7 (varDecl -> typeSpec varDeclList SEMICOLON .)
    TIPO_ENTERO     reduce using rule 7 (varDecl -> typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_BOOL reduce using rule 7 (varDecl -> typeSpec varDeclList SEMICOLON .)
    TIPO_CARACTER   reduce using rule 7 (varDecl -> typeSpec varDeclList SEMICOLON .)
    $end            reduce using rule 7 (varDecl -> typeSpec varDeclList SEMICOLON .)


state 19

    (10) varDeclList -> varDeclList COMA . varDeclInit
    (12) varDeclInit -> . varDeclId
    (13) varDeclInit -> . varDeclId COLON simpleExp
    (14) varDeclId -> . VARIABLE
    (15) varDeclId -> . VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO

    VARIABLE        shift and go to state 29

    varDeclInit                    shift and go to state 28
    varDeclId                      shift and go to state 16

state 20

    (19) funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO . parms PARENTESIS_DERECHO stmt
    (21) parms -> . parmList
    (22) parms -> . eps
    (23) parmList -> . parmList SEMICOLON parmTypeList
    (24) parmList -> . parmTypeList
    (110) eps -> .
    (25) parmTypeList -> . typeSpec parmIdList
    (16) typeSpec -> . TIPO_ENTERO
    (17) typeSpec -> . PALABRA_RESERVADA_BOOL
    (18) typeSpec -> . TIPO_CARACTER

    PARENTESIS_DERECHO reduce using rule 110 (eps -> .)
    TIPO_ENTERO     shift and go to state 9
    PALABRA_RESERVADA_BOOL shift and go to state 10
    TIPO_CARACTER   shift and go to state 11

    typeSpec                       shift and go to state 27
    parms                          shift and go to state 30
    parmList                       shift and go to state 24
    eps                            shift and go to state 25
    parmTypeList                   shift and go to state 26

state 21

    (15) varDeclId -> VARIABLE CORCHETE_IZQUIERDO . NUMERO_ENTERO CORCHETE_DERECHO

    NUMERO_ENTERO   shift and go to state 31


state 22

    (13) varDeclInit -> varDeclId COLON . simpleExp
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    VARIABLE        shift and go to state 51
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    simpleExp                      shift and go to state 32
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    mutable                        shift and go to state 47
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 23

    (20) funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms . PARENTESIS_DERECHO stmt

    PARENTESIS_DERECHO shift and go to state 58


state 24

    (21) parms -> parmList .
    (23) parmList -> parmList . SEMICOLON parmTypeList

    PARENTESIS_DERECHO reduce using rule 21 (parms -> parmList .)
    SEMICOLON       shift and go to state 59


state 25

    (22) parms -> eps .

    PARENTESIS_DERECHO reduce using rule 22 (parms -> eps .)


state 26

    (24) parmList -> parmTypeList .

    SEMICOLON       reduce using rule 24 (parmList -> parmTypeList .)
    PARENTESIS_DERECHO reduce using rule 24 (parmList -> parmTypeList .)


state 27

    (25) parmTypeList -> typeSpec . parmIdList
    (26) parmIdList -> . parmIdList COMA parmId
    (27) parmIdList -> . parmId
    (28) parmId -> . VARIABLE
    (29) parmId -> . VARIABLE CORCHETE_IZQUIERDO CORCHETE_DERECHO

    VARIABLE        shift and go to state 62

    parmIdList                     shift and go to state 60
    parmId                         shift and go to state 61

state 28

    (10) varDeclList -> varDeclList COMA varDeclInit .

    SEMICOLON       reduce using rule 10 (varDeclList -> varDeclList COMA varDeclInit .)
    COMA            reduce using rule 10 (varDeclList -> varDeclList COMA varDeclInit .)


state 29

    (14) varDeclId -> VARIABLE .
    (15) varDeclId -> VARIABLE . CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO

    COLON           reduce using rule 14 (varDeclId -> VARIABLE .)
    SEMICOLON       reduce using rule 14 (varDeclId -> VARIABLE .)
    COMA            reduce using rule 14 (varDeclId -> VARIABLE .)
    CORCHETE_IZQUIERDO shift and go to state 21


state 30

    (19) funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms . PARENTESIS_DERECHO stmt

    PARENTESIS_DERECHO shift and go to state 63


state 31

    (15) varDeclId -> VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO . CORCHETE_DERECHO

    CORCHETE_DERECHO shift and go to state 64


state 32

    (13) varDeclInit -> varDeclId COLON simpleExp .
    (60) simpleExp -> simpleExp . PALABRA_RESERVADA_OR andExp

    SEMICOLON       reduce using rule 13 (varDeclInit -> varDeclId COLON simpleExp .)
    COMA            reduce using rule 13 (varDeclInit -> varDeclId COLON simpleExp .)
    PALABRA_RESERVADA_OR shift and go to state 65


state 33

    (61) simpleExp -> andExp .
    (62) andExp -> andExp . PALABRA_RESERVADA_AND unaryRelExp

    PALABRA_RESERVADA_OR reduce using rule 61 (simpleExp -> andExp .)
    SEMICOLON       reduce using rule 61 (simpleExp -> andExp .)
    COMA            reduce using rule 61 (simpleExp -> andExp .)
    PARENTESIS_DERECHO reduce using rule 61 (simpleExp -> andExp .)
    CORCHETE_DERECHO reduce using rule 61 (simpleExp -> andExp .)
    PALABRA_RESERVADA_THEN reduce using rule 61 (simpleExp -> andExp .)
    PALABRA_RESERVADA_DO reduce using rule 61 (simpleExp -> andExp .)
    PALABRA_RESERVADA_TO reduce using rule 61 (simpleExp -> andExp .)
    PALABRA_RESERVADA_BY reduce using rule 61 (simpleExp -> andExp .)
    PALABRA_RESERVADA_AND shift and go to state 66


state 34

    (63) andExp -> unaryRelExp .

    PALABRA_RESERVADA_AND reduce using rule 63 (andExp -> unaryRelExp .)
    PALABRA_RESERVADA_OR reduce using rule 63 (andExp -> unaryRelExp .)
    SEMICOLON       reduce using rule 63 (andExp -> unaryRelExp .)
    COMA            reduce using rule 63 (andExp -> unaryRelExp .)
    PARENTESIS_DERECHO reduce using rule 63 (andExp -> unaryRelExp .)
    CORCHETE_DERECHO reduce using rule 63 (andExp -> unaryRelExp .)
    PALABRA_RESERVADA_THEN reduce using rule 63 (andExp -> unaryRelExp .)
    PALABRA_RESERVADA_DO reduce using rule 63 (andExp -> unaryRelExp .)
    PALABRA_RESERVADA_TO reduce using rule 63 (andExp -> unaryRelExp .)
    PALABRA_RESERVADA_BY reduce using rule 63 (andExp -> unaryRelExp .)


state 35

    (64) unaryRelExp -> PALABRA_RESERVADA_NOT . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    VARIABLE        shift and go to state 51
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    unaryRelExp                    shift and go to state 67
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    mutable                        shift and go to state 47
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 36

    (65) unaryRelExp -> relExp .

    PALABRA_RESERVADA_AND reduce using rule 65 (unaryRelExp -> relExp .)
    PALABRA_RESERVADA_OR reduce using rule 65 (unaryRelExp -> relExp .)
    SEMICOLON       reduce using rule 65 (unaryRelExp -> relExp .)
    COMA            reduce using rule 65 (unaryRelExp -> relExp .)
    PARENTESIS_DERECHO reduce using rule 65 (unaryRelExp -> relExp .)
    CORCHETE_DERECHO reduce using rule 65 (unaryRelExp -> relExp .)
    PALABRA_RESERVADA_THEN reduce using rule 65 (unaryRelExp -> relExp .)
    PALABRA_RESERVADA_DO reduce using rule 65 (unaryRelExp -> relExp .)
    PALABRA_RESERVADA_TO reduce using rule 65 (unaryRelExp -> relExp .)
    PALABRA_RESERVADA_BY reduce using rule 65 (unaryRelExp -> relExp .)


state 37

    (66) relExp -> minmaxExp . relop minmaxExp
    (67) relExp -> minmaxExp .
    (74) minmaxExp -> minmaxExp . minmaxop sumExp
    (68) relop -> . MENOR_IGUAL
    (69) relop -> . MENOR
    (70) relop -> . MAYOR
    (71) relop -> . MAYOR_IGUAL
    (72) relop -> . IGUAL
    (73) relop -> . DISTINTO
    (76) minmaxop -> . PUNTOS_MAYOR_PUNTOS
    (77) minmaxop -> . PUNTOS_MENOR_PUNTOS

    PALABRA_RESERVADA_AND reduce using rule 67 (relExp -> minmaxExp .)
    PALABRA_RESERVADA_OR reduce using rule 67 (relExp -> minmaxExp .)
    SEMICOLON       reduce using rule 67 (relExp -> minmaxExp .)
    COMA            reduce using rule 67 (relExp -> minmaxExp .)
    PARENTESIS_DERECHO reduce using rule 67 (relExp -> minmaxExp .)
    CORCHETE_DERECHO reduce using rule 67 (relExp -> minmaxExp .)
    PALABRA_RESERVADA_THEN reduce using rule 67 (relExp -> minmaxExp .)
    PALABRA_RESERVADA_DO reduce using rule 67 (relExp -> minmaxExp .)
    PALABRA_RESERVADA_TO reduce using rule 67 (relExp -> minmaxExp .)
    PALABRA_RESERVADA_BY reduce using rule 67 (relExp -> minmaxExp .)
    MENOR_IGUAL     shift and go to state 70
    MENOR           shift and go to state 71
    MAYOR           shift and go to state 72
    MAYOR_IGUAL     shift and go to state 73
    IGUAL           shift and go to state 74
    DISTINTO        shift and go to state 75
    PUNTOS_MAYOR_PUNTOS shift and go to state 76
    PUNTOS_MENOR_PUNTOS shift and go to state 77

    relop                          shift and go to state 68
    minmaxop                       shift and go to state 69

state 38

    (75) minmaxExp -> sumExp .
    (78) sumExp -> sumExp . sumop mulExp
    (80) sumop -> . OPERADOR_SUMA
    (81) sumop -> . OPERADOR_RESTA

    MENOR_IGUAL     reduce using rule 75 (minmaxExp -> sumExp .)
    MENOR           reduce using rule 75 (minmaxExp -> sumExp .)
    MAYOR           reduce using rule 75 (minmaxExp -> sumExp .)
    MAYOR_IGUAL     reduce using rule 75 (minmaxExp -> sumExp .)
    IGUAL           reduce using rule 75 (minmaxExp -> sumExp .)
    DISTINTO        reduce using rule 75 (minmaxExp -> sumExp .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 75 (minmaxExp -> sumExp .)
    PUNTOS_MENOR_PUNTOS reduce using rule 75 (minmaxExp -> sumExp .)
    PALABRA_RESERVADA_AND reduce using rule 75 (minmaxExp -> sumExp .)
    PALABRA_RESERVADA_OR reduce using rule 75 (minmaxExp -> sumExp .)
    SEMICOLON       reduce using rule 75 (minmaxExp -> sumExp .)
    COMA            reduce using rule 75 (minmaxExp -> sumExp .)
    PARENTESIS_DERECHO reduce using rule 75 (minmaxExp -> sumExp .)
    CORCHETE_DERECHO reduce using rule 75 (minmaxExp -> sumExp .)
    PALABRA_RESERVADA_THEN reduce using rule 75 (minmaxExp -> sumExp .)
    PALABRA_RESERVADA_DO reduce using rule 75 (minmaxExp -> sumExp .)
    PALABRA_RESERVADA_TO reduce using rule 75 (minmaxExp -> sumExp .)
    PALABRA_RESERVADA_BY reduce using rule 75 (minmaxExp -> sumExp .)
    OPERADOR_SUMA   shift and go to state 79
    OPERADOR_RESTA  shift and go to state 80

    sumop                          shift and go to state 78

state 39

    (79) sumExp -> mulExp .
    (82) mulExp -> mulExp . mulop unaryExp
    (84) mulop -> . OPERADOR_MULTIPLICAR
    (85) mulop -> . OPERADOR_DIVIDIR
    (86) mulop -> . OPERADOR_MODULO

    OPERADOR_SUMA   reduce using rule 79 (sumExp -> mulExp .)
    OPERADOR_RESTA  reduce using rule 79 (sumExp -> mulExp .)
    MENOR_IGUAL     reduce using rule 79 (sumExp -> mulExp .)
    MENOR           reduce using rule 79 (sumExp -> mulExp .)
    MAYOR           reduce using rule 79 (sumExp -> mulExp .)
    MAYOR_IGUAL     reduce using rule 79 (sumExp -> mulExp .)
    IGUAL           reduce using rule 79 (sumExp -> mulExp .)
    DISTINTO        reduce using rule 79 (sumExp -> mulExp .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 79 (sumExp -> mulExp .)
    PUNTOS_MENOR_PUNTOS reduce using rule 79 (sumExp -> mulExp .)
    PALABRA_RESERVADA_AND reduce using rule 79 (sumExp -> mulExp .)
    PALABRA_RESERVADA_OR reduce using rule 79 (sumExp -> mulExp .)
    SEMICOLON       reduce using rule 79 (sumExp -> mulExp .)
    COMA            reduce using rule 79 (sumExp -> mulExp .)
    PARENTESIS_DERECHO reduce using rule 79 (sumExp -> mulExp .)
    CORCHETE_DERECHO reduce using rule 79 (sumExp -> mulExp .)
    PALABRA_RESERVADA_THEN reduce using rule 79 (sumExp -> mulExp .)
    PALABRA_RESERVADA_DO reduce using rule 79 (sumExp -> mulExp .)
    PALABRA_RESERVADA_TO reduce using rule 79 (sumExp -> mulExp .)
    PALABRA_RESERVADA_BY reduce using rule 79 (sumExp -> mulExp .)
    OPERADOR_MULTIPLICAR shift and go to state 82
    OPERADOR_DIVIDIR shift and go to state 83
    OPERADOR_MODULO shift and go to state 84

    mulop                          shift and go to state 81

state 40

    (83) mulExp -> unaryExp .

    OPERADOR_MULTIPLICAR reduce using rule 83 (mulExp -> unaryExp .)
    OPERADOR_DIVIDIR reduce using rule 83 (mulExp -> unaryExp .)
    OPERADOR_MODULO reduce using rule 83 (mulExp -> unaryExp .)
    OPERADOR_SUMA   reduce using rule 83 (mulExp -> unaryExp .)
    OPERADOR_RESTA  reduce using rule 83 (mulExp -> unaryExp .)
    MENOR_IGUAL     reduce using rule 83 (mulExp -> unaryExp .)
    MENOR           reduce using rule 83 (mulExp -> unaryExp .)
    MAYOR           reduce using rule 83 (mulExp -> unaryExp .)
    MAYOR_IGUAL     reduce using rule 83 (mulExp -> unaryExp .)
    IGUAL           reduce using rule 83 (mulExp -> unaryExp .)
    DISTINTO        reduce using rule 83 (mulExp -> unaryExp .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 83 (mulExp -> unaryExp .)
    PUNTOS_MENOR_PUNTOS reduce using rule 83 (mulExp -> unaryExp .)
    PALABRA_RESERVADA_AND reduce using rule 83 (mulExp -> unaryExp .)
    PALABRA_RESERVADA_OR reduce using rule 83 (mulExp -> unaryExp .)
    SEMICOLON       reduce using rule 83 (mulExp -> unaryExp .)
    COMA            reduce using rule 83 (mulExp -> unaryExp .)
    PARENTESIS_DERECHO reduce using rule 83 (mulExp -> unaryExp .)
    CORCHETE_DERECHO reduce using rule 83 (mulExp -> unaryExp .)
    PALABRA_RESERVADA_THEN reduce using rule 83 (mulExp -> unaryExp .)
    PALABRA_RESERVADA_DO reduce using rule 83 (mulExp -> unaryExp .)
    PALABRA_RESERVADA_TO reduce using rule 83 (mulExp -> unaryExp .)
    PALABRA_RESERVADA_BY reduce using rule 83 (mulExp -> unaryExp .)


state 41

    (87) unaryExp -> unaryop . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    VARIABLE        shift and go to state 51
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    unaryop                        shift and go to state 41
    unaryExp                       shift and go to state 85
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    mutable                        shift and go to state 47
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 42

    (88) unaryExp -> factor .

    OPERADOR_MULTIPLICAR reduce using rule 88 (unaryExp -> factor .)
    OPERADOR_DIVIDIR reduce using rule 88 (unaryExp -> factor .)
    OPERADOR_MODULO reduce using rule 88 (unaryExp -> factor .)
    OPERADOR_SUMA   reduce using rule 88 (unaryExp -> factor .)
    OPERADOR_RESTA  reduce using rule 88 (unaryExp -> factor .)
    MENOR_IGUAL     reduce using rule 88 (unaryExp -> factor .)
    MENOR           reduce using rule 88 (unaryExp -> factor .)
    MAYOR           reduce using rule 88 (unaryExp -> factor .)
    MAYOR_IGUAL     reduce using rule 88 (unaryExp -> factor .)
    IGUAL           reduce using rule 88 (unaryExp -> factor .)
    DISTINTO        reduce using rule 88 (unaryExp -> factor .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 88 (unaryExp -> factor .)
    PUNTOS_MENOR_PUNTOS reduce using rule 88 (unaryExp -> factor .)
    PALABRA_RESERVADA_AND reduce using rule 88 (unaryExp -> factor .)
    PALABRA_RESERVADA_OR reduce using rule 88 (unaryExp -> factor .)
    SEMICOLON       reduce using rule 88 (unaryExp -> factor .)
    COMA            reduce using rule 88 (unaryExp -> factor .)
    PARENTESIS_DERECHO reduce using rule 88 (unaryExp -> factor .)
    CORCHETE_DERECHO reduce using rule 88 (unaryExp -> factor .)
    PALABRA_RESERVADA_THEN reduce using rule 88 (unaryExp -> factor .)
    PALABRA_RESERVADA_DO reduce using rule 88 (unaryExp -> factor .)
    PALABRA_RESERVADA_TO reduce using rule 88 (unaryExp -> factor .)
    PALABRA_RESERVADA_BY reduce using rule 88 (unaryExp -> factor .)


state 43

    (89) unaryop -> OPERADOR_RESTA .

    OPERADOR_RESTA  reduce using rule 89 (unaryop -> OPERADOR_RESTA .)
    OPERADOR_MULTIPLICAR reduce using rule 89 (unaryop -> OPERADOR_RESTA .)
    OP_TERNARIO     reduce using rule 89 (unaryop -> OPERADOR_RESTA .)
    PARENTESIS_IZQUIERDO reduce using rule 89 (unaryop -> OPERADOR_RESTA .)
    VARIABLE        reduce using rule 89 (unaryop -> OPERADOR_RESTA .)
    NUMERO_ENTERO   reduce using rule 89 (unaryop -> OPERADOR_RESTA .)
    NUMERO_DECIMAL  reduce using rule 89 (unaryop -> OPERADOR_RESTA .)
    CARACTER        reduce using rule 89 (unaryop -> OPERADOR_RESTA .)
    CADENA          reduce using rule 89 (unaryop -> OPERADOR_RESTA .)
    PALABRA_RESERVADA_TRUE reduce using rule 89 (unaryop -> OPERADOR_RESTA .)
    PALABRA_RESERVADA_FALSE reduce using rule 89 (unaryop -> OPERADOR_RESTA .)


state 44

    (90) unaryop -> OPERADOR_MULTIPLICAR .

    OPERADOR_RESTA  reduce using rule 90 (unaryop -> OPERADOR_MULTIPLICAR .)
    OPERADOR_MULTIPLICAR reduce using rule 90 (unaryop -> OPERADOR_MULTIPLICAR .)
    OP_TERNARIO     reduce using rule 90 (unaryop -> OPERADOR_MULTIPLICAR .)
    PARENTESIS_IZQUIERDO reduce using rule 90 (unaryop -> OPERADOR_MULTIPLICAR .)
    VARIABLE        reduce using rule 90 (unaryop -> OPERADOR_MULTIPLICAR .)
    NUMERO_ENTERO   reduce using rule 90 (unaryop -> OPERADOR_MULTIPLICAR .)
    NUMERO_DECIMAL  reduce using rule 90 (unaryop -> OPERADOR_MULTIPLICAR .)
    CARACTER        reduce using rule 90 (unaryop -> OPERADOR_MULTIPLICAR .)
    CADENA          reduce using rule 90 (unaryop -> OPERADOR_MULTIPLICAR .)
    PALABRA_RESERVADA_TRUE reduce using rule 90 (unaryop -> OPERADOR_MULTIPLICAR .)
    PALABRA_RESERVADA_FALSE reduce using rule 90 (unaryop -> OPERADOR_MULTIPLICAR .)


state 45

    (91) unaryop -> OP_TERNARIO .

    OPERADOR_RESTA  reduce using rule 91 (unaryop -> OP_TERNARIO .)
    OPERADOR_MULTIPLICAR reduce using rule 91 (unaryop -> OP_TERNARIO .)
    OP_TERNARIO     reduce using rule 91 (unaryop -> OP_TERNARIO .)
    PARENTESIS_IZQUIERDO reduce using rule 91 (unaryop -> OP_TERNARIO .)
    VARIABLE        reduce using rule 91 (unaryop -> OP_TERNARIO .)
    NUMERO_ENTERO   reduce using rule 91 (unaryop -> OP_TERNARIO .)
    NUMERO_DECIMAL  reduce using rule 91 (unaryop -> OP_TERNARIO .)
    CARACTER        reduce using rule 91 (unaryop -> OP_TERNARIO .)
    CADENA          reduce using rule 91 (unaryop -> OP_TERNARIO .)
    PALABRA_RESERVADA_TRUE reduce using rule 91 (unaryop -> OP_TERNARIO .)
    PALABRA_RESERVADA_FALSE reduce using rule 91 (unaryop -> OP_TERNARIO .)


state 46

    (92) factor -> immutable .

    OPERADOR_MULTIPLICAR reduce using rule 92 (factor -> immutable .)
    OPERADOR_DIVIDIR reduce using rule 92 (factor -> immutable .)
    OPERADOR_MODULO reduce using rule 92 (factor -> immutable .)
    OPERADOR_SUMA   reduce using rule 92 (factor -> immutable .)
    OPERADOR_RESTA  reduce using rule 92 (factor -> immutable .)
    MENOR_IGUAL     reduce using rule 92 (factor -> immutable .)
    MENOR           reduce using rule 92 (factor -> immutable .)
    MAYOR           reduce using rule 92 (factor -> immutable .)
    MAYOR_IGUAL     reduce using rule 92 (factor -> immutable .)
    IGUAL           reduce using rule 92 (factor -> immutable .)
    DISTINTO        reduce using rule 92 (factor -> immutable .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 92 (factor -> immutable .)
    PUNTOS_MENOR_PUNTOS reduce using rule 92 (factor -> immutable .)
    PALABRA_RESERVADA_AND reduce using rule 92 (factor -> immutable .)
    PALABRA_RESERVADA_OR reduce using rule 92 (factor -> immutable .)
    SEMICOLON       reduce using rule 92 (factor -> immutable .)
    COMA            reduce using rule 92 (factor -> immutable .)
    PARENTESIS_DERECHO reduce using rule 92 (factor -> immutable .)
    CORCHETE_DERECHO reduce using rule 92 (factor -> immutable .)
    PALABRA_RESERVADA_THEN reduce using rule 92 (factor -> immutable .)
    PALABRA_RESERVADA_DO reduce using rule 92 (factor -> immutable .)
    PALABRA_RESERVADA_TO reduce using rule 92 (factor -> immutable .)
    PALABRA_RESERVADA_BY reduce using rule 92 (factor -> immutable .)


state 47

    (93) factor -> mutable .

    OPERADOR_MULTIPLICAR reduce using rule 93 (factor -> mutable .)
    OPERADOR_DIVIDIR reduce using rule 93 (factor -> mutable .)
    OPERADOR_MODULO reduce using rule 93 (factor -> mutable .)
    OPERADOR_SUMA   reduce using rule 93 (factor -> mutable .)
    OPERADOR_RESTA  reduce using rule 93 (factor -> mutable .)
    MENOR_IGUAL     reduce using rule 93 (factor -> mutable .)
    MENOR           reduce using rule 93 (factor -> mutable .)
    MAYOR           reduce using rule 93 (factor -> mutable .)
    MAYOR_IGUAL     reduce using rule 93 (factor -> mutable .)
    IGUAL           reduce using rule 93 (factor -> mutable .)
    DISTINTO        reduce using rule 93 (factor -> mutable .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 93 (factor -> mutable .)
    PUNTOS_MENOR_PUNTOS reduce using rule 93 (factor -> mutable .)
    PALABRA_RESERVADA_AND reduce using rule 93 (factor -> mutable .)
    PALABRA_RESERVADA_OR reduce using rule 93 (factor -> mutable .)
    SEMICOLON       reduce using rule 93 (factor -> mutable .)
    COMA            reduce using rule 93 (factor -> mutable .)
    PARENTESIS_DERECHO reduce using rule 93 (factor -> mutable .)
    CORCHETE_DERECHO reduce using rule 93 (factor -> mutable .)
    PALABRA_RESERVADA_THEN reduce using rule 93 (factor -> mutable .)
    PALABRA_RESERVADA_DO reduce using rule 93 (factor -> mutable .)
    PALABRA_RESERVADA_TO reduce using rule 93 (factor -> mutable .)
    PALABRA_RESERVADA_BY reduce using rule 93 (factor -> mutable .)


state 48

    (96) immutable -> PARENTESIS_IZQUIERDO . exp PARENTESIS_DERECHO
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    exp                            shift and go to state 86
    mutable                        shift and go to state 87
    simpleExp                      shift and go to state 88
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 49

    (97) immutable -> call .

    OPERADOR_MULTIPLICAR reduce using rule 97 (immutable -> call .)
    OPERADOR_DIVIDIR reduce using rule 97 (immutable -> call .)
    OPERADOR_MODULO reduce using rule 97 (immutable -> call .)
    OPERADOR_SUMA   reduce using rule 97 (immutable -> call .)
    OPERADOR_RESTA  reduce using rule 97 (immutable -> call .)
    MENOR_IGUAL     reduce using rule 97 (immutable -> call .)
    MENOR           reduce using rule 97 (immutable -> call .)
    MAYOR           reduce using rule 97 (immutable -> call .)
    MAYOR_IGUAL     reduce using rule 97 (immutable -> call .)
    IGUAL           reduce using rule 97 (immutable -> call .)
    DISTINTO        reduce using rule 97 (immutable -> call .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 97 (immutable -> call .)
    PUNTOS_MENOR_PUNTOS reduce using rule 97 (immutable -> call .)
    PALABRA_RESERVADA_AND reduce using rule 97 (immutable -> call .)
    PALABRA_RESERVADA_OR reduce using rule 97 (immutable -> call .)
    SEMICOLON       reduce using rule 97 (immutable -> call .)
    COMA            reduce using rule 97 (immutable -> call .)
    PARENTESIS_DERECHO reduce using rule 97 (immutable -> call .)
    CORCHETE_DERECHO reduce using rule 97 (immutable -> call .)
    PALABRA_RESERVADA_THEN reduce using rule 97 (immutable -> call .)
    PALABRA_RESERVADA_DO reduce using rule 97 (immutable -> call .)
    PALABRA_RESERVADA_TO reduce using rule 97 (immutable -> call .)
    PALABRA_RESERVADA_BY reduce using rule 97 (immutable -> call .)


state 50

    (98) immutable -> constant .

    OPERADOR_MULTIPLICAR reduce using rule 98 (immutable -> constant .)
    OPERADOR_DIVIDIR reduce using rule 98 (immutable -> constant .)
    OPERADOR_MODULO reduce using rule 98 (immutable -> constant .)
    OPERADOR_SUMA   reduce using rule 98 (immutable -> constant .)
    OPERADOR_RESTA  reduce using rule 98 (immutable -> constant .)
    MENOR_IGUAL     reduce using rule 98 (immutable -> constant .)
    MENOR           reduce using rule 98 (immutable -> constant .)
    MAYOR           reduce using rule 98 (immutable -> constant .)
    MAYOR_IGUAL     reduce using rule 98 (immutable -> constant .)
    IGUAL           reduce using rule 98 (immutable -> constant .)
    DISTINTO        reduce using rule 98 (immutable -> constant .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 98 (immutable -> constant .)
    PUNTOS_MENOR_PUNTOS reduce using rule 98 (immutable -> constant .)
    PALABRA_RESERVADA_AND reduce using rule 98 (immutable -> constant .)
    PALABRA_RESERVADA_OR reduce using rule 98 (immutable -> constant .)
    SEMICOLON       reduce using rule 98 (immutable -> constant .)
    COMA            reduce using rule 98 (immutable -> constant .)
    PARENTESIS_DERECHO reduce using rule 98 (immutable -> constant .)
    CORCHETE_DERECHO reduce using rule 98 (immutable -> constant .)
    PALABRA_RESERVADA_THEN reduce using rule 98 (immutable -> constant .)
    PALABRA_RESERVADA_DO reduce using rule 98 (immutable -> constant .)
    PALABRA_RESERVADA_TO reduce using rule 98 (immutable -> constant .)
    PALABRA_RESERVADA_BY reduce using rule 98 (immutable -> constant .)


state 51

    (94) mutable -> VARIABLE .
    (95) mutable -> VARIABLE . CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (99) call -> VARIABLE . PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO

    OPERADOR_MULTIPLICAR reduce using rule 94 (mutable -> VARIABLE .)
    OPERADOR_DIVIDIR reduce using rule 94 (mutable -> VARIABLE .)
    OPERADOR_MODULO reduce using rule 94 (mutable -> VARIABLE .)
    OPERADOR_SUMA   reduce using rule 94 (mutable -> VARIABLE .)
    OPERADOR_RESTA  reduce using rule 94 (mutable -> VARIABLE .)
    MENOR_IGUAL     reduce using rule 94 (mutable -> VARIABLE .)
    MENOR           reduce using rule 94 (mutable -> VARIABLE .)
    MAYOR           reduce using rule 94 (mutable -> VARIABLE .)
    MAYOR_IGUAL     reduce using rule 94 (mutable -> VARIABLE .)
    IGUAL           reduce using rule 94 (mutable -> VARIABLE .)
    DISTINTO        reduce using rule 94 (mutable -> VARIABLE .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 94 (mutable -> VARIABLE .)
    PUNTOS_MENOR_PUNTOS reduce using rule 94 (mutable -> VARIABLE .)
    PALABRA_RESERVADA_AND reduce using rule 94 (mutable -> VARIABLE .)
    PALABRA_RESERVADA_OR reduce using rule 94 (mutable -> VARIABLE .)
    SEMICOLON       reduce using rule 94 (mutable -> VARIABLE .)
    COMA            reduce using rule 94 (mutable -> VARIABLE .)
    PARENTESIS_DERECHO reduce using rule 94 (mutable -> VARIABLE .)
    CORCHETE_DERECHO reduce using rule 94 (mutable -> VARIABLE .)
    PALABRA_RESERVADA_THEN reduce using rule 94 (mutable -> VARIABLE .)
    PALABRA_RESERVADA_DO reduce using rule 94 (mutable -> VARIABLE .)
    PALABRA_RESERVADA_TO reduce using rule 94 (mutable -> VARIABLE .)
    PALABRA_RESERVADA_BY reduce using rule 94 (mutable -> VARIABLE .)
    ASIGNACION      reduce using rule 94 (mutable -> VARIABLE .)
    SUMA_RESULTADO  reduce using rule 94 (mutable -> VARIABLE .)
    RESTA_RESULTADO reduce using rule 94 (mutable -> VARIABLE .)
    MULTI_RESULTADO reduce using rule 94 (mutable -> VARIABLE .)
    DIVI_RESULTADO  reduce using rule 94 (mutable -> VARIABLE .)
    INCREMENTO      reduce using rule 94 (mutable -> VARIABLE .)
    DECREMENTO      reduce using rule 94 (mutable -> VARIABLE .)
    CORCHETE_IZQUIERDO shift and go to state 89
    PARENTESIS_IZQUIERDO shift and go to state 90


state 52

    (104) constant -> NUMERO_ENTERO .

    OPERADOR_MULTIPLICAR reduce using rule 104 (constant -> NUMERO_ENTERO .)
    OPERADOR_DIVIDIR reduce using rule 104 (constant -> NUMERO_ENTERO .)
    OPERADOR_MODULO reduce using rule 104 (constant -> NUMERO_ENTERO .)
    OPERADOR_SUMA   reduce using rule 104 (constant -> NUMERO_ENTERO .)
    OPERADOR_RESTA  reduce using rule 104 (constant -> NUMERO_ENTERO .)
    MENOR_IGUAL     reduce using rule 104 (constant -> NUMERO_ENTERO .)
    MENOR           reduce using rule 104 (constant -> NUMERO_ENTERO .)
    MAYOR           reduce using rule 104 (constant -> NUMERO_ENTERO .)
    MAYOR_IGUAL     reduce using rule 104 (constant -> NUMERO_ENTERO .)
    IGUAL           reduce using rule 104 (constant -> NUMERO_ENTERO .)
    DISTINTO        reduce using rule 104 (constant -> NUMERO_ENTERO .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 104 (constant -> NUMERO_ENTERO .)
    PUNTOS_MENOR_PUNTOS reduce using rule 104 (constant -> NUMERO_ENTERO .)
    PALABRA_RESERVADA_AND reduce using rule 104 (constant -> NUMERO_ENTERO .)
    PALABRA_RESERVADA_OR reduce using rule 104 (constant -> NUMERO_ENTERO .)
    SEMICOLON       reduce using rule 104 (constant -> NUMERO_ENTERO .)
    COMA            reduce using rule 104 (constant -> NUMERO_ENTERO .)
    PARENTESIS_DERECHO reduce using rule 104 (constant -> NUMERO_ENTERO .)
    CORCHETE_DERECHO reduce using rule 104 (constant -> NUMERO_ENTERO .)
    PALABRA_RESERVADA_THEN reduce using rule 104 (constant -> NUMERO_ENTERO .)
    PALABRA_RESERVADA_DO reduce using rule 104 (constant -> NUMERO_ENTERO .)
    PALABRA_RESERVADA_TO reduce using rule 104 (constant -> NUMERO_ENTERO .)
    PALABRA_RESERVADA_BY reduce using rule 104 (constant -> NUMERO_ENTERO .)


state 53

    (105) constant -> NUMERO_DECIMAL .

    OPERADOR_MULTIPLICAR reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    OPERADOR_DIVIDIR reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    OPERADOR_MODULO reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    OPERADOR_SUMA   reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    OPERADOR_RESTA  reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    MENOR_IGUAL     reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    MENOR           reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    MAYOR           reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    MAYOR_IGUAL     reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    IGUAL           reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    DISTINTO        reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    PUNTOS_MENOR_PUNTOS reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    PALABRA_RESERVADA_AND reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    PALABRA_RESERVADA_OR reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    SEMICOLON       reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    COMA            reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    PARENTESIS_DERECHO reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    CORCHETE_DERECHO reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    PALABRA_RESERVADA_THEN reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    PALABRA_RESERVADA_DO reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    PALABRA_RESERVADA_TO reduce using rule 105 (constant -> NUMERO_DECIMAL .)
    PALABRA_RESERVADA_BY reduce using rule 105 (constant -> NUMERO_DECIMAL .)


state 54

    (106) constant -> CARACTER .

    OPERADOR_MULTIPLICAR reduce using rule 106 (constant -> CARACTER .)
    OPERADOR_DIVIDIR reduce using rule 106 (constant -> CARACTER .)
    OPERADOR_MODULO reduce using rule 106 (constant -> CARACTER .)
    OPERADOR_SUMA   reduce using rule 106 (constant -> CARACTER .)
    OPERADOR_RESTA  reduce using rule 106 (constant -> CARACTER .)
    MENOR_IGUAL     reduce using rule 106 (constant -> CARACTER .)
    MENOR           reduce using rule 106 (constant -> CARACTER .)
    MAYOR           reduce using rule 106 (constant -> CARACTER .)
    MAYOR_IGUAL     reduce using rule 106 (constant -> CARACTER .)
    IGUAL           reduce using rule 106 (constant -> CARACTER .)
    DISTINTO        reduce using rule 106 (constant -> CARACTER .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 106 (constant -> CARACTER .)
    PUNTOS_MENOR_PUNTOS reduce using rule 106 (constant -> CARACTER .)
    PALABRA_RESERVADA_AND reduce using rule 106 (constant -> CARACTER .)
    PALABRA_RESERVADA_OR reduce using rule 106 (constant -> CARACTER .)
    SEMICOLON       reduce using rule 106 (constant -> CARACTER .)
    COMA            reduce using rule 106 (constant -> CARACTER .)
    PARENTESIS_DERECHO reduce using rule 106 (constant -> CARACTER .)
    CORCHETE_DERECHO reduce using rule 106 (constant -> CARACTER .)
    PALABRA_RESERVADA_THEN reduce using rule 106 (constant -> CARACTER .)
    PALABRA_RESERVADA_DO reduce using rule 106 (constant -> CARACTER .)
    PALABRA_RESERVADA_TO reduce using rule 106 (constant -> CARACTER .)
    PALABRA_RESERVADA_BY reduce using rule 106 (constant -> CARACTER .)


state 55

    (107) constant -> CADENA .

    OPERADOR_MULTIPLICAR reduce using rule 107 (constant -> CADENA .)
    OPERADOR_DIVIDIR reduce using rule 107 (constant -> CADENA .)
    OPERADOR_MODULO reduce using rule 107 (constant -> CADENA .)
    OPERADOR_SUMA   reduce using rule 107 (constant -> CADENA .)
    OPERADOR_RESTA  reduce using rule 107 (constant -> CADENA .)
    MENOR_IGUAL     reduce using rule 107 (constant -> CADENA .)
    MENOR           reduce using rule 107 (constant -> CADENA .)
    MAYOR           reduce using rule 107 (constant -> CADENA .)
    MAYOR_IGUAL     reduce using rule 107 (constant -> CADENA .)
    IGUAL           reduce using rule 107 (constant -> CADENA .)
    DISTINTO        reduce using rule 107 (constant -> CADENA .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 107 (constant -> CADENA .)
    PUNTOS_MENOR_PUNTOS reduce using rule 107 (constant -> CADENA .)
    PALABRA_RESERVADA_AND reduce using rule 107 (constant -> CADENA .)
    PALABRA_RESERVADA_OR reduce using rule 107 (constant -> CADENA .)
    SEMICOLON       reduce using rule 107 (constant -> CADENA .)
    COMA            reduce using rule 107 (constant -> CADENA .)
    PARENTESIS_DERECHO reduce using rule 107 (constant -> CADENA .)
    CORCHETE_DERECHO reduce using rule 107 (constant -> CADENA .)
    PALABRA_RESERVADA_THEN reduce using rule 107 (constant -> CADENA .)
    PALABRA_RESERVADA_DO reduce using rule 107 (constant -> CADENA .)
    PALABRA_RESERVADA_TO reduce using rule 107 (constant -> CADENA .)
    PALABRA_RESERVADA_BY reduce using rule 107 (constant -> CADENA .)


state 56

    (108) constant -> PALABRA_RESERVADA_TRUE .

    OPERADOR_MULTIPLICAR reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    OPERADOR_DIVIDIR reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    OPERADOR_MODULO reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    OPERADOR_SUMA   reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    OPERADOR_RESTA  reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    MENOR_IGUAL     reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    MENOR           reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    MAYOR           reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    MAYOR_IGUAL     reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    IGUAL           reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    DISTINTO        reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    PUNTOS_MENOR_PUNTOS reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    PALABRA_RESERVADA_AND reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    PALABRA_RESERVADA_OR reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    SEMICOLON       reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    COMA            reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    PARENTESIS_DERECHO reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    CORCHETE_DERECHO reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    PALABRA_RESERVADA_THEN reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    PALABRA_RESERVADA_DO reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    PALABRA_RESERVADA_TO reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)
    PALABRA_RESERVADA_BY reduce using rule 108 (constant -> PALABRA_RESERVADA_TRUE .)


state 57

    (109) constant -> PALABRA_RESERVADA_FALSE .

    OPERADOR_MULTIPLICAR reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    OPERADOR_DIVIDIR reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    OPERADOR_MODULO reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    OPERADOR_SUMA   reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    OPERADOR_RESTA  reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    MENOR_IGUAL     reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    MENOR           reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    MAYOR           reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    MAYOR_IGUAL     reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    IGUAL           reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    DISTINTO        reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    PUNTOS_MENOR_PUNTOS reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    PALABRA_RESERVADA_AND reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    PALABRA_RESERVADA_OR reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    SEMICOLON       reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    COMA            reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    PARENTESIS_DERECHO reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    CORCHETE_DERECHO reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    PALABRA_RESERVADA_THEN reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    PALABRA_RESERVADA_DO reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    PALABRA_RESERVADA_TO reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)
    PALABRA_RESERVADA_BY reduce using rule 109 (constant -> PALABRA_RESERVADA_FALSE .)


state 58

    (20) funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO . stmt
    (30) stmt -> . expStmt
    (31) stmt -> . compoundStmt
    (32) stmt -> . selectStmt
    (33) stmt -> . iterStmt
    (34) stmt -> . returnStmt
    (35) stmt -> . breakStmt
    (36) expStmt -> . exp SEMICOLON
    (37) expStmt -> . SEMICOLON
    (38) compoundStmt -> . LLAVE_IZQ localDecls stmtList LLAVE_DER
    (43) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt
    (44) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (45) iterStmt -> . BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt
    (46) iterStmt -> . BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt
    (49) returnStmt -> . PALABRA_RESERVADA_RETURN SEMICOLON
    (50) returnStmt -> . PALABRA_RESERVADA_RETURN exp SEMICOLON
    (51) breakStmt -> . PALABRA_RESERVADA_BREAK SEMICOLON
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    SEMICOLON       shift and go to state 99
    LLAVE_IZQ       shift and go to state 100
    PALABRA_RESERVADA_IF shift and go to state 101
    BUCLE_WHILE     shift and go to state 102
    BUCLE_FOR       shift and go to state 103
    PALABRA_RESERVADA_RETURN shift and go to state 104
    PALABRA_RESERVADA_BREAK shift and go to state 105
    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    stmt                           shift and go to state 91
    expStmt                        shift and go to state 92
    compoundStmt                   shift and go to state 93
    selectStmt                     shift and go to state 94
    iterStmt                       shift and go to state 95
    returnStmt                     shift and go to state 96
    breakStmt                      shift and go to state 97
    exp                            shift and go to state 98
    simpleExp                      shift and go to state 88
    mutable                        shift and go to state 87
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 59

    (23) parmList -> parmList SEMICOLON . parmTypeList
    (25) parmTypeList -> . typeSpec parmIdList
    (16) typeSpec -> . TIPO_ENTERO
    (17) typeSpec -> . PALABRA_RESERVADA_BOOL
    (18) typeSpec -> . TIPO_CARACTER

    TIPO_ENTERO     shift and go to state 9
    PALABRA_RESERVADA_BOOL shift and go to state 10
    TIPO_CARACTER   shift and go to state 11

    parmTypeList                   shift and go to state 106
    typeSpec                       shift and go to state 27

state 60

    (25) parmTypeList -> typeSpec parmIdList .
    (26) parmIdList -> parmIdList . COMA parmId

    SEMICOLON       reduce using rule 25 (parmTypeList -> typeSpec parmIdList .)
    PARENTESIS_DERECHO reduce using rule 25 (parmTypeList -> typeSpec parmIdList .)
    COMA            shift and go to state 107


state 61

    (27) parmIdList -> parmId .

    COMA            reduce using rule 27 (parmIdList -> parmId .)
    SEMICOLON       reduce using rule 27 (parmIdList -> parmId .)
    PARENTESIS_DERECHO reduce using rule 27 (parmIdList -> parmId .)


state 62

    (28) parmId -> VARIABLE .
    (29) parmId -> VARIABLE . CORCHETE_IZQUIERDO CORCHETE_DERECHO

    COMA            reduce using rule 28 (parmId -> VARIABLE .)
    SEMICOLON       reduce using rule 28 (parmId -> VARIABLE .)
    PARENTESIS_DERECHO reduce using rule 28 (parmId -> VARIABLE .)
    CORCHETE_IZQUIERDO shift and go to state 108


state 63

    (19) funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO . stmt
    (30) stmt -> . expStmt
    (31) stmt -> . compoundStmt
    (32) stmt -> . selectStmt
    (33) stmt -> . iterStmt
    (34) stmt -> . returnStmt
    (35) stmt -> . breakStmt
    (36) expStmt -> . exp SEMICOLON
    (37) expStmt -> . SEMICOLON
    (38) compoundStmt -> . LLAVE_IZQ localDecls stmtList LLAVE_DER
    (43) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt
    (44) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (45) iterStmt -> . BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt
    (46) iterStmt -> . BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt
    (49) returnStmt -> . PALABRA_RESERVADA_RETURN SEMICOLON
    (50) returnStmt -> . PALABRA_RESERVADA_RETURN exp SEMICOLON
    (51) breakStmt -> . PALABRA_RESERVADA_BREAK SEMICOLON
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    SEMICOLON       shift and go to state 99
    LLAVE_IZQ       shift and go to state 100
    PALABRA_RESERVADA_IF shift and go to state 101
    BUCLE_WHILE     shift and go to state 102
    BUCLE_FOR       shift and go to state 103
    PALABRA_RESERVADA_RETURN shift and go to state 104
    PALABRA_RESERVADA_BREAK shift and go to state 105
    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    stmt                           shift and go to state 109
    expStmt                        shift and go to state 92
    compoundStmt                   shift and go to state 93
    selectStmt                     shift and go to state 94
    iterStmt                       shift and go to state 95
    returnStmt                     shift and go to state 96
    breakStmt                      shift and go to state 97
    exp                            shift and go to state 98
    simpleExp                      shift and go to state 88
    mutable                        shift and go to state 87
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 64

    (15) varDeclId -> VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO .

    COLON           reduce using rule 15 (varDeclId -> VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO .)
    SEMICOLON       reduce using rule 15 (varDeclId -> VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO .)
    COMA            reduce using rule 15 (varDeclId -> VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO .)


state 65

    (60) simpleExp -> simpleExp PALABRA_RESERVADA_OR . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    VARIABLE        shift and go to state 51
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    andExp                         shift and go to state 110
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    mutable                        shift and go to state 47
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 66

    (62) andExp -> andExp PALABRA_RESERVADA_AND . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    VARIABLE        shift and go to state 51
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    unaryRelExp                    shift and go to state 111
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    mutable                        shift and go to state 47
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 67

    (64) unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .

    PALABRA_RESERVADA_AND reduce using rule 64 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    PALABRA_RESERVADA_OR reduce using rule 64 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    SEMICOLON       reduce using rule 64 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    COMA            reduce using rule 64 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    PARENTESIS_DERECHO reduce using rule 64 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    CORCHETE_DERECHO reduce using rule 64 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    PALABRA_RESERVADA_THEN reduce using rule 64 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    PALABRA_RESERVADA_DO reduce using rule 64 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    PALABRA_RESERVADA_TO reduce using rule 64 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    PALABRA_RESERVADA_BY reduce using rule 64 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)


state 68

    (66) relExp -> minmaxExp relop . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    VARIABLE        shift and go to state 51
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    minmaxExp                      shift and go to state 112
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    mutable                        shift and go to state 47
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 69

    (74) minmaxExp -> minmaxExp minmaxop . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    VARIABLE        shift and go to state 51
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    sumExp                         shift and go to state 113
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    mutable                        shift and go to state 47
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 70

    (68) relop -> MENOR_IGUAL .

    OPERADOR_RESTA  reduce using rule 68 (relop -> MENOR_IGUAL .)
    OPERADOR_MULTIPLICAR reduce using rule 68 (relop -> MENOR_IGUAL .)
    OP_TERNARIO     reduce using rule 68 (relop -> MENOR_IGUAL .)
    PARENTESIS_IZQUIERDO reduce using rule 68 (relop -> MENOR_IGUAL .)
    VARIABLE        reduce using rule 68 (relop -> MENOR_IGUAL .)
    NUMERO_ENTERO   reduce using rule 68 (relop -> MENOR_IGUAL .)
    NUMERO_DECIMAL  reduce using rule 68 (relop -> MENOR_IGUAL .)
    CARACTER        reduce using rule 68 (relop -> MENOR_IGUAL .)
    CADENA          reduce using rule 68 (relop -> MENOR_IGUAL .)
    PALABRA_RESERVADA_TRUE reduce using rule 68 (relop -> MENOR_IGUAL .)
    PALABRA_RESERVADA_FALSE reduce using rule 68 (relop -> MENOR_IGUAL .)


state 71

    (69) relop -> MENOR .

    OPERADOR_RESTA  reduce using rule 69 (relop -> MENOR .)
    OPERADOR_MULTIPLICAR reduce using rule 69 (relop -> MENOR .)
    OP_TERNARIO     reduce using rule 69 (relop -> MENOR .)
    PARENTESIS_IZQUIERDO reduce using rule 69 (relop -> MENOR .)
    VARIABLE        reduce using rule 69 (relop -> MENOR .)
    NUMERO_ENTERO   reduce using rule 69 (relop -> MENOR .)
    NUMERO_DECIMAL  reduce using rule 69 (relop -> MENOR .)
    CARACTER        reduce using rule 69 (relop -> MENOR .)
    CADENA          reduce using rule 69 (relop -> MENOR .)
    PALABRA_RESERVADA_TRUE reduce using rule 69 (relop -> MENOR .)
    PALABRA_RESERVADA_FALSE reduce using rule 69 (relop -> MENOR .)


state 72

    (70) relop -> MAYOR .

    OPERADOR_RESTA  reduce using rule 70 (relop -> MAYOR .)
    OPERADOR_MULTIPLICAR reduce using rule 70 (relop -> MAYOR .)
    OP_TERNARIO     reduce using rule 70 (relop -> MAYOR .)
    PARENTESIS_IZQUIERDO reduce using rule 70 (relop -> MAYOR .)
    VARIABLE        reduce using rule 70 (relop -> MAYOR .)
    NUMERO_ENTERO   reduce using rule 70 (relop -> MAYOR .)
    NUMERO_DECIMAL  reduce using rule 70 (relop -> MAYOR .)
    CARACTER        reduce using rule 70 (relop -> MAYOR .)
    CADENA          reduce using rule 70 (relop -> MAYOR .)
    PALABRA_RESERVADA_TRUE reduce using rule 70 (relop -> MAYOR .)
    PALABRA_RESERVADA_FALSE reduce using rule 70 (relop -> MAYOR .)


state 73

    (71) relop -> MAYOR_IGUAL .

    OPERADOR_RESTA  reduce using rule 71 (relop -> MAYOR_IGUAL .)
    OPERADOR_MULTIPLICAR reduce using rule 71 (relop -> MAYOR_IGUAL .)
    OP_TERNARIO     reduce using rule 71 (relop -> MAYOR_IGUAL .)
    PARENTESIS_IZQUIERDO reduce using rule 71 (relop -> MAYOR_IGUAL .)
    VARIABLE        reduce using rule 71 (relop -> MAYOR_IGUAL .)
    NUMERO_ENTERO   reduce using rule 71 (relop -> MAYOR_IGUAL .)
    NUMERO_DECIMAL  reduce using rule 71 (relop -> MAYOR_IGUAL .)
    CARACTER        reduce using rule 71 (relop -> MAYOR_IGUAL .)
    CADENA          reduce using rule 71 (relop -> MAYOR_IGUAL .)
    PALABRA_RESERVADA_TRUE reduce using rule 71 (relop -> MAYOR_IGUAL .)
    PALABRA_RESERVADA_FALSE reduce using rule 71 (relop -> MAYOR_IGUAL .)


state 74

    (72) relop -> IGUAL .

    OPERADOR_RESTA  reduce using rule 72 (relop -> IGUAL .)
    OPERADOR_MULTIPLICAR reduce using rule 72 (relop -> IGUAL .)
    OP_TERNARIO     reduce using rule 72 (relop -> IGUAL .)
    PARENTESIS_IZQUIERDO reduce using rule 72 (relop -> IGUAL .)
    VARIABLE        reduce using rule 72 (relop -> IGUAL .)
    NUMERO_ENTERO   reduce using rule 72 (relop -> IGUAL .)
    NUMERO_DECIMAL  reduce using rule 72 (relop -> IGUAL .)
    CARACTER        reduce using rule 72 (relop -> IGUAL .)
    CADENA          reduce using rule 72 (relop -> IGUAL .)
    PALABRA_RESERVADA_TRUE reduce using rule 72 (relop -> IGUAL .)
    PALABRA_RESERVADA_FALSE reduce using rule 72 (relop -> IGUAL .)


state 75

    (73) relop -> DISTINTO .

    OPERADOR_RESTA  reduce using rule 73 (relop -> DISTINTO .)
    OPERADOR_MULTIPLICAR reduce using rule 73 (relop -> DISTINTO .)
    OP_TERNARIO     reduce using rule 73 (relop -> DISTINTO .)
    PARENTESIS_IZQUIERDO reduce using rule 73 (relop -> DISTINTO .)
    VARIABLE        reduce using rule 73 (relop -> DISTINTO .)
    NUMERO_ENTERO   reduce using rule 73 (relop -> DISTINTO .)
    NUMERO_DECIMAL  reduce using rule 73 (relop -> DISTINTO .)
    CARACTER        reduce using rule 73 (relop -> DISTINTO .)
    CADENA          reduce using rule 73 (relop -> DISTINTO .)
    PALABRA_RESERVADA_TRUE reduce using rule 73 (relop -> DISTINTO .)
    PALABRA_RESERVADA_FALSE reduce using rule 73 (relop -> DISTINTO .)


state 76

    (76) minmaxop -> PUNTOS_MAYOR_PUNTOS .

    OPERADOR_RESTA  reduce using rule 76 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    OPERADOR_MULTIPLICAR reduce using rule 76 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    OP_TERNARIO     reduce using rule 76 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    PARENTESIS_IZQUIERDO reduce using rule 76 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    VARIABLE        reduce using rule 76 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    NUMERO_ENTERO   reduce using rule 76 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    NUMERO_DECIMAL  reduce using rule 76 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    CARACTER        reduce using rule 76 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    CADENA          reduce using rule 76 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    PALABRA_RESERVADA_TRUE reduce using rule 76 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    PALABRA_RESERVADA_FALSE reduce using rule 76 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)


state 77

    (77) minmaxop -> PUNTOS_MENOR_PUNTOS .

    OPERADOR_RESTA  reduce using rule 77 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    OPERADOR_MULTIPLICAR reduce using rule 77 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    OP_TERNARIO     reduce using rule 77 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    PARENTESIS_IZQUIERDO reduce using rule 77 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    VARIABLE        reduce using rule 77 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    NUMERO_ENTERO   reduce using rule 77 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    NUMERO_DECIMAL  reduce using rule 77 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    CARACTER        reduce using rule 77 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    CADENA          reduce using rule 77 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    PALABRA_RESERVADA_TRUE reduce using rule 77 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    PALABRA_RESERVADA_FALSE reduce using rule 77 (minmaxop -> PUNTOS_MENOR_PUNTOS .)


state 78

    (78) sumExp -> sumExp sumop . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    VARIABLE        shift and go to state 51
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    mulExp                         shift and go to state 114
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    mutable                        shift and go to state 47
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 79

    (80) sumop -> OPERADOR_SUMA .

    OPERADOR_RESTA  reduce using rule 80 (sumop -> OPERADOR_SUMA .)
    OPERADOR_MULTIPLICAR reduce using rule 80 (sumop -> OPERADOR_SUMA .)
    OP_TERNARIO     reduce using rule 80 (sumop -> OPERADOR_SUMA .)
    PARENTESIS_IZQUIERDO reduce using rule 80 (sumop -> OPERADOR_SUMA .)
    VARIABLE        reduce using rule 80 (sumop -> OPERADOR_SUMA .)
    NUMERO_ENTERO   reduce using rule 80 (sumop -> OPERADOR_SUMA .)
    NUMERO_DECIMAL  reduce using rule 80 (sumop -> OPERADOR_SUMA .)
    CARACTER        reduce using rule 80 (sumop -> OPERADOR_SUMA .)
    CADENA          reduce using rule 80 (sumop -> OPERADOR_SUMA .)
    PALABRA_RESERVADA_TRUE reduce using rule 80 (sumop -> OPERADOR_SUMA .)
    PALABRA_RESERVADA_FALSE reduce using rule 80 (sumop -> OPERADOR_SUMA .)


state 80

    (81) sumop -> OPERADOR_RESTA .

    OPERADOR_RESTA  reduce using rule 81 (sumop -> OPERADOR_RESTA .)
    OPERADOR_MULTIPLICAR reduce using rule 81 (sumop -> OPERADOR_RESTA .)
    OP_TERNARIO     reduce using rule 81 (sumop -> OPERADOR_RESTA .)
    PARENTESIS_IZQUIERDO reduce using rule 81 (sumop -> OPERADOR_RESTA .)
    VARIABLE        reduce using rule 81 (sumop -> OPERADOR_RESTA .)
    NUMERO_ENTERO   reduce using rule 81 (sumop -> OPERADOR_RESTA .)
    NUMERO_DECIMAL  reduce using rule 81 (sumop -> OPERADOR_RESTA .)
    CARACTER        reduce using rule 81 (sumop -> OPERADOR_RESTA .)
    CADENA          reduce using rule 81 (sumop -> OPERADOR_RESTA .)
    PALABRA_RESERVADA_TRUE reduce using rule 81 (sumop -> OPERADOR_RESTA .)
    PALABRA_RESERVADA_FALSE reduce using rule 81 (sumop -> OPERADOR_RESTA .)


state 81

    (82) mulExp -> mulExp mulop . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    VARIABLE        shift and go to state 51
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    unaryExp                       shift and go to state 115
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    mutable                        shift and go to state 47
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 82

    (84) mulop -> OPERADOR_MULTIPLICAR .

    OPERADOR_RESTA  reduce using rule 84 (mulop -> OPERADOR_MULTIPLICAR .)
    OPERADOR_MULTIPLICAR reduce using rule 84 (mulop -> OPERADOR_MULTIPLICAR .)
    OP_TERNARIO     reduce using rule 84 (mulop -> OPERADOR_MULTIPLICAR .)
    PARENTESIS_IZQUIERDO reduce using rule 84 (mulop -> OPERADOR_MULTIPLICAR .)
    VARIABLE        reduce using rule 84 (mulop -> OPERADOR_MULTIPLICAR .)
    NUMERO_ENTERO   reduce using rule 84 (mulop -> OPERADOR_MULTIPLICAR .)
    NUMERO_DECIMAL  reduce using rule 84 (mulop -> OPERADOR_MULTIPLICAR .)
    CARACTER        reduce using rule 84 (mulop -> OPERADOR_MULTIPLICAR .)
    CADENA          reduce using rule 84 (mulop -> OPERADOR_MULTIPLICAR .)
    PALABRA_RESERVADA_TRUE reduce using rule 84 (mulop -> OPERADOR_MULTIPLICAR .)
    PALABRA_RESERVADA_FALSE reduce using rule 84 (mulop -> OPERADOR_MULTIPLICAR .)


state 83

    (85) mulop -> OPERADOR_DIVIDIR .

    OPERADOR_RESTA  reduce using rule 85 (mulop -> OPERADOR_DIVIDIR .)
    OPERADOR_MULTIPLICAR reduce using rule 85 (mulop -> OPERADOR_DIVIDIR .)
    OP_TERNARIO     reduce using rule 85 (mulop -> OPERADOR_DIVIDIR .)
    PARENTESIS_IZQUIERDO reduce using rule 85 (mulop -> OPERADOR_DIVIDIR .)
    VARIABLE        reduce using rule 85 (mulop -> OPERADOR_DIVIDIR .)
    NUMERO_ENTERO   reduce using rule 85 (mulop -> OPERADOR_DIVIDIR .)
    NUMERO_DECIMAL  reduce using rule 85 (mulop -> OPERADOR_DIVIDIR .)
    CARACTER        reduce using rule 85 (mulop -> OPERADOR_DIVIDIR .)
    CADENA          reduce using rule 85 (mulop -> OPERADOR_DIVIDIR .)
    PALABRA_RESERVADA_TRUE reduce using rule 85 (mulop -> OPERADOR_DIVIDIR .)
    PALABRA_RESERVADA_FALSE reduce using rule 85 (mulop -> OPERADOR_DIVIDIR .)


state 84

    (86) mulop -> OPERADOR_MODULO .

    OPERADOR_RESTA  reduce using rule 86 (mulop -> OPERADOR_MODULO .)
    OPERADOR_MULTIPLICAR reduce using rule 86 (mulop -> OPERADOR_MODULO .)
    OP_TERNARIO     reduce using rule 86 (mulop -> OPERADOR_MODULO .)
    PARENTESIS_IZQUIERDO reduce using rule 86 (mulop -> OPERADOR_MODULO .)
    VARIABLE        reduce using rule 86 (mulop -> OPERADOR_MODULO .)
    NUMERO_ENTERO   reduce using rule 86 (mulop -> OPERADOR_MODULO .)
    NUMERO_DECIMAL  reduce using rule 86 (mulop -> OPERADOR_MODULO .)
    CARACTER        reduce using rule 86 (mulop -> OPERADOR_MODULO .)
    CADENA          reduce using rule 86 (mulop -> OPERADOR_MODULO .)
    PALABRA_RESERVADA_TRUE reduce using rule 86 (mulop -> OPERADOR_MODULO .)
    PALABRA_RESERVADA_FALSE reduce using rule 86 (mulop -> OPERADOR_MODULO .)


state 85

    (87) unaryExp -> unaryop unaryExp .

    OPERADOR_MULTIPLICAR reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    OPERADOR_DIVIDIR reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    OPERADOR_MODULO reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    OPERADOR_SUMA   reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    OPERADOR_RESTA  reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    MENOR_IGUAL     reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    MENOR           reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    MAYOR           reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    MAYOR_IGUAL     reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    IGUAL           reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    DISTINTO        reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    PUNTOS_MENOR_PUNTOS reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    PALABRA_RESERVADA_AND reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    PALABRA_RESERVADA_OR reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    SEMICOLON       reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    COMA            reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    PARENTESIS_DERECHO reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    CORCHETE_DERECHO reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    PALABRA_RESERVADA_THEN reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    PALABRA_RESERVADA_DO reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    PALABRA_RESERVADA_TO reduce using rule 87 (unaryExp -> unaryop unaryExp .)
    PALABRA_RESERVADA_BY reduce using rule 87 (unaryExp -> unaryop unaryExp .)


state 86

    (96) immutable -> PARENTESIS_IZQUIERDO exp . PARENTESIS_DERECHO

    PARENTESIS_DERECHO shift and go to state 116


state 87

    (52) exp -> mutable . ASIGNACION exp
    (53) exp -> mutable . SUMA_RESULTADO exp
    (54) exp -> mutable . RESTA_RESULTADO exp
    (55) exp -> mutable . MULTI_RESULTADO exp
    (56) exp -> mutable . DIVI_RESULTADO exp
    (57) exp -> mutable . INCREMENTO
    (58) exp -> mutable . DECREMENTO
    (93) factor -> mutable .

    ASIGNACION      shift and go to state 117
    SUMA_RESULTADO  shift and go to state 118
    RESTA_RESULTADO shift and go to state 119
    MULTI_RESULTADO shift and go to state 120
    DIVI_RESULTADO  shift and go to state 121
    INCREMENTO      shift and go to state 122
    DECREMENTO      shift and go to state 123
    OPERADOR_MULTIPLICAR reduce using rule 93 (factor -> mutable .)
    OPERADOR_DIVIDIR reduce using rule 93 (factor -> mutable .)
    OPERADOR_MODULO reduce using rule 93 (factor -> mutable .)
    OPERADOR_SUMA   reduce using rule 93 (factor -> mutable .)
    OPERADOR_RESTA  reduce using rule 93 (factor -> mutable .)
    MENOR_IGUAL     reduce using rule 93 (factor -> mutable .)
    MENOR           reduce using rule 93 (factor -> mutable .)
    MAYOR           reduce using rule 93 (factor -> mutable .)
    MAYOR_IGUAL     reduce using rule 93 (factor -> mutable .)
    IGUAL           reduce using rule 93 (factor -> mutable .)
    DISTINTO        reduce using rule 93 (factor -> mutable .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 93 (factor -> mutable .)
    PUNTOS_MENOR_PUNTOS reduce using rule 93 (factor -> mutable .)
    PALABRA_RESERVADA_AND reduce using rule 93 (factor -> mutable .)
    PALABRA_RESERVADA_OR reduce using rule 93 (factor -> mutable .)
    PARENTESIS_DERECHO reduce using rule 93 (factor -> mutable .)
    SEMICOLON       reduce using rule 93 (factor -> mutable .)
    CORCHETE_DERECHO reduce using rule 93 (factor -> mutable .)
    COMA            reduce using rule 93 (factor -> mutable .)


state 88

    (59) exp -> simpleExp .
    (60) simpleExp -> simpleExp . PALABRA_RESERVADA_OR andExp

    PARENTESIS_DERECHO reduce using rule 59 (exp -> simpleExp .)
    SEMICOLON       reduce using rule 59 (exp -> simpleExp .)
    CORCHETE_DERECHO reduce using rule 59 (exp -> simpleExp .)
    COMA            reduce using rule 59 (exp -> simpleExp .)
    PALABRA_RESERVADA_OR shift and go to state 65


state 89

    (95) mutable -> VARIABLE CORCHETE_IZQUIERDO . exp CORCHETE_DERECHO
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    exp                            shift and go to state 124
    mutable                        shift and go to state 87
    simpleExp                      shift and go to state 88
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 90

    (99) call -> VARIABLE PARENTESIS_IZQUIERDO . args PARENTESIS_DERECHO
    (100) args -> . argList
    (101) args -> . eps
    (102) argList -> . argList COMA exp
    (103) argList -> . exp
    (110) eps -> .
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    PARENTESIS_DERECHO reduce using rule 110 (eps -> .)
    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    args                           shift and go to state 125
    argList                        shift and go to state 126
    eps                            shift and go to state 127
    exp                            shift and go to state 128
    mutable                        shift and go to state 87
    simpleExp                      shift and go to state 88
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 91

    (20) funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .

    LINEAS          reduce using rule 20 (funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    VARIABLE        reduce using rule 20 (funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    TIPO_ENTERO     reduce using rule 20 (funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 20 (funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    TIPO_CARACTER   reduce using rule 20 (funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    $end            reduce using rule 20 (funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)


state 92

    (30) stmt -> expStmt .

    LINEAS          reduce using rule 30 (stmt -> expStmt .)
    VARIABLE        reduce using rule 30 (stmt -> expStmt .)
    TIPO_ENTERO     reduce using rule 30 (stmt -> expStmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 30 (stmt -> expStmt .)
    TIPO_CARACTER   reduce using rule 30 (stmt -> expStmt .)
    $end            reduce using rule 30 (stmt -> expStmt .)
    LLAVE_DER       reduce using rule 30 (stmt -> expStmt .)
    SEMICOLON       reduce using rule 30 (stmt -> expStmt .)
    LLAVE_IZQ       reduce using rule 30 (stmt -> expStmt .)
    PALABRA_RESERVADA_IF reduce using rule 30 (stmt -> expStmt .)
    BUCLE_WHILE     reduce using rule 30 (stmt -> expStmt .)
    BUCLE_FOR       reduce using rule 30 (stmt -> expStmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 30 (stmt -> expStmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 30 (stmt -> expStmt .)
    PALABRA_RESERVADA_NOT reduce using rule 30 (stmt -> expStmt .)
    OPERADOR_RESTA  reduce using rule 30 (stmt -> expStmt .)
    OPERADOR_MULTIPLICAR reduce using rule 30 (stmt -> expStmt .)
    OP_TERNARIO     reduce using rule 30 (stmt -> expStmt .)
    PARENTESIS_IZQUIERDO reduce using rule 30 (stmt -> expStmt .)
    NUMERO_ENTERO   reduce using rule 30 (stmt -> expStmt .)
    NUMERO_DECIMAL  reduce using rule 30 (stmt -> expStmt .)
    CARACTER        reduce using rule 30 (stmt -> expStmt .)
    CADENA          reduce using rule 30 (stmt -> expStmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 30 (stmt -> expStmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 30 (stmt -> expStmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 30 (stmt -> expStmt .)


state 93

    (31) stmt -> compoundStmt .

    LINEAS          reduce using rule 31 (stmt -> compoundStmt .)
    VARIABLE        reduce using rule 31 (stmt -> compoundStmt .)
    TIPO_ENTERO     reduce using rule 31 (stmt -> compoundStmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 31 (stmt -> compoundStmt .)
    TIPO_CARACTER   reduce using rule 31 (stmt -> compoundStmt .)
    $end            reduce using rule 31 (stmt -> compoundStmt .)
    LLAVE_DER       reduce using rule 31 (stmt -> compoundStmt .)
    SEMICOLON       reduce using rule 31 (stmt -> compoundStmt .)
    LLAVE_IZQ       reduce using rule 31 (stmt -> compoundStmt .)
    PALABRA_RESERVADA_IF reduce using rule 31 (stmt -> compoundStmt .)
    BUCLE_WHILE     reduce using rule 31 (stmt -> compoundStmt .)
    BUCLE_FOR       reduce using rule 31 (stmt -> compoundStmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 31 (stmt -> compoundStmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 31 (stmt -> compoundStmt .)
    PALABRA_RESERVADA_NOT reduce using rule 31 (stmt -> compoundStmt .)
    OPERADOR_RESTA  reduce using rule 31 (stmt -> compoundStmt .)
    OPERADOR_MULTIPLICAR reduce using rule 31 (stmt -> compoundStmt .)
    OP_TERNARIO     reduce using rule 31 (stmt -> compoundStmt .)
    PARENTESIS_IZQUIERDO reduce using rule 31 (stmt -> compoundStmt .)
    NUMERO_ENTERO   reduce using rule 31 (stmt -> compoundStmt .)
    NUMERO_DECIMAL  reduce using rule 31 (stmt -> compoundStmt .)
    CARACTER        reduce using rule 31 (stmt -> compoundStmt .)
    CADENA          reduce using rule 31 (stmt -> compoundStmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 31 (stmt -> compoundStmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 31 (stmt -> compoundStmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 31 (stmt -> compoundStmt .)


state 94

    (32) stmt -> selectStmt .

    LINEAS          reduce using rule 32 (stmt -> selectStmt .)
    VARIABLE        reduce using rule 32 (stmt -> selectStmt .)
    TIPO_ENTERO     reduce using rule 32 (stmt -> selectStmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 32 (stmt -> selectStmt .)
    TIPO_CARACTER   reduce using rule 32 (stmt -> selectStmt .)
    $end            reduce using rule 32 (stmt -> selectStmt .)
    LLAVE_DER       reduce using rule 32 (stmt -> selectStmt .)
    SEMICOLON       reduce using rule 32 (stmt -> selectStmt .)
    LLAVE_IZQ       reduce using rule 32 (stmt -> selectStmt .)
    PALABRA_RESERVADA_IF reduce using rule 32 (stmt -> selectStmt .)
    BUCLE_WHILE     reduce using rule 32 (stmt -> selectStmt .)
    BUCLE_FOR       reduce using rule 32 (stmt -> selectStmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 32 (stmt -> selectStmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 32 (stmt -> selectStmt .)
    PALABRA_RESERVADA_NOT reduce using rule 32 (stmt -> selectStmt .)
    OPERADOR_RESTA  reduce using rule 32 (stmt -> selectStmt .)
    OPERADOR_MULTIPLICAR reduce using rule 32 (stmt -> selectStmt .)
    OP_TERNARIO     reduce using rule 32 (stmt -> selectStmt .)
    PARENTESIS_IZQUIERDO reduce using rule 32 (stmt -> selectStmt .)
    NUMERO_ENTERO   reduce using rule 32 (stmt -> selectStmt .)
    NUMERO_DECIMAL  reduce using rule 32 (stmt -> selectStmt .)
    CARACTER        reduce using rule 32 (stmt -> selectStmt .)
    CADENA          reduce using rule 32 (stmt -> selectStmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 32 (stmt -> selectStmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 32 (stmt -> selectStmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 32 (stmt -> selectStmt .)


state 95

    (33) stmt -> iterStmt .

    LINEAS          reduce using rule 33 (stmt -> iterStmt .)
    VARIABLE        reduce using rule 33 (stmt -> iterStmt .)
    TIPO_ENTERO     reduce using rule 33 (stmt -> iterStmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 33 (stmt -> iterStmt .)
    TIPO_CARACTER   reduce using rule 33 (stmt -> iterStmt .)
    $end            reduce using rule 33 (stmt -> iterStmt .)
    LLAVE_DER       reduce using rule 33 (stmt -> iterStmt .)
    SEMICOLON       reduce using rule 33 (stmt -> iterStmt .)
    LLAVE_IZQ       reduce using rule 33 (stmt -> iterStmt .)
    PALABRA_RESERVADA_IF reduce using rule 33 (stmt -> iterStmt .)
    BUCLE_WHILE     reduce using rule 33 (stmt -> iterStmt .)
    BUCLE_FOR       reduce using rule 33 (stmt -> iterStmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 33 (stmt -> iterStmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 33 (stmt -> iterStmt .)
    PALABRA_RESERVADA_NOT reduce using rule 33 (stmt -> iterStmt .)
    OPERADOR_RESTA  reduce using rule 33 (stmt -> iterStmt .)
    OPERADOR_MULTIPLICAR reduce using rule 33 (stmt -> iterStmt .)
    OP_TERNARIO     reduce using rule 33 (stmt -> iterStmt .)
    PARENTESIS_IZQUIERDO reduce using rule 33 (stmt -> iterStmt .)
    NUMERO_ENTERO   reduce using rule 33 (stmt -> iterStmt .)
    NUMERO_DECIMAL  reduce using rule 33 (stmt -> iterStmt .)
    CARACTER        reduce using rule 33 (stmt -> iterStmt .)
    CADENA          reduce using rule 33 (stmt -> iterStmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 33 (stmt -> iterStmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 33 (stmt -> iterStmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 33 (stmt -> iterStmt .)


state 96

    (34) stmt -> returnStmt .

    LINEAS          reduce using rule 34 (stmt -> returnStmt .)
    VARIABLE        reduce using rule 34 (stmt -> returnStmt .)
    TIPO_ENTERO     reduce using rule 34 (stmt -> returnStmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 34 (stmt -> returnStmt .)
    TIPO_CARACTER   reduce using rule 34 (stmt -> returnStmt .)
    $end            reduce using rule 34 (stmt -> returnStmt .)
    LLAVE_DER       reduce using rule 34 (stmt -> returnStmt .)
    SEMICOLON       reduce using rule 34 (stmt -> returnStmt .)
    LLAVE_IZQ       reduce using rule 34 (stmt -> returnStmt .)
    PALABRA_RESERVADA_IF reduce using rule 34 (stmt -> returnStmt .)
    BUCLE_WHILE     reduce using rule 34 (stmt -> returnStmt .)
    BUCLE_FOR       reduce using rule 34 (stmt -> returnStmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 34 (stmt -> returnStmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 34 (stmt -> returnStmt .)
    PALABRA_RESERVADA_NOT reduce using rule 34 (stmt -> returnStmt .)
    OPERADOR_RESTA  reduce using rule 34 (stmt -> returnStmt .)
    OPERADOR_MULTIPLICAR reduce using rule 34 (stmt -> returnStmt .)
    OP_TERNARIO     reduce using rule 34 (stmt -> returnStmt .)
    PARENTESIS_IZQUIERDO reduce using rule 34 (stmt -> returnStmt .)
    NUMERO_ENTERO   reduce using rule 34 (stmt -> returnStmt .)
    NUMERO_DECIMAL  reduce using rule 34 (stmt -> returnStmt .)
    CARACTER        reduce using rule 34 (stmt -> returnStmt .)
    CADENA          reduce using rule 34 (stmt -> returnStmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 34 (stmt -> returnStmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 34 (stmt -> returnStmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 34 (stmt -> returnStmt .)


state 97

    (35) stmt -> breakStmt .

    LINEAS          reduce using rule 35 (stmt -> breakStmt .)
    VARIABLE        reduce using rule 35 (stmt -> breakStmt .)
    TIPO_ENTERO     reduce using rule 35 (stmt -> breakStmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 35 (stmt -> breakStmt .)
    TIPO_CARACTER   reduce using rule 35 (stmt -> breakStmt .)
    $end            reduce using rule 35 (stmt -> breakStmt .)
    LLAVE_DER       reduce using rule 35 (stmt -> breakStmt .)
    SEMICOLON       reduce using rule 35 (stmt -> breakStmt .)
    LLAVE_IZQ       reduce using rule 35 (stmt -> breakStmt .)
    PALABRA_RESERVADA_IF reduce using rule 35 (stmt -> breakStmt .)
    BUCLE_WHILE     reduce using rule 35 (stmt -> breakStmt .)
    BUCLE_FOR       reduce using rule 35 (stmt -> breakStmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 35 (stmt -> breakStmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 35 (stmt -> breakStmt .)
    PALABRA_RESERVADA_NOT reduce using rule 35 (stmt -> breakStmt .)
    OPERADOR_RESTA  reduce using rule 35 (stmt -> breakStmt .)
    OPERADOR_MULTIPLICAR reduce using rule 35 (stmt -> breakStmt .)
    OP_TERNARIO     reduce using rule 35 (stmt -> breakStmt .)
    PARENTESIS_IZQUIERDO reduce using rule 35 (stmt -> breakStmt .)
    NUMERO_ENTERO   reduce using rule 35 (stmt -> breakStmt .)
    NUMERO_DECIMAL  reduce using rule 35 (stmt -> breakStmt .)
    CARACTER        reduce using rule 35 (stmt -> breakStmt .)
    CADENA          reduce using rule 35 (stmt -> breakStmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 35 (stmt -> breakStmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 35 (stmt -> breakStmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 35 (stmt -> breakStmt .)


state 98

    (36) expStmt -> exp . SEMICOLON

    SEMICOLON       shift and go to state 129


state 99

    (37) expStmt -> SEMICOLON .

    LINEAS          reduce using rule 37 (expStmt -> SEMICOLON .)
    VARIABLE        reduce using rule 37 (expStmt -> SEMICOLON .)
    TIPO_ENTERO     reduce using rule 37 (expStmt -> SEMICOLON .)
    PALABRA_RESERVADA_BOOL reduce using rule 37 (expStmt -> SEMICOLON .)
    TIPO_CARACTER   reduce using rule 37 (expStmt -> SEMICOLON .)
    $end            reduce using rule 37 (expStmt -> SEMICOLON .)
    LLAVE_DER       reduce using rule 37 (expStmt -> SEMICOLON .)
    SEMICOLON       reduce using rule 37 (expStmt -> SEMICOLON .)
    LLAVE_IZQ       reduce using rule 37 (expStmt -> SEMICOLON .)
    PALABRA_RESERVADA_IF reduce using rule 37 (expStmt -> SEMICOLON .)
    BUCLE_WHILE     reduce using rule 37 (expStmt -> SEMICOLON .)
    BUCLE_FOR       reduce using rule 37 (expStmt -> SEMICOLON .)
    PALABRA_RESERVADA_RETURN reduce using rule 37 (expStmt -> SEMICOLON .)
    PALABRA_RESERVADA_BREAK reduce using rule 37 (expStmt -> SEMICOLON .)
    PALABRA_RESERVADA_NOT reduce using rule 37 (expStmt -> SEMICOLON .)
    OPERADOR_RESTA  reduce using rule 37 (expStmt -> SEMICOLON .)
    OPERADOR_MULTIPLICAR reduce using rule 37 (expStmt -> SEMICOLON .)
    OP_TERNARIO     reduce using rule 37 (expStmt -> SEMICOLON .)
    PARENTESIS_IZQUIERDO reduce using rule 37 (expStmt -> SEMICOLON .)
    NUMERO_ENTERO   reduce using rule 37 (expStmt -> SEMICOLON .)
    NUMERO_DECIMAL  reduce using rule 37 (expStmt -> SEMICOLON .)
    CARACTER        reduce using rule 37 (expStmt -> SEMICOLON .)
    CADENA          reduce using rule 37 (expStmt -> SEMICOLON .)
    PALABRA_RESERVADA_TRUE reduce using rule 37 (expStmt -> SEMICOLON .)
    PALABRA_RESERVADA_FALSE reduce using rule 37 (expStmt -> SEMICOLON .)
    PALABRA_RESERVADA_ELSE reduce using rule 37 (expStmt -> SEMICOLON .)


state 100

    (38) compoundStmt -> LLAVE_IZQ . localDecls stmtList LLAVE_DER
    (39) localDecls -> . localDecls scopedVarDecl
    (40) localDecls -> . eps
    (110) eps -> .

    PALABRA_RESERVADA_STATIC reduce using rule 110 (eps -> .)
    TIPO_ENTERO     reduce using rule 110 (eps -> .)
    PALABRA_RESERVADA_BOOL reduce using rule 110 (eps -> .)
    TIPO_CARACTER   reduce using rule 110 (eps -> .)
    LLAVE_DER       reduce using rule 110 (eps -> .)
    SEMICOLON       reduce using rule 110 (eps -> .)
    LLAVE_IZQ       reduce using rule 110 (eps -> .)
    PALABRA_RESERVADA_IF reduce using rule 110 (eps -> .)
    BUCLE_WHILE     reduce using rule 110 (eps -> .)
    BUCLE_FOR       reduce using rule 110 (eps -> .)
    PALABRA_RESERVADA_RETURN reduce using rule 110 (eps -> .)
    PALABRA_RESERVADA_BREAK reduce using rule 110 (eps -> .)
    VARIABLE        reduce using rule 110 (eps -> .)
    PALABRA_RESERVADA_NOT reduce using rule 110 (eps -> .)
    OPERADOR_RESTA  reduce using rule 110 (eps -> .)
    OPERADOR_MULTIPLICAR reduce using rule 110 (eps -> .)
    OP_TERNARIO     reduce using rule 110 (eps -> .)
    PARENTESIS_IZQUIERDO reduce using rule 110 (eps -> .)
    NUMERO_ENTERO   reduce using rule 110 (eps -> .)
    NUMERO_DECIMAL  reduce using rule 110 (eps -> .)
    CARACTER        reduce using rule 110 (eps -> .)
    CADENA          reduce using rule 110 (eps -> .)
    PALABRA_RESERVADA_TRUE reduce using rule 110 (eps -> .)
    PALABRA_RESERVADA_FALSE reduce using rule 110 (eps -> .)

    localDecls                     shift and go to state 130
    eps                            shift and go to state 131

state 101

    (43) selectStmt -> PALABRA_RESERVADA_IF . simpleExp PALABRA_RESERVADA_THEN stmt
    (44) selectStmt -> PALABRA_RESERVADA_IF . simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    VARIABLE        shift and go to state 51
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    simpleExp                      shift and go to state 132
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    mutable                        shift and go to state 47
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 102

    (45) iterStmt -> BUCLE_WHILE . simpleExp PALABRA_RESERVADA_DO stmt
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    VARIABLE        shift and go to state 51
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    simpleExp                      shift and go to state 133
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    mutable                        shift and go to state 47
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 103

    (46) iterStmt -> BUCLE_FOR . VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt

    VARIABLE        shift and go to state 134


state 104

    (49) returnStmt -> PALABRA_RESERVADA_RETURN . SEMICOLON
    (50) returnStmt -> PALABRA_RESERVADA_RETURN . exp SEMICOLON
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    SEMICOLON       shift and go to state 135
    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    exp                            shift and go to state 136
    mutable                        shift and go to state 87
    simpleExp                      shift and go to state 88
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 105

    (51) breakStmt -> PALABRA_RESERVADA_BREAK . SEMICOLON

    SEMICOLON       shift and go to state 137


state 106

    (23) parmList -> parmList SEMICOLON parmTypeList .

    SEMICOLON       reduce using rule 23 (parmList -> parmList SEMICOLON parmTypeList .)
    PARENTESIS_DERECHO reduce using rule 23 (parmList -> parmList SEMICOLON parmTypeList .)


state 107

    (26) parmIdList -> parmIdList COMA . parmId
    (28) parmId -> . VARIABLE
    (29) parmId -> . VARIABLE CORCHETE_IZQUIERDO CORCHETE_DERECHO

    VARIABLE        shift and go to state 62

    parmId                         shift and go to state 138

state 108

    (29) parmId -> VARIABLE CORCHETE_IZQUIERDO . CORCHETE_DERECHO

    CORCHETE_DERECHO shift and go to state 139


state 109

    (19) funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .

    LINEAS          reduce using rule 19 (funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    VARIABLE        reduce using rule 19 (funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    TIPO_ENTERO     reduce using rule 19 (funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 19 (funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    TIPO_CARACTER   reduce using rule 19 (funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    $end            reduce using rule 19 (funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)


state 110

    (60) simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .
    (62) andExp -> andExp . PALABRA_RESERVADA_AND unaryRelExp

    PALABRA_RESERVADA_OR reduce using rule 60 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    SEMICOLON       reduce using rule 60 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    COMA            reduce using rule 60 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    PARENTESIS_DERECHO reduce using rule 60 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    CORCHETE_DERECHO reduce using rule 60 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    PALABRA_RESERVADA_THEN reduce using rule 60 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    PALABRA_RESERVADA_DO reduce using rule 60 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    PALABRA_RESERVADA_TO reduce using rule 60 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    PALABRA_RESERVADA_BY reduce using rule 60 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    PALABRA_RESERVADA_AND shift and go to state 66


state 111

    (62) andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .

    PALABRA_RESERVADA_AND reduce using rule 62 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    PALABRA_RESERVADA_OR reduce using rule 62 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    SEMICOLON       reduce using rule 62 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    COMA            reduce using rule 62 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    PARENTESIS_DERECHO reduce using rule 62 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    CORCHETE_DERECHO reduce using rule 62 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    PALABRA_RESERVADA_THEN reduce using rule 62 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    PALABRA_RESERVADA_DO reduce using rule 62 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    PALABRA_RESERVADA_TO reduce using rule 62 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    PALABRA_RESERVADA_BY reduce using rule 62 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)


state 112

    (66) relExp -> minmaxExp relop minmaxExp .
    (74) minmaxExp -> minmaxExp . minmaxop sumExp
    (76) minmaxop -> . PUNTOS_MAYOR_PUNTOS
    (77) minmaxop -> . PUNTOS_MENOR_PUNTOS

    PALABRA_RESERVADA_AND reduce using rule 66 (relExp -> minmaxExp relop minmaxExp .)
    PALABRA_RESERVADA_OR reduce using rule 66 (relExp -> minmaxExp relop minmaxExp .)
    SEMICOLON       reduce using rule 66 (relExp -> minmaxExp relop minmaxExp .)
    COMA            reduce using rule 66 (relExp -> minmaxExp relop minmaxExp .)
    PARENTESIS_DERECHO reduce using rule 66 (relExp -> minmaxExp relop minmaxExp .)
    CORCHETE_DERECHO reduce using rule 66 (relExp -> minmaxExp relop minmaxExp .)
    PALABRA_RESERVADA_THEN reduce using rule 66 (relExp -> minmaxExp relop minmaxExp .)
    PALABRA_RESERVADA_DO reduce using rule 66 (relExp -> minmaxExp relop minmaxExp .)
    PALABRA_RESERVADA_TO reduce using rule 66 (relExp -> minmaxExp relop minmaxExp .)
    PALABRA_RESERVADA_BY reduce using rule 66 (relExp -> minmaxExp relop minmaxExp .)
    PUNTOS_MAYOR_PUNTOS shift and go to state 76
    PUNTOS_MENOR_PUNTOS shift and go to state 77

    minmaxop                       shift and go to state 69

state 113

    (74) minmaxExp -> minmaxExp minmaxop sumExp .
    (78) sumExp -> sumExp . sumop mulExp
    (80) sumop -> . OPERADOR_SUMA
    (81) sumop -> . OPERADOR_RESTA

    MENOR_IGUAL     reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    MENOR           reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    MAYOR           reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    MAYOR_IGUAL     reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    IGUAL           reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    DISTINTO        reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PUNTOS_MENOR_PUNTOS reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PALABRA_RESERVADA_AND reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PALABRA_RESERVADA_OR reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    SEMICOLON       reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    COMA            reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PARENTESIS_DERECHO reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    CORCHETE_DERECHO reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PALABRA_RESERVADA_THEN reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PALABRA_RESERVADA_DO reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PALABRA_RESERVADA_TO reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PALABRA_RESERVADA_BY reduce using rule 74 (minmaxExp -> minmaxExp minmaxop sumExp .)
    OPERADOR_SUMA   shift and go to state 79
    OPERADOR_RESTA  shift and go to state 80

    sumop                          shift and go to state 78

state 114

    (78) sumExp -> sumExp sumop mulExp .
    (82) mulExp -> mulExp . mulop unaryExp
    (84) mulop -> . OPERADOR_MULTIPLICAR
    (85) mulop -> . OPERADOR_DIVIDIR
    (86) mulop -> . OPERADOR_MODULO

    OPERADOR_SUMA   reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    OPERADOR_RESTA  reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    MENOR_IGUAL     reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    MENOR           reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    MAYOR           reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    MAYOR_IGUAL     reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    IGUAL           reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    DISTINTO        reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    PUNTOS_MENOR_PUNTOS reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    PALABRA_RESERVADA_AND reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    PALABRA_RESERVADA_OR reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    SEMICOLON       reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    COMA            reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    PARENTESIS_DERECHO reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    CORCHETE_DERECHO reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    PALABRA_RESERVADA_THEN reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    PALABRA_RESERVADA_DO reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    PALABRA_RESERVADA_TO reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    PALABRA_RESERVADA_BY reduce using rule 78 (sumExp -> sumExp sumop mulExp .)
    OPERADOR_MULTIPLICAR shift and go to state 82
    OPERADOR_DIVIDIR shift and go to state 83
    OPERADOR_MODULO shift and go to state 84

    mulop                          shift and go to state 81

state 115

    (82) mulExp -> mulExp mulop unaryExp .

    OPERADOR_MULTIPLICAR reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    OPERADOR_DIVIDIR reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    OPERADOR_MODULO reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    OPERADOR_SUMA   reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    OPERADOR_RESTA  reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    MENOR_IGUAL     reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    MENOR           reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    MAYOR           reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    MAYOR_IGUAL     reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    IGUAL           reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    DISTINTO        reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    PUNTOS_MENOR_PUNTOS reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    PALABRA_RESERVADA_AND reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    PALABRA_RESERVADA_OR reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    SEMICOLON       reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    COMA            reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    PARENTESIS_DERECHO reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    CORCHETE_DERECHO reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    PALABRA_RESERVADA_THEN reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    PALABRA_RESERVADA_DO reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    PALABRA_RESERVADA_TO reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)
    PALABRA_RESERVADA_BY reduce using rule 82 (mulExp -> mulExp mulop unaryExp .)


state 116

    (96) immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .

    OPERADOR_MULTIPLICAR reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    OPERADOR_DIVIDIR reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    OPERADOR_MODULO reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    OPERADOR_SUMA   reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    OPERADOR_RESTA  reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    MENOR_IGUAL     reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    MENOR           reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    MAYOR           reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    MAYOR_IGUAL     reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    IGUAL           reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    DISTINTO        reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PUNTOS_MENOR_PUNTOS reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_AND reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_OR reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    SEMICOLON       reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    COMA            reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PARENTESIS_DERECHO reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    CORCHETE_DERECHO reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_THEN reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_DO reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_TO reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_BY reduce using rule 96 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)


state 117

    (52) exp -> mutable ASIGNACION . exp
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    mutable                        shift and go to state 87
    exp                            shift and go to state 140
    simpleExp                      shift and go to state 88
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 118

    (53) exp -> mutable SUMA_RESULTADO . exp
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    mutable                        shift and go to state 87
    exp                            shift and go to state 141
    simpleExp                      shift and go to state 88
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 119

    (54) exp -> mutable RESTA_RESULTADO . exp
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    mutable                        shift and go to state 87
    exp                            shift and go to state 142
    simpleExp                      shift and go to state 88
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 120

    (55) exp -> mutable MULTI_RESULTADO . exp
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    mutable                        shift and go to state 87
    exp                            shift and go to state 143
    simpleExp                      shift and go to state 88
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 121

    (56) exp -> mutable DIVI_RESULTADO . exp
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    mutable                        shift and go to state 87
    exp                            shift and go to state 144
    simpleExp                      shift and go to state 88
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 122

    (57) exp -> mutable INCREMENTO .

    PARENTESIS_DERECHO reduce using rule 57 (exp -> mutable INCREMENTO .)
    SEMICOLON       reduce using rule 57 (exp -> mutable INCREMENTO .)
    CORCHETE_DERECHO reduce using rule 57 (exp -> mutable INCREMENTO .)
    COMA            reduce using rule 57 (exp -> mutable INCREMENTO .)


state 123

    (58) exp -> mutable DECREMENTO .

    PARENTESIS_DERECHO reduce using rule 58 (exp -> mutable DECREMENTO .)
    SEMICOLON       reduce using rule 58 (exp -> mutable DECREMENTO .)
    CORCHETE_DERECHO reduce using rule 58 (exp -> mutable DECREMENTO .)
    COMA            reduce using rule 58 (exp -> mutable DECREMENTO .)


state 124

    (95) mutable -> VARIABLE CORCHETE_IZQUIERDO exp . CORCHETE_DERECHO

    CORCHETE_DERECHO shift and go to state 145


state 125

    (99) call -> VARIABLE PARENTESIS_IZQUIERDO args . PARENTESIS_DERECHO

    PARENTESIS_DERECHO shift and go to state 146


state 126

    (100) args -> argList .
    (102) argList -> argList . COMA exp

    PARENTESIS_DERECHO reduce using rule 100 (args -> argList .)
    COMA            shift and go to state 147


state 127

    (101) args -> eps .

    PARENTESIS_DERECHO reduce using rule 101 (args -> eps .)


state 128

    (103) argList -> exp .

    COMA            reduce using rule 103 (argList -> exp .)
    PARENTESIS_DERECHO reduce using rule 103 (argList -> exp .)


state 129

    (36) expStmt -> exp SEMICOLON .

    LINEAS          reduce using rule 36 (expStmt -> exp SEMICOLON .)
    VARIABLE        reduce using rule 36 (expStmt -> exp SEMICOLON .)
    TIPO_ENTERO     reduce using rule 36 (expStmt -> exp SEMICOLON .)
    PALABRA_RESERVADA_BOOL reduce using rule 36 (expStmt -> exp SEMICOLON .)
    TIPO_CARACTER   reduce using rule 36 (expStmt -> exp SEMICOLON .)
    $end            reduce using rule 36 (expStmt -> exp SEMICOLON .)
    LLAVE_DER       reduce using rule 36 (expStmt -> exp SEMICOLON .)
    SEMICOLON       reduce using rule 36 (expStmt -> exp SEMICOLON .)
    LLAVE_IZQ       reduce using rule 36 (expStmt -> exp SEMICOLON .)
    PALABRA_RESERVADA_IF reduce using rule 36 (expStmt -> exp SEMICOLON .)
    BUCLE_WHILE     reduce using rule 36 (expStmt -> exp SEMICOLON .)
    BUCLE_FOR       reduce using rule 36 (expStmt -> exp SEMICOLON .)
    PALABRA_RESERVADA_RETURN reduce using rule 36 (expStmt -> exp SEMICOLON .)
    PALABRA_RESERVADA_BREAK reduce using rule 36 (expStmt -> exp SEMICOLON .)
    PALABRA_RESERVADA_NOT reduce using rule 36 (expStmt -> exp SEMICOLON .)
    OPERADOR_RESTA  reduce using rule 36 (expStmt -> exp SEMICOLON .)
    OPERADOR_MULTIPLICAR reduce using rule 36 (expStmt -> exp SEMICOLON .)
    OP_TERNARIO     reduce using rule 36 (expStmt -> exp SEMICOLON .)
    PARENTESIS_IZQUIERDO reduce using rule 36 (expStmt -> exp SEMICOLON .)
    NUMERO_ENTERO   reduce using rule 36 (expStmt -> exp SEMICOLON .)
    NUMERO_DECIMAL  reduce using rule 36 (expStmt -> exp SEMICOLON .)
    CARACTER        reduce using rule 36 (expStmt -> exp SEMICOLON .)
    CADENA          reduce using rule 36 (expStmt -> exp SEMICOLON .)
    PALABRA_RESERVADA_TRUE reduce using rule 36 (expStmt -> exp SEMICOLON .)
    PALABRA_RESERVADA_FALSE reduce using rule 36 (expStmt -> exp SEMICOLON .)
    PALABRA_RESERVADA_ELSE reduce using rule 36 (expStmt -> exp SEMICOLON .)


state 130

    (38) compoundStmt -> LLAVE_IZQ localDecls . stmtList LLAVE_DER
    (39) localDecls -> localDecls . scopedVarDecl
    (41) stmtList -> . stmtList stmt
    (42) stmtList -> . eps
    (8) scopedVarDecl -> . PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON
    (9) scopedVarDecl -> . typeSpec varDeclList SEMICOLON
    (110) eps -> .
    (16) typeSpec -> . TIPO_ENTERO
    (17) typeSpec -> . PALABRA_RESERVADA_BOOL
    (18) typeSpec -> . TIPO_CARACTER

    PALABRA_RESERVADA_STATIC shift and go to state 151
    LLAVE_DER       reduce using rule 110 (eps -> .)
    SEMICOLON       reduce using rule 110 (eps -> .)
    LLAVE_IZQ       reduce using rule 110 (eps -> .)
    PALABRA_RESERVADA_IF reduce using rule 110 (eps -> .)
    BUCLE_WHILE     reduce using rule 110 (eps -> .)
    BUCLE_FOR       reduce using rule 110 (eps -> .)
    PALABRA_RESERVADA_RETURN reduce using rule 110 (eps -> .)
    PALABRA_RESERVADA_BREAK reduce using rule 110 (eps -> .)
    VARIABLE        reduce using rule 110 (eps -> .)
    PALABRA_RESERVADA_NOT reduce using rule 110 (eps -> .)
    OPERADOR_RESTA  reduce using rule 110 (eps -> .)
    OPERADOR_MULTIPLICAR reduce using rule 110 (eps -> .)
    OP_TERNARIO     reduce using rule 110 (eps -> .)
    PARENTESIS_IZQUIERDO reduce using rule 110 (eps -> .)
    NUMERO_ENTERO   reduce using rule 110 (eps -> .)
    NUMERO_DECIMAL  reduce using rule 110 (eps -> .)
    CARACTER        reduce using rule 110 (eps -> .)
    CADENA          reduce using rule 110 (eps -> .)
    PALABRA_RESERVADA_TRUE reduce using rule 110 (eps -> .)
    PALABRA_RESERVADA_FALSE reduce using rule 110 (eps -> .)
    TIPO_ENTERO     shift and go to state 9
    PALABRA_RESERVADA_BOOL shift and go to state 10
    TIPO_CARACTER   shift and go to state 11

    stmtList                       shift and go to state 148
    scopedVarDecl                  shift and go to state 149
    eps                            shift and go to state 150
    typeSpec                       shift and go to state 152

state 131

    (40) localDecls -> eps .

    PALABRA_RESERVADA_STATIC reduce using rule 40 (localDecls -> eps .)
    TIPO_ENTERO     reduce using rule 40 (localDecls -> eps .)
    PALABRA_RESERVADA_BOOL reduce using rule 40 (localDecls -> eps .)
    TIPO_CARACTER   reduce using rule 40 (localDecls -> eps .)
    LLAVE_DER       reduce using rule 40 (localDecls -> eps .)
    SEMICOLON       reduce using rule 40 (localDecls -> eps .)
    LLAVE_IZQ       reduce using rule 40 (localDecls -> eps .)
    PALABRA_RESERVADA_IF reduce using rule 40 (localDecls -> eps .)
    BUCLE_WHILE     reduce using rule 40 (localDecls -> eps .)
    BUCLE_FOR       reduce using rule 40 (localDecls -> eps .)
    PALABRA_RESERVADA_RETURN reduce using rule 40 (localDecls -> eps .)
    PALABRA_RESERVADA_BREAK reduce using rule 40 (localDecls -> eps .)
    VARIABLE        reduce using rule 40 (localDecls -> eps .)
    PALABRA_RESERVADA_NOT reduce using rule 40 (localDecls -> eps .)
    OPERADOR_RESTA  reduce using rule 40 (localDecls -> eps .)
    OPERADOR_MULTIPLICAR reduce using rule 40 (localDecls -> eps .)
    OP_TERNARIO     reduce using rule 40 (localDecls -> eps .)
    PARENTESIS_IZQUIERDO reduce using rule 40 (localDecls -> eps .)
    NUMERO_ENTERO   reduce using rule 40 (localDecls -> eps .)
    NUMERO_DECIMAL  reduce using rule 40 (localDecls -> eps .)
    CARACTER        reduce using rule 40 (localDecls -> eps .)
    CADENA          reduce using rule 40 (localDecls -> eps .)
    PALABRA_RESERVADA_TRUE reduce using rule 40 (localDecls -> eps .)
    PALABRA_RESERVADA_FALSE reduce using rule 40 (localDecls -> eps .)


state 132

    (43) selectStmt -> PALABRA_RESERVADA_IF simpleExp . PALABRA_RESERVADA_THEN stmt
    (44) selectStmt -> PALABRA_RESERVADA_IF simpleExp . PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (60) simpleExp -> simpleExp . PALABRA_RESERVADA_OR andExp

    PALABRA_RESERVADA_THEN shift and go to state 153
    PALABRA_RESERVADA_OR shift and go to state 65


state 133

    (45) iterStmt -> BUCLE_WHILE simpleExp . PALABRA_RESERVADA_DO stmt
    (60) simpleExp -> simpleExp . PALABRA_RESERVADA_OR andExp

    PALABRA_RESERVADA_DO shift and go to state 154
    PALABRA_RESERVADA_OR shift and go to state 65


state 134

    (46) iterStmt -> BUCLE_FOR VARIABLE . ASIGNACION iterRange PALABRA_RESERVADA_DO stmt

    ASIGNACION      shift and go to state 155


state 135

    (49) returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .

    LINEAS          reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    VARIABLE        reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    TIPO_ENTERO     reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PALABRA_RESERVADA_BOOL reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    TIPO_CARACTER   reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    $end            reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    LLAVE_DER       reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    SEMICOLON       reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    LLAVE_IZQ       reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PALABRA_RESERVADA_IF reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    BUCLE_WHILE     reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    BUCLE_FOR       reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PALABRA_RESERVADA_RETURN reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PALABRA_RESERVADA_BREAK reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PALABRA_RESERVADA_NOT reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    OPERADOR_RESTA  reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    OPERADOR_MULTIPLICAR reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    OP_TERNARIO     reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PARENTESIS_IZQUIERDO reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    NUMERO_ENTERO   reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    NUMERO_DECIMAL  reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    CARACTER        reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    CADENA          reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PALABRA_RESERVADA_TRUE reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PALABRA_RESERVADA_FALSE reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PALABRA_RESERVADA_ELSE reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)


state 136

    (50) returnStmt -> PALABRA_RESERVADA_RETURN exp . SEMICOLON

    SEMICOLON       shift and go to state 156


state 137

    (51) breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .

    LINEAS          reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    VARIABLE        reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    TIPO_ENTERO     reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PALABRA_RESERVADA_BOOL reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    TIPO_CARACTER   reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    $end            reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    LLAVE_DER       reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    SEMICOLON       reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    LLAVE_IZQ       reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PALABRA_RESERVADA_IF reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    BUCLE_WHILE     reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    BUCLE_FOR       reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PALABRA_RESERVADA_RETURN reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PALABRA_RESERVADA_BREAK reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PALABRA_RESERVADA_NOT reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    OPERADOR_RESTA  reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    OPERADOR_MULTIPLICAR reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    OP_TERNARIO     reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PARENTESIS_IZQUIERDO reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    NUMERO_ENTERO   reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    NUMERO_DECIMAL  reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    CARACTER        reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    CADENA          reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PALABRA_RESERVADA_TRUE reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PALABRA_RESERVADA_FALSE reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PALABRA_RESERVADA_ELSE reduce using rule 51 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)


state 138

    (26) parmIdList -> parmIdList COMA parmId .

    COMA            reduce using rule 26 (parmIdList -> parmIdList COMA parmId .)
    SEMICOLON       reduce using rule 26 (parmIdList -> parmIdList COMA parmId .)
    PARENTESIS_DERECHO reduce using rule 26 (parmIdList -> parmIdList COMA parmId .)


state 139

    (29) parmId -> VARIABLE CORCHETE_IZQUIERDO CORCHETE_DERECHO .

    COMA            reduce using rule 29 (parmId -> VARIABLE CORCHETE_IZQUIERDO CORCHETE_DERECHO .)
    SEMICOLON       reduce using rule 29 (parmId -> VARIABLE CORCHETE_IZQUIERDO CORCHETE_DERECHO .)
    PARENTESIS_DERECHO reduce using rule 29 (parmId -> VARIABLE CORCHETE_IZQUIERDO CORCHETE_DERECHO .)


state 140

    (52) exp -> mutable ASIGNACION exp .

    PARENTESIS_DERECHO reduce using rule 52 (exp -> mutable ASIGNACION exp .)
    SEMICOLON       reduce using rule 52 (exp -> mutable ASIGNACION exp .)
    CORCHETE_DERECHO reduce using rule 52 (exp -> mutable ASIGNACION exp .)
    COMA            reduce using rule 52 (exp -> mutable ASIGNACION exp .)


state 141

    (53) exp -> mutable SUMA_RESULTADO exp .

    PARENTESIS_DERECHO reduce using rule 53 (exp -> mutable SUMA_RESULTADO exp .)
    SEMICOLON       reduce using rule 53 (exp -> mutable SUMA_RESULTADO exp .)
    CORCHETE_DERECHO reduce using rule 53 (exp -> mutable SUMA_RESULTADO exp .)
    COMA            reduce using rule 53 (exp -> mutable SUMA_RESULTADO exp .)


state 142

    (54) exp -> mutable RESTA_RESULTADO exp .

    PARENTESIS_DERECHO reduce using rule 54 (exp -> mutable RESTA_RESULTADO exp .)
    SEMICOLON       reduce using rule 54 (exp -> mutable RESTA_RESULTADO exp .)
    CORCHETE_DERECHO reduce using rule 54 (exp -> mutable RESTA_RESULTADO exp .)
    COMA            reduce using rule 54 (exp -> mutable RESTA_RESULTADO exp .)


state 143

    (55) exp -> mutable MULTI_RESULTADO exp .

    PARENTESIS_DERECHO reduce using rule 55 (exp -> mutable MULTI_RESULTADO exp .)
    SEMICOLON       reduce using rule 55 (exp -> mutable MULTI_RESULTADO exp .)
    CORCHETE_DERECHO reduce using rule 55 (exp -> mutable MULTI_RESULTADO exp .)
    COMA            reduce using rule 55 (exp -> mutable MULTI_RESULTADO exp .)


state 144

    (56) exp -> mutable DIVI_RESULTADO exp .

    PARENTESIS_DERECHO reduce using rule 56 (exp -> mutable DIVI_RESULTADO exp .)
    SEMICOLON       reduce using rule 56 (exp -> mutable DIVI_RESULTADO exp .)
    CORCHETE_DERECHO reduce using rule 56 (exp -> mutable DIVI_RESULTADO exp .)
    COMA            reduce using rule 56 (exp -> mutable DIVI_RESULTADO exp .)


state 145

    (95) mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .

    OPERADOR_MULTIPLICAR reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    OPERADOR_DIVIDIR reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    OPERADOR_MODULO reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    OPERADOR_SUMA   reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    OPERADOR_RESTA  reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    MENOR_IGUAL     reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    MENOR           reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    MAYOR           reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    MAYOR_IGUAL     reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    IGUAL           reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    DISTINTO        reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PUNTOS_MENOR_PUNTOS reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PALABRA_RESERVADA_AND reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PALABRA_RESERVADA_OR reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    SEMICOLON       reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    COMA            reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PARENTESIS_DERECHO reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    CORCHETE_DERECHO reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PALABRA_RESERVADA_THEN reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PALABRA_RESERVADA_DO reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PALABRA_RESERVADA_TO reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PALABRA_RESERVADA_BY reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    ASIGNACION      reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    SUMA_RESULTADO  reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    RESTA_RESULTADO reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    MULTI_RESULTADO reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    DIVI_RESULTADO  reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    INCREMENTO      reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    DECREMENTO      reduce using rule 95 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)


state 146

    (99) call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .

    OPERADOR_MULTIPLICAR reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    OPERADOR_DIVIDIR reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    OPERADOR_MODULO reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    OPERADOR_SUMA   reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    OPERADOR_RESTA  reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    MENOR_IGUAL     reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    MENOR           reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    MAYOR           reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    MAYOR_IGUAL     reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    IGUAL           reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    DISTINTO        reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PUNTOS_MENOR_PUNTOS reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_AND reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_OR reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    SEMICOLON       reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    COMA            reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PARENTESIS_DERECHO reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    CORCHETE_DERECHO reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_THEN reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_DO reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_TO reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_BY reduce using rule 99 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)


state 147

    (102) argList -> argList COMA . exp
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    exp                            shift and go to state 157
    mutable                        shift and go to state 87
    simpleExp                      shift and go to state 88
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 148

    (38) compoundStmt -> LLAVE_IZQ localDecls stmtList . LLAVE_DER
    (41) stmtList -> stmtList . stmt
    (30) stmt -> . expStmt
    (31) stmt -> . compoundStmt
    (32) stmt -> . selectStmt
    (33) stmt -> . iterStmt
    (34) stmt -> . returnStmt
    (35) stmt -> . breakStmt
    (36) expStmt -> . exp SEMICOLON
    (37) expStmt -> . SEMICOLON
    (38) compoundStmt -> . LLAVE_IZQ localDecls stmtList LLAVE_DER
    (43) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt
    (44) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (45) iterStmt -> . BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt
    (46) iterStmt -> . BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt
    (49) returnStmt -> . PALABRA_RESERVADA_RETURN SEMICOLON
    (50) returnStmt -> . PALABRA_RESERVADA_RETURN exp SEMICOLON
    (51) breakStmt -> . PALABRA_RESERVADA_BREAK SEMICOLON
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    LLAVE_DER       shift and go to state 158
    SEMICOLON       shift and go to state 99
    LLAVE_IZQ       shift and go to state 100
    PALABRA_RESERVADA_IF shift and go to state 101
    BUCLE_WHILE     shift and go to state 102
    BUCLE_FOR       shift and go to state 103
    PALABRA_RESERVADA_RETURN shift and go to state 104
    PALABRA_RESERVADA_BREAK shift and go to state 105
    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    stmt                           shift and go to state 159
    expStmt                        shift and go to state 92
    compoundStmt                   shift and go to state 93
    selectStmt                     shift and go to state 94
    iterStmt                       shift and go to state 95
    returnStmt                     shift and go to state 96
    breakStmt                      shift and go to state 97
    exp                            shift and go to state 98
    simpleExp                      shift and go to state 88
    mutable                        shift and go to state 87
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 149

    (39) localDecls -> localDecls scopedVarDecl .

    PALABRA_RESERVADA_STATIC reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    TIPO_ENTERO     reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    PALABRA_RESERVADA_BOOL reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    TIPO_CARACTER   reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    LLAVE_DER       reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    SEMICOLON       reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    LLAVE_IZQ       reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    PALABRA_RESERVADA_IF reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    BUCLE_WHILE     reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    BUCLE_FOR       reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    PALABRA_RESERVADA_RETURN reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    PALABRA_RESERVADA_BREAK reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    VARIABLE        reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    PALABRA_RESERVADA_NOT reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    OPERADOR_RESTA  reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    OPERADOR_MULTIPLICAR reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    OP_TERNARIO     reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    PARENTESIS_IZQUIERDO reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    NUMERO_ENTERO   reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    NUMERO_DECIMAL  reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    CARACTER        reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    CADENA          reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    PALABRA_RESERVADA_TRUE reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)
    PALABRA_RESERVADA_FALSE reduce using rule 39 (localDecls -> localDecls scopedVarDecl .)


state 150

    (42) stmtList -> eps .

    LLAVE_DER       reduce using rule 42 (stmtList -> eps .)
    SEMICOLON       reduce using rule 42 (stmtList -> eps .)
    LLAVE_IZQ       reduce using rule 42 (stmtList -> eps .)
    PALABRA_RESERVADA_IF reduce using rule 42 (stmtList -> eps .)
    BUCLE_WHILE     reduce using rule 42 (stmtList -> eps .)
    BUCLE_FOR       reduce using rule 42 (stmtList -> eps .)
    PALABRA_RESERVADA_RETURN reduce using rule 42 (stmtList -> eps .)
    PALABRA_RESERVADA_BREAK reduce using rule 42 (stmtList -> eps .)
    VARIABLE        reduce using rule 42 (stmtList -> eps .)
    PALABRA_RESERVADA_NOT reduce using rule 42 (stmtList -> eps .)
    OPERADOR_RESTA  reduce using rule 42 (stmtList -> eps .)
    OPERADOR_MULTIPLICAR reduce using rule 42 (stmtList -> eps .)
    OP_TERNARIO     reduce using rule 42 (stmtList -> eps .)
    PARENTESIS_IZQUIERDO reduce using rule 42 (stmtList -> eps .)
    NUMERO_ENTERO   reduce using rule 42 (stmtList -> eps .)
    NUMERO_DECIMAL  reduce using rule 42 (stmtList -> eps .)
    CARACTER        reduce using rule 42 (stmtList -> eps .)
    CADENA          reduce using rule 42 (stmtList -> eps .)
    PALABRA_RESERVADA_TRUE reduce using rule 42 (stmtList -> eps .)
    PALABRA_RESERVADA_FALSE reduce using rule 42 (stmtList -> eps .)


state 151

    (8) scopedVarDecl -> PALABRA_RESERVADA_STATIC . typeSpec varDeclList SEMICOLON
    (16) typeSpec -> . TIPO_ENTERO
    (17) typeSpec -> . PALABRA_RESERVADA_BOOL
    (18) typeSpec -> . TIPO_CARACTER

    TIPO_ENTERO     shift and go to state 9
    PALABRA_RESERVADA_BOOL shift and go to state 10
    TIPO_CARACTER   shift and go to state 11

    typeSpec                       shift and go to state 160

state 152

    (9) scopedVarDecl -> typeSpec . varDeclList SEMICOLON
    (10) varDeclList -> . varDeclList COMA varDeclInit
    (11) varDeclList -> . varDeclInit
    (12) varDeclInit -> . varDeclId
    (13) varDeclInit -> . varDeclId COLON simpleExp
    (14) varDeclId -> . VARIABLE
    (15) varDeclId -> . VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO

    VARIABLE        shift and go to state 29

    varDeclList                    shift and go to state 161
    varDeclInit                    shift and go to state 15
    varDeclId                      shift and go to state 16

state 153

    (43) selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN . stmt
    (44) selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN . stmt PALABRA_RESERVADA_ELSE stmt
    (30) stmt -> . expStmt
    (31) stmt -> . compoundStmt
    (32) stmt -> . selectStmt
    (33) stmt -> . iterStmt
    (34) stmt -> . returnStmt
    (35) stmt -> . breakStmt
    (36) expStmt -> . exp SEMICOLON
    (37) expStmt -> . SEMICOLON
    (38) compoundStmt -> . LLAVE_IZQ localDecls stmtList LLAVE_DER
    (43) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt
    (44) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (45) iterStmt -> . BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt
    (46) iterStmt -> . BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt
    (49) returnStmt -> . PALABRA_RESERVADA_RETURN SEMICOLON
    (50) returnStmt -> . PALABRA_RESERVADA_RETURN exp SEMICOLON
    (51) breakStmt -> . PALABRA_RESERVADA_BREAK SEMICOLON
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    SEMICOLON       shift and go to state 99
    LLAVE_IZQ       shift and go to state 100
    PALABRA_RESERVADA_IF shift and go to state 101
    BUCLE_WHILE     shift and go to state 102
    BUCLE_FOR       shift and go to state 103
    PALABRA_RESERVADA_RETURN shift and go to state 104
    PALABRA_RESERVADA_BREAK shift and go to state 105
    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    simpleExp                      shift and go to state 88
    stmt                           shift and go to state 162
    expStmt                        shift and go to state 92
    compoundStmt                   shift and go to state 93
    selectStmt                     shift and go to state 94
    iterStmt                       shift and go to state 95
    returnStmt                     shift and go to state 96
    breakStmt                      shift and go to state 97
    exp                            shift and go to state 98
    mutable                        shift and go to state 87
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 154

    (45) iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO . stmt
    (30) stmt -> . expStmt
    (31) stmt -> . compoundStmt
    (32) stmt -> . selectStmt
    (33) stmt -> . iterStmt
    (34) stmt -> . returnStmt
    (35) stmt -> . breakStmt
    (36) expStmt -> . exp SEMICOLON
    (37) expStmt -> . SEMICOLON
    (38) compoundStmt -> . LLAVE_IZQ localDecls stmtList LLAVE_DER
    (43) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt
    (44) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (45) iterStmt -> . BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt
    (46) iterStmt -> . BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt
    (49) returnStmt -> . PALABRA_RESERVADA_RETURN SEMICOLON
    (50) returnStmt -> . PALABRA_RESERVADA_RETURN exp SEMICOLON
    (51) breakStmt -> . PALABRA_RESERVADA_BREAK SEMICOLON
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    SEMICOLON       shift and go to state 99
    LLAVE_IZQ       shift and go to state 100
    PALABRA_RESERVADA_IF shift and go to state 101
    BUCLE_WHILE     shift and go to state 102
    BUCLE_FOR       shift and go to state 103
    PALABRA_RESERVADA_RETURN shift and go to state 104
    PALABRA_RESERVADA_BREAK shift and go to state 105
    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    simpleExp                      shift and go to state 88
    stmt                           shift and go to state 163
    expStmt                        shift and go to state 92
    compoundStmt                   shift and go to state 93
    selectStmt                     shift and go to state 94
    iterStmt                       shift and go to state 95
    returnStmt                     shift and go to state 96
    breakStmt                      shift and go to state 97
    exp                            shift and go to state 98
    mutable                        shift and go to state 87
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 155

    (46) iterStmt -> BUCLE_FOR VARIABLE ASIGNACION . iterRange PALABRA_RESERVADA_DO stmt
    (47) iterRange -> . simpleExp PALABRA_RESERVADA_TO simpleExp
    (48) iterRange -> . simpleExp PALABRA_RESERVADA_TO simpleExp PALABRA_RESERVADA_BY simpleExp
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    VARIABLE        shift and go to state 51
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    iterRange                      shift and go to state 164
    simpleExp                      shift and go to state 165
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    mutable                        shift and go to state 47
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 156

    (50) returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .

    LINEAS          reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    VARIABLE        reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    TIPO_ENTERO     reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PALABRA_RESERVADA_BOOL reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    TIPO_CARACTER   reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    $end            reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    LLAVE_DER       reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    SEMICOLON       reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    LLAVE_IZQ       reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PALABRA_RESERVADA_IF reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    BUCLE_WHILE     reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    BUCLE_FOR       reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PALABRA_RESERVADA_RETURN reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PALABRA_RESERVADA_BREAK reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PALABRA_RESERVADA_NOT reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    OPERADOR_RESTA  reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    OPERADOR_MULTIPLICAR reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    OP_TERNARIO     reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PARENTESIS_IZQUIERDO reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    NUMERO_ENTERO   reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    NUMERO_DECIMAL  reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    CARACTER        reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    CADENA          reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PALABRA_RESERVADA_TRUE reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PALABRA_RESERVADA_FALSE reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PALABRA_RESERVADA_ELSE reduce using rule 50 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)


state 157

    (102) argList -> argList COMA exp .

    COMA            reduce using rule 102 (argList -> argList COMA exp .)
    PARENTESIS_DERECHO reduce using rule 102 (argList -> argList COMA exp .)


state 158

    (38) compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .

    LINEAS          reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    VARIABLE        reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    TIPO_ENTERO     reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PALABRA_RESERVADA_BOOL reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    TIPO_CARACTER   reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    $end            reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    LLAVE_DER       reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    SEMICOLON       reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    LLAVE_IZQ       reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PALABRA_RESERVADA_IF reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    BUCLE_WHILE     reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    BUCLE_FOR       reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PALABRA_RESERVADA_RETURN reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PALABRA_RESERVADA_BREAK reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PALABRA_RESERVADA_NOT reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    OPERADOR_RESTA  reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    OPERADOR_MULTIPLICAR reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    OP_TERNARIO     reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PARENTESIS_IZQUIERDO reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    NUMERO_ENTERO   reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    NUMERO_DECIMAL  reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    CARACTER        reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    CADENA          reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PALABRA_RESERVADA_TRUE reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PALABRA_RESERVADA_FALSE reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PALABRA_RESERVADA_ELSE reduce using rule 38 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)


state 159

    (41) stmtList -> stmtList stmt .

    LLAVE_DER       reduce using rule 41 (stmtList -> stmtList stmt .)
    SEMICOLON       reduce using rule 41 (stmtList -> stmtList stmt .)
    LLAVE_IZQ       reduce using rule 41 (stmtList -> stmtList stmt .)
    PALABRA_RESERVADA_IF reduce using rule 41 (stmtList -> stmtList stmt .)
    BUCLE_WHILE     reduce using rule 41 (stmtList -> stmtList stmt .)
    BUCLE_FOR       reduce using rule 41 (stmtList -> stmtList stmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 41 (stmtList -> stmtList stmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 41 (stmtList -> stmtList stmt .)
    VARIABLE        reduce using rule 41 (stmtList -> stmtList stmt .)
    PALABRA_RESERVADA_NOT reduce using rule 41 (stmtList -> stmtList stmt .)
    OPERADOR_RESTA  reduce using rule 41 (stmtList -> stmtList stmt .)
    OPERADOR_MULTIPLICAR reduce using rule 41 (stmtList -> stmtList stmt .)
    OP_TERNARIO     reduce using rule 41 (stmtList -> stmtList stmt .)
    PARENTESIS_IZQUIERDO reduce using rule 41 (stmtList -> stmtList stmt .)
    NUMERO_ENTERO   reduce using rule 41 (stmtList -> stmtList stmt .)
    NUMERO_DECIMAL  reduce using rule 41 (stmtList -> stmtList stmt .)
    CARACTER        reduce using rule 41 (stmtList -> stmtList stmt .)
    CADENA          reduce using rule 41 (stmtList -> stmtList stmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 41 (stmtList -> stmtList stmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 41 (stmtList -> stmtList stmt .)


state 160

    (8) scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec . varDeclList SEMICOLON
    (10) varDeclList -> . varDeclList COMA varDeclInit
    (11) varDeclList -> . varDeclInit
    (12) varDeclInit -> . varDeclId
    (13) varDeclInit -> . varDeclId COLON simpleExp
    (14) varDeclId -> . VARIABLE
    (15) varDeclId -> . VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO

    VARIABLE        shift and go to state 29

    varDeclList                    shift and go to state 166
    varDeclInit                    shift and go to state 15
    varDeclId                      shift and go to state 16

state 161

    (9) scopedVarDecl -> typeSpec varDeclList . SEMICOLON
    (10) varDeclList -> varDeclList . COMA varDeclInit

    SEMICOLON       shift and go to state 167
    COMA            shift and go to state 19


state 162

    (43) selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .
    (44) selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt . PALABRA_RESERVADA_ELSE stmt

  ! shift/reduce conflict for PALABRA_RESERVADA_ELSE resolved as shift
    LINEAS          reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    VARIABLE        reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    TIPO_ENTERO     reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    TIPO_CARACTER   reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    $end            reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    LLAVE_DER       reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    SEMICOLON       reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    LLAVE_IZQ       reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PALABRA_RESERVADA_IF reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    BUCLE_WHILE     reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    BUCLE_FOR       reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PALABRA_RESERVADA_NOT reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    OPERADOR_RESTA  reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    OPERADOR_MULTIPLICAR reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    OP_TERNARIO     reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PARENTESIS_IZQUIERDO reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    NUMERO_ENTERO   reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    NUMERO_DECIMAL  reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    CARACTER        reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    CADENA          reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PALABRA_RESERVADA_ELSE shift and go to state 168

  ! PALABRA_RESERVADA_ELSE [ reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .) ]


state 163

    (45) iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .

    LINEAS          reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    VARIABLE        reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    TIPO_ENTERO     reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    TIPO_CARACTER   reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    $end            reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    LLAVE_DER       reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    SEMICOLON       reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    LLAVE_IZQ       reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_IF reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    BUCLE_WHILE     reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    BUCLE_FOR       reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_NOT reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    OPERADOR_RESTA  reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    OPERADOR_MULTIPLICAR reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    OP_TERNARIO     reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PARENTESIS_IZQUIERDO reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    NUMERO_ENTERO   reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    NUMERO_DECIMAL  reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    CARACTER        reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    CADENA          reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 45 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)


state 164

    (46) iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange . PALABRA_RESERVADA_DO stmt

    PALABRA_RESERVADA_DO shift and go to state 169


state 165

    (47) iterRange -> simpleExp . PALABRA_RESERVADA_TO simpleExp
    (48) iterRange -> simpleExp . PALABRA_RESERVADA_TO simpleExp PALABRA_RESERVADA_BY simpleExp
    (60) simpleExp -> simpleExp . PALABRA_RESERVADA_OR andExp

    PALABRA_RESERVADA_TO shift and go to state 170
    PALABRA_RESERVADA_OR shift and go to state 65


state 166

    (8) scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList . SEMICOLON
    (10) varDeclList -> varDeclList . COMA varDeclInit

    SEMICOLON       shift and go to state 171
    COMA            shift and go to state 19


state 167

    (9) scopedVarDecl -> typeSpec varDeclList SEMICOLON .

    PALABRA_RESERVADA_STATIC reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    TIPO_ENTERO     reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_BOOL reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    TIPO_CARACTER   reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    LLAVE_DER       reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    SEMICOLON       reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    LLAVE_IZQ       reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_IF reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    BUCLE_WHILE     reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    BUCLE_FOR       reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_RETURN reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_BREAK reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    VARIABLE        reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_NOT reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    OPERADOR_RESTA  reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    OPERADOR_MULTIPLICAR reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    OP_TERNARIO     reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    PARENTESIS_IZQUIERDO reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    NUMERO_ENTERO   reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    NUMERO_DECIMAL  reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    CARACTER        reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    CADENA          reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_TRUE reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_FALSE reduce using rule 9 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)


state 168

    (44) selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE . stmt
    (30) stmt -> . expStmt
    (31) stmt -> . compoundStmt
    (32) stmt -> . selectStmt
    (33) stmt -> . iterStmt
    (34) stmt -> . returnStmt
    (35) stmt -> . breakStmt
    (36) expStmt -> . exp SEMICOLON
    (37) expStmt -> . SEMICOLON
    (38) compoundStmt -> . LLAVE_IZQ localDecls stmtList LLAVE_DER
    (43) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt
    (44) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (45) iterStmt -> . BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt
    (46) iterStmt -> . BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt
    (49) returnStmt -> . PALABRA_RESERVADA_RETURN SEMICOLON
    (50) returnStmt -> . PALABRA_RESERVADA_RETURN exp SEMICOLON
    (51) breakStmt -> . PALABRA_RESERVADA_BREAK SEMICOLON
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    SEMICOLON       shift and go to state 99
    LLAVE_IZQ       shift and go to state 100
    PALABRA_RESERVADA_IF shift and go to state 101
    BUCLE_WHILE     shift and go to state 102
    BUCLE_FOR       shift and go to state 103
    PALABRA_RESERVADA_RETURN shift and go to state 104
    PALABRA_RESERVADA_BREAK shift and go to state 105
    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    simpleExp                      shift and go to state 88
    stmt                           shift and go to state 172
    expStmt                        shift and go to state 92
    compoundStmt                   shift and go to state 93
    selectStmt                     shift and go to state 94
    iterStmt                       shift and go to state 95
    returnStmt                     shift and go to state 96
    breakStmt                      shift and go to state 97
    exp                            shift and go to state 98
    mutable                        shift and go to state 87
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 169

    (46) iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO . stmt
    (30) stmt -> . expStmt
    (31) stmt -> . compoundStmt
    (32) stmt -> . selectStmt
    (33) stmt -> . iterStmt
    (34) stmt -> . returnStmt
    (35) stmt -> . breakStmt
    (36) expStmt -> . exp SEMICOLON
    (37) expStmt -> . SEMICOLON
    (38) compoundStmt -> . LLAVE_IZQ localDecls stmtList LLAVE_DER
    (43) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt
    (44) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (45) iterStmt -> . BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt
    (46) iterStmt -> . BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt
    (49) returnStmt -> . PALABRA_RESERVADA_RETURN SEMICOLON
    (50) returnStmt -> . PALABRA_RESERVADA_RETURN exp SEMICOLON
    (51) breakStmt -> . PALABRA_RESERVADA_BREAK SEMICOLON
    (52) exp -> . mutable ASIGNACION exp
    (53) exp -> . mutable SUMA_RESULTADO exp
    (54) exp -> . mutable RESTA_RESULTADO exp
    (55) exp -> . mutable MULTI_RESULTADO exp
    (56) exp -> . mutable DIVI_RESULTADO exp
    (57) exp -> . mutable INCREMENTO
    (58) exp -> . mutable DECREMENTO
    (59) exp -> . simpleExp
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    SEMICOLON       shift and go to state 99
    LLAVE_IZQ       shift and go to state 100
    PALABRA_RESERVADA_IF shift and go to state 101
    BUCLE_WHILE     shift and go to state 102
    BUCLE_FOR       shift and go to state 103
    PALABRA_RESERVADA_RETURN shift and go to state 104
    PALABRA_RESERVADA_BREAK shift and go to state 105
    VARIABLE        shift and go to state 51
    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    stmt                           shift and go to state 173
    expStmt                        shift and go to state 92
    compoundStmt                   shift and go to state 93
    selectStmt                     shift and go to state 94
    iterStmt                       shift and go to state 95
    returnStmt                     shift and go to state 96
    breakStmt                      shift and go to state 97
    exp                            shift and go to state 98
    simpleExp                      shift and go to state 88
    mutable                        shift and go to state 87
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 170

    (47) iterRange -> simpleExp PALABRA_RESERVADA_TO . simpleExp
    (48) iterRange -> simpleExp PALABRA_RESERVADA_TO . simpleExp PALABRA_RESERVADA_BY simpleExp
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    VARIABLE        shift and go to state 51
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    simpleExp                      shift and go to state 174
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    mutable                        shift and go to state 47
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 171

    (8) scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .

    PALABRA_RESERVADA_STATIC reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    TIPO_ENTERO     reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_BOOL reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    TIPO_CARACTER   reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    LLAVE_DER       reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    SEMICOLON       reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    LLAVE_IZQ       reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_IF reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    BUCLE_WHILE     reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    BUCLE_FOR       reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_RETURN reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_BREAK reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    VARIABLE        reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_NOT reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    OPERADOR_RESTA  reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    OPERADOR_MULTIPLICAR reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    OP_TERNARIO     reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    PARENTESIS_IZQUIERDO reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    NUMERO_ENTERO   reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    NUMERO_DECIMAL  reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    CARACTER        reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    CADENA          reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_TRUE reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_FALSE reduce using rule 8 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)


state 172

    (44) selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .

    LINEAS          reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    VARIABLE        reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    TIPO_ENTERO     reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    TIPO_CARACTER   reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    $end            reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    LLAVE_DER       reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    SEMICOLON       reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    LLAVE_IZQ       reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PALABRA_RESERVADA_IF reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    BUCLE_WHILE     reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    BUCLE_FOR       reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PALABRA_RESERVADA_NOT reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    OPERADOR_RESTA  reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    OPERADOR_MULTIPLICAR reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    OP_TERNARIO     reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PARENTESIS_IZQUIERDO reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    NUMERO_ENTERO   reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    NUMERO_DECIMAL  reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    CARACTER        reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    CADENA          reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 44 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)


state 173

    (46) iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .

    LINEAS          reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    VARIABLE        reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    TIPO_ENTERO     reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    TIPO_CARACTER   reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    $end            reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    LLAVE_DER       reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    SEMICOLON       reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    LLAVE_IZQ       reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_IF reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    BUCLE_WHILE     reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    BUCLE_FOR       reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_NOT reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    OPERADOR_RESTA  reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    OPERADOR_MULTIPLICAR reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    OP_TERNARIO     reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PARENTESIS_IZQUIERDO reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    NUMERO_ENTERO   reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    NUMERO_DECIMAL  reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    CARACTER        reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    CADENA          reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 46 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)


state 174

    (47) iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp .
    (48) iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp . PALABRA_RESERVADA_BY simpleExp
    (60) simpleExp -> simpleExp . PALABRA_RESERVADA_OR andExp

    PALABRA_RESERVADA_DO reduce using rule 47 (iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp .)
    PALABRA_RESERVADA_BY shift and go to state 175
    PALABRA_RESERVADA_OR shift and go to state 65


state 175

    (48) iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp PALABRA_RESERVADA_BY . simpleExp
    (60) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (61) simpleExp -> . andExp
    (62) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (63) andExp -> . unaryRelExp
    (64) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (65) unaryRelExp -> . relExp
    (66) relExp -> . minmaxExp relop minmaxExp
    (67) relExp -> . minmaxExp
    (74) minmaxExp -> . minmaxExp minmaxop sumExp
    (75) minmaxExp -> . sumExp
    (78) sumExp -> . sumExp sumop mulExp
    (79) sumExp -> . mulExp
    (82) mulExp -> . mulExp mulop unaryExp
    (83) mulExp -> . unaryExp
    (87) unaryExp -> . unaryop unaryExp
    (88) unaryExp -> . factor
    (89) unaryop -> . OPERADOR_RESTA
    (90) unaryop -> . OPERADOR_MULTIPLICAR
    (91) unaryop -> . OP_TERNARIO
    (92) factor -> . immutable
    (93) factor -> . mutable
    (96) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (97) immutable -> . call
    (98) immutable -> . constant
    (94) mutable -> . VARIABLE
    (95) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (99) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (104) constant -> . NUMERO_ENTERO
    (105) constant -> . NUMERO_DECIMAL
    (106) constant -> . CARACTER
    (107) constant -> . CADENA
    (108) constant -> . PALABRA_RESERVADA_TRUE
    (109) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 35
    OPERADOR_RESTA  shift and go to state 43
    OPERADOR_MULTIPLICAR shift and go to state 44
    OP_TERNARIO     shift and go to state 45
    PARENTESIS_IZQUIERDO shift and go to state 48
    VARIABLE        shift and go to state 51
    NUMERO_ENTERO   shift and go to state 52
    NUMERO_DECIMAL  shift and go to state 53
    CARACTER        shift and go to state 54
    CADENA          shift and go to state 55
    PALABRA_RESERVADA_TRUE shift and go to state 56
    PALABRA_RESERVADA_FALSE shift and go to state 57

    simpleExp                      shift and go to state 176
    andExp                         shift and go to state 33
    unaryRelExp                    shift and go to state 34
    relExp                         shift and go to state 36
    minmaxExp                      shift and go to state 37
    sumExp                         shift and go to state 38
    mulExp                         shift and go to state 39
    unaryExp                       shift and go to state 40
    unaryop                        shift and go to state 41
    factor                         shift and go to state 42
    immutable                      shift and go to state 46
    mutable                        shift and go to state 47
    call                           shift and go to state 49
    constant                       shift and go to state 50

state 176

    (48) iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp PALABRA_RESERVADA_BY simpleExp .
    (60) simpleExp -> simpleExp . PALABRA_RESERVADA_OR andExp

    PALABRA_RESERVADA_DO reduce using rule 48 (iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp PALABRA_RESERVADA_BY simpleExp .)
    PALABRA_RESERVADA_OR shift and go to state 65

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PALABRA_RESERVADA_ELSE in state 162 resolved as shift
