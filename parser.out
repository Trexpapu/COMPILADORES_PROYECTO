Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CARACTER_ERROR
    COMENTARIOS
    COMENTARIO_BLOQUE
    ENTERO_SOBREPASADO
    LINEAS
    NUMERO_DECIMAL_CON_ERROR
    NUMERO_DECIMAL_CON_ERROR2
    PALABRA_RESERVADA_MAIN
    PALABRA_RESERVADA_NULL
    TIPO_DECIMAL
    VARIABLE_ERROR

Grammar

Rule 0     S' -> program
Rule 1     program -> declList
Rule 2     declList -> declList decl
Rule 3     declList -> decl
Rule 4     decl -> varDecl
Rule 5     decl -> funDecl
Rule 6     varDecl -> typeSpec varDeclList SEMICOLON
Rule 7     scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON
Rule 8     scopedVarDecl -> typeSpec varDeclList SEMICOLON
Rule 9     varDeclList -> varDeclList COMA varDeclInit
Rule 10    varDeclList -> varDeclInit
Rule 11    varDeclInit -> varDeclId
Rule 12    varDeclInit -> varDeclId COLON simpleExp
Rule 13    varDeclId -> VARIABLE
Rule 14    varDeclId -> VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO
Rule 15    typeSpec -> TIPO_ENTERO
Rule 16    typeSpec -> PALABRA_RESERVADA_BOOL
Rule 17    typeSpec -> TIPO_CARACTER
Rule 18    funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt
Rule 19    funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt
Rule 20    parms -> parmList
Rule 21    parms -> eps
Rule 22    parmList -> parmList SEMICOLON parmTypeList
Rule 23    parmList -> parmTypeList
Rule 24    parmTypeList -> typeSpec parmIdList
Rule 25    parmIdList -> parmIdList COMA parmId
Rule 26    parmIdList -> parmId
Rule 27    parmId -> VARIABLE
Rule 28    parmId -> VARIABLE CORCHETE_IZQUIERDO CORCHETE_DERECHO
Rule 29    stmt -> expStmt
Rule 30    stmt -> compoundStmt
Rule 31    stmt -> selectStmt
Rule 32    stmt -> iterStmt
Rule 33    stmt -> returnStmt
Rule 34    stmt -> breakStmt
Rule 35    expStmt -> exp SEMICOLON
Rule 36    expStmt -> SEMICOLON
Rule 37    compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER
Rule 38    localDecls -> localDecls scopedVarDecl
Rule 39    localDecls -> eps
Rule 40    stmtList -> stmtList stmt
Rule 41    stmtList -> eps
Rule 42    selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt
Rule 43    selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
Rule 44    iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt
Rule 45    iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt
Rule 46    iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp
Rule 47    iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp PALABRA_RESERVADA_BY simpleExp
Rule 48    returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON
Rule 49    returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON
Rule 50    breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON
Rule 51    exp -> mutable ASIGNACION exp
Rule 52    exp -> mutable SUMA_RESULTADO exp
Rule 53    exp -> mutable RESTA_RESULTADO exp
Rule 54    exp -> mutable MULTI_RESULTADO exp
Rule 55    exp -> mutable DIVI_RESULTADO exp
Rule 56    exp -> mutable INCREMENTO
Rule 57    exp -> mutable DECREMENTO
Rule 58    exp -> simpleExp
Rule 59    simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp
Rule 60    simpleExp -> andExp
Rule 61    andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp
Rule 62    andExp -> unaryRelExp
Rule 63    unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp
Rule 64    unaryRelExp -> relExp
Rule 65    relExp -> minmaxExp relop minmaxExp
Rule 66    relExp -> minmaxExp
Rule 67    relop -> MENOR_IGUAL
Rule 68    relop -> MENOR
Rule 69    relop -> MAYOR
Rule 70    relop -> MAYOR_IGUAL
Rule 71    relop -> IGUAL
Rule 72    relop -> DISTINTO
Rule 73    minmaxExp -> minmaxExp minmaxop sumExp
Rule 74    minmaxExp -> sumExp
Rule 75    minmaxop -> PUNTOS_MAYOR_PUNTOS
Rule 76    minmaxop -> PUNTOS_MENOR_PUNTOS
Rule 77    sumExp -> sumExp sumop mulExp
Rule 78    sumExp -> mulExp
Rule 79    sumop -> OPERADOR_SUMA
Rule 80    sumop -> OPERADOR_RESTA
Rule 81    mulExp -> mulExp mulop unaryExp
Rule 82    mulExp -> unaryExp
Rule 83    mulop -> OPERADOR_MULTIPLICAR
Rule 84    mulop -> OPERADOR_DIVIDIR
Rule 85    mulop -> OPERADOR_MODULO
Rule 86    unaryExp -> unaryop unaryExp
Rule 87    unaryExp -> factor
Rule 88    unaryop -> OPERADOR_RESTA
Rule 89    unaryop -> OPERADOR_MULTIPLICAR
Rule 90    unaryop -> OP_TERNARIO
Rule 91    factor -> immutable
Rule 92    factor -> mutable
Rule 93    mutable -> VARIABLE
Rule 94    mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
Rule 95    immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
Rule 96    immutable -> call
Rule 97    immutable -> constant
Rule 98    call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
Rule 99    args -> argList
Rule 100   args -> eps
Rule 101   argList -> argList COMA exp
Rule 102   argList -> exp
Rule 103   constant -> NUMERO_ENTERO
Rule 104   constant -> NUMERO_DECIMAL
Rule 105   constant -> CARACTER
Rule 106   constant -> CADENA
Rule 107   constant -> PALABRA_RESERVADA_TRUE
Rule 108   constant -> PALABRA_RESERVADA_FALSE
Rule 109   eps -> <empty>

Terminals, with rules where they appear

ASIGNACION           : 45 51
BUCLE_FOR            : 45
BUCLE_WHILE          : 44
CADENA               : 106
CARACTER             : 105
CARACTER_ERROR       : 
COLON                : 12
COMA                 : 9 25 101
COMENTARIOS          : 
COMENTARIO_BLOQUE    : 
CORCHETE_DERECHO     : 14 28 94
CORCHETE_IZQUIERDO   : 14 28 94
DECREMENTO           : 57
DISTINTO             : 72
DIVI_RESULTADO       : 55
ENTERO_SOBREPASADO   : 
IGUAL                : 71
INCREMENTO           : 56
LINEAS               : 
LLAVE_DER            : 37
LLAVE_IZQ            : 37
MAYOR                : 69
MAYOR_IGUAL          : 70
MENOR                : 68
MENOR_IGUAL          : 67
MULTI_RESULTADO      : 54
NUMERO_DECIMAL       : 104
NUMERO_DECIMAL_CON_ERROR : 
NUMERO_DECIMAL_CON_ERROR2 : 
NUMERO_ENTERO        : 14 103
OPERADOR_DIVIDIR     : 84
OPERADOR_MODULO      : 85
OPERADOR_MULTIPLICAR : 83 89
OPERADOR_RESTA       : 80 88
OPERADOR_SUMA        : 79
OP_TERNARIO          : 90
PALABRA_RESERVADA_AND : 61
PALABRA_RESERVADA_BOOL : 16
PALABRA_RESERVADA_BREAK : 50
PALABRA_RESERVADA_BY : 47
PALABRA_RESERVADA_DO : 44 45
PALABRA_RESERVADA_ELSE : 43
PALABRA_RESERVADA_FALSE : 108
PALABRA_RESERVADA_IF : 42 43
PALABRA_RESERVADA_MAIN : 
PALABRA_RESERVADA_NOT : 63
PALABRA_RESERVADA_NULL : 
PALABRA_RESERVADA_OR : 59
PALABRA_RESERVADA_RETURN : 48 49
PALABRA_RESERVADA_STATIC : 7
PALABRA_RESERVADA_THEN : 42 43
PALABRA_RESERVADA_TO : 46 47
PALABRA_RESERVADA_TRUE : 107
PARENTESIS_DERECHO   : 18 19 95 98
PARENTESIS_IZQUIERDO : 18 19 95 98
PUNTOS_MAYOR_PUNTOS  : 75
PUNTOS_MENOR_PUNTOS  : 76
RESTA_RESULTADO      : 53
SEMICOLON            : 6 7 8 22 35 36 48 49 50
SUMA_RESULTADO       : 52
TIPO_CARACTER        : 17
TIPO_DECIMAL         : 
TIPO_ENTERO          : 15
VARIABLE             : 13 14 18 19 27 28 45 93 94 98
VARIABLE_ERROR       : 
error                : 

Nonterminals, with rules where they appear

andExp               : 59 60 61
argList              : 99 101
args                 : 98
breakStmt            : 34
call                 : 96
compoundStmt         : 30
constant             : 97
decl                 : 2 3
declList             : 1 2
eps                  : 21 39 41 100
exp                  : 35 49 51 52 53 54 55 94 95 101 102
expStmt              : 29
factor               : 87
funDecl              : 5
immutable            : 91
iterRange            : 45
iterStmt             : 32
localDecls           : 37 38
minmaxExp            : 65 65 66 73
minmaxop             : 73
mulExp               : 77 78 81
mulop                : 81
mutable              : 51 52 53 54 55 56 57 92
parmId               : 25 26
parmIdList           : 24 25
parmList             : 20 22
parmTypeList         : 22 23
parms                : 18 19
program              : 0
relExp               : 64
relop                : 65
returnStmt           : 33
scopedVarDecl        : 38
selectStmt           : 31
simpleExp            : 12 42 43 44 46 46 47 47 47 58 59
stmt                 : 18 19 40 42 43 43 44 45
stmtList             : 37 40
sumExp               : 73 74 77
sumop                : 77
typeSpec             : 6 7 8 18 24
unaryExp             : 81 82 86
unaryRelExp          : 61 62 63
unaryop              : 86
varDecl              : 4
varDeclId            : 11 12
varDeclInit          : 9 10
varDeclList          : 6 7 8 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declList
    (2) declList -> . declList decl
    (3) declList -> . decl
    (4) decl -> . varDecl
    (5) decl -> . funDecl
    (6) varDecl -> . typeSpec varDeclList SEMICOLON
    (18) funDecl -> . typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt
    (19) funDecl -> . VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt
    (15) typeSpec -> . TIPO_ENTERO
    (16) typeSpec -> . PALABRA_RESERVADA_BOOL
    (17) typeSpec -> . TIPO_CARACTER

    VARIABLE        shift and go to state 7
    TIPO_ENTERO     shift and go to state 8
    PALABRA_RESERVADA_BOOL shift and go to state 9
    TIPO_CARACTER   shift and go to state 10

    program                        shift and go to state 1
    declList                       shift and go to state 2
    decl                           shift and go to state 3
    varDecl                        shift and go to state 4
    funDecl                        shift and go to state 5
    typeSpec                       shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> declList .
    (2) declList -> declList . decl
    (4) decl -> . varDecl
    (5) decl -> . funDecl
    (6) varDecl -> . typeSpec varDeclList SEMICOLON
    (18) funDecl -> . typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt
    (19) funDecl -> . VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt
    (15) typeSpec -> . TIPO_ENTERO
    (16) typeSpec -> . PALABRA_RESERVADA_BOOL
    (17) typeSpec -> . TIPO_CARACTER

    $end            reduce using rule 1 (program -> declList .)
    VARIABLE        shift and go to state 7
    TIPO_ENTERO     shift and go to state 8
    PALABRA_RESERVADA_BOOL shift and go to state 9
    TIPO_CARACTER   shift and go to state 10

    decl                           shift and go to state 11
    varDecl                        shift and go to state 4
    funDecl                        shift and go to state 5
    typeSpec                       shift and go to state 6

state 3

    (3) declList -> decl .

    VARIABLE        reduce using rule 3 (declList -> decl .)
    TIPO_ENTERO     reduce using rule 3 (declList -> decl .)
    PALABRA_RESERVADA_BOOL reduce using rule 3 (declList -> decl .)
    TIPO_CARACTER   reduce using rule 3 (declList -> decl .)
    $end            reduce using rule 3 (declList -> decl .)


state 4

    (4) decl -> varDecl .

    VARIABLE        reduce using rule 4 (decl -> varDecl .)
    TIPO_ENTERO     reduce using rule 4 (decl -> varDecl .)
    PALABRA_RESERVADA_BOOL reduce using rule 4 (decl -> varDecl .)
    TIPO_CARACTER   reduce using rule 4 (decl -> varDecl .)
    $end            reduce using rule 4 (decl -> varDecl .)


state 5

    (5) decl -> funDecl .

    VARIABLE        reduce using rule 5 (decl -> funDecl .)
    TIPO_ENTERO     reduce using rule 5 (decl -> funDecl .)
    PALABRA_RESERVADA_BOOL reduce using rule 5 (decl -> funDecl .)
    TIPO_CARACTER   reduce using rule 5 (decl -> funDecl .)
    $end            reduce using rule 5 (decl -> funDecl .)


state 6

    (6) varDecl -> typeSpec . varDeclList SEMICOLON
    (18) funDecl -> typeSpec . VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt
    (9) varDeclList -> . varDeclList COMA varDeclInit
    (10) varDeclList -> . varDeclInit
    (11) varDeclInit -> . varDeclId
    (12) varDeclInit -> . varDeclId COLON simpleExp
    (13) varDeclId -> . VARIABLE
    (14) varDeclId -> . VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO

    VARIABLE        shift and go to state 13

    varDeclList                    shift and go to state 12
    varDeclInit                    shift and go to state 14
    varDeclId                      shift and go to state 15

state 7

    (19) funDecl -> VARIABLE . PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt

    PARENTESIS_IZQUIERDO shift and go to state 16


state 8

    (15) typeSpec -> TIPO_ENTERO .

    VARIABLE        reduce using rule 15 (typeSpec -> TIPO_ENTERO .)


state 9

    (16) typeSpec -> PALABRA_RESERVADA_BOOL .

    VARIABLE        reduce using rule 16 (typeSpec -> PALABRA_RESERVADA_BOOL .)


state 10

    (17) typeSpec -> TIPO_CARACTER .

    VARIABLE        reduce using rule 17 (typeSpec -> TIPO_CARACTER .)


state 11

    (2) declList -> declList decl .

    VARIABLE        reduce using rule 2 (declList -> declList decl .)
    TIPO_ENTERO     reduce using rule 2 (declList -> declList decl .)
    PALABRA_RESERVADA_BOOL reduce using rule 2 (declList -> declList decl .)
    TIPO_CARACTER   reduce using rule 2 (declList -> declList decl .)
    $end            reduce using rule 2 (declList -> declList decl .)


state 12

    (6) varDecl -> typeSpec varDeclList . SEMICOLON
    (9) varDeclList -> varDeclList . COMA varDeclInit

    SEMICOLON       shift and go to state 17
    COMA            shift and go to state 18


state 13

    (18) funDecl -> typeSpec VARIABLE . PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt
    (13) varDeclId -> VARIABLE .
    (14) varDeclId -> VARIABLE . CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO

    PARENTESIS_IZQUIERDO shift and go to state 19
    COLON           reduce using rule 13 (varDeclId -> VARIABLE .)
    SEMICOLON       reduce using rule 13 (varDeclId -> VARIABLE .)
    COMA            reduce using rule 13 (varDeclId -> VARIABLE .)
    CORCHETE_IZQUIERDO shift and go to state 20


state 14

    (10) varDeclList -> varDeclInit .

    SEMICOLON       reduce using rule 10 (varDeclList -> varDeclInit .)
    COMA            reduce using rule 10 (varDeclList -> varDeclInit .)


state 15

    (11) varDeclInit -> varDeclId .
    (12) varDeclInit -> varDeclId . COLON simpleExp

    SEMICOLON       reduce using rule 11 (varDeclInit -> varDeclId .)
    COMA            reduce using rule 11 (varDeclInit -> varDeclId .)
    COLON           shift and go to state 21


state 16

    (19) funDecl -> VARIABLE PARENTESIS_IZQUIERDO . parms PARENTESIS_DERECHO stmt
    (20) parms -> . parmList
    (21) parms -> . eps
    (22) parmList -> . parmList SEMICOLON parmTypeList
    (23) parmList -> . parmTypeList
    (109) eps -> .
    (24) parmTypeList -> . typeSpec parmIdList
    (15) typeSpec -> . TIPO_ENTERO
    (16) typeSpec -> . PALABRA_RESERVADA_BOOL
    (17) typeSpec -> . TIPO_CARACTER

    PARENTESIS_DERECHO reduce using rule 109 (eps -> .)
    TIPO_ENTERO     shift and go to state 8
    PALABRA_RESERVADA_BOOL shift and go to state 9
    TIPO_CARACTER   shift and go to state 10

    parms                          shift and go to state 22
    parmList                       shift and go to state 23
    eps                            shift and go to state 24
    parmTypeList                   shift and go to state 25
    typeSpec                       shift and go to state 26

state 17

    (6) varDecl -> typeSpec varDeclList SEMICOLON .

    VARIABLE        reduce using rule 6 (varDecl -> typeSpec varDeclList SEMICOLON .)
    TIPO_ENTERO     reduce using rule 6 (varDecl -> typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_BOOL reduce using rule 6 (varDecl -> typeSpec varDeclList SEMICOLON .)
    TIPO_CARACTER   reduce using rule 6 (varDecl -> typeSpec varDeclList SEMICOLON .)
    $end            reduce using rule 6 (varDecl -> typeSpec varDeclList SEMICOLON .)


state 18

    (9) varDeclList -> varDeclList COMA . varDeclInit
    (11) varDeclInit -> . varDeclId
    (12) varDeclInit -> . varDeclId COLON simpleExp
    (13) varDeclId -> . VARIABLE
    (14) varDeclId -> . VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO

    VARIABLE        shift and go to state 28

    varDeclInit                    shift and go to state 27
    varDeclId                      shift and go to state 15

state 19

    (18) funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO . parms PARENTESIS_DERECHO stmt
    (20) parms -> . parmList
    (21) parms -> . eps
    (22) parmList -> . parmList SEMICOLON parmTypeList
    (23) parmList -> . parmTypeList
    (109) eps -> .
    (24) parmTypeList -> . typeSpec parmIdList
    (15) typeSpec -> . TIPO_ENTERO
    (16) typeSpec -> . PALABRA_RESERVADA_BOOL
    (17) typeSpec -> . TIPO_CARACTER

    PARENTESIS_DERECHO reduce using rule 109 (eps -> .)
    TIPO_ENTERO     shift and go to state 8
    PALABRA_RESERVADA_BOOL shift and go to state 9
    TIPO_CARACTER   shift and go to state 10

    typeSpec                       shift and go to state 26
    parms                          shift and go to state 29
    parmList                       shift and go to state 23
    eps                            shift and go to state 24
    parmTypeList                   shift and go to state 25

state 20

    (14) varDeclId -> VARIABLE CORCHETE_IZQUIERDO . NUMERO_ENTERO CORCHETE_DERECHO

    NUMERO_ENTERO   shift and go to state 30


state 21

    (12) varDeclInit -> varDeclId COLON . simpleExp
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    VARIABLE        shift and go to state 50
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    simpleExp                      shift and go to state 31
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    mutable                        shift and go to state 46
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 22

    (19) funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms . PARENTESIS_DERECHO stmt

    PARENTESIS_DERECHO shift and go to state 57


state 23

    (20) parms -> parmList .
    (22) parmList -> parmList . SEMICOLON parmTypeList

    PARENTESIS_DERECHO reduce using rule 20 (parms -> parmList .)
    SEMICOLON       shift and go to state 58


state 24

    (21) parms -> eps .

    PARENTESIS_DERECHO reduce using rule 21 (parms -> eps .)


state 25

    (23) parmList -> parmTypeList .

    SEMICOLON       reduce using rule 23 (parmList -> parmTypeList .)
    PARENTESIS_DERECHO reduce using rule 23 (parmList -> parmTypeList .)


state 26

    (24) parmTypeList -> typeSpec . parmIdList
    (25) parmIdList -> . parmIdList COMA parmId
    (26) parmIdList -> . parmId
    (27) parmId -> . VARIABLE
    (28) parmId -> . VARIABLE CORCHETE_IZQUIERDO CORCHETE_DERECHO

    VARIABLE        shift and go to state 61

    parmIdList                     shift and go to state 59
    parmId                         shift and go to state 60

state 27

    (9) varDeclList -> varDeclList COMA varDeclInit .

    SEMICOLON       reduce using rule 9 (varDeclList -> varDeclList COMA varDeclInit .)
    COMA            reduce using rule 9 (varDeclList -> varDeclList COMA varDeclInit .)


state 28

    (13) varDeclId -> VARIABLE .
    (14) varDeclId -> VARIABLE . CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO

    COLON           reduce using rule 13 (varDeclId -> VARIABLE .)
    SEMICOLON       reduce using rule 13 (varDeclId -> VARIABLE .)
    COMA            reduce using rule 13 (varDeclId -> VARIABLE .)
    CORCHETE_IZQUIERDO shift and go to state 20


state 29

    (18) funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms . PARENTESIS_DERECHO stmt

    PARENTESIS_DERECHO shift and go to state 62


state 30

    (14) varDeclId -> VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO . CORCHETE_DERECHO

    CORCHETE_DERECHO shift and go to state 63


state 31

    (12) varDeclInit -> varDeclId COLON simpleExp .
    (59) simpleExp -> simpleExp . PALABRA_RESERVADA_OR andExp

    SEMICOLON       reduce using rule 12 (varDeclInit -> varDeclId COLON simpleExp .)
    COMA            reduce using rule 12 (varDeclInit -> varDeclId COLON simpleExp .)
    PALABRA_RESERVADA_OR shift and go to state 64


state 32

    (60) simpleExp -> andExp .
    (61) andExp -> andExp . PALABRA_RESERVADA_AND unaryRelExp

    PALABRA_RESERVADA_OR reduce using rule 60 (simpleExp -> andExp .)
    SEMICOLON       reduce using rule 60 (simpleExp -> andExp .)
    COMA            reduce using rule 60 (simpleExp -> andExp .)
    PARENTESIS_DERECHO reduce using rule 60 (simpleExp -> andExp .)
    CORCHETE_DERECHO reduce using rule 60 (simpleExp -> andExp .)
    PALABRA_RESERVADA_THEN reduce using rule 60 (simpleExp -> andExp .)
    PALABRA_RESERVADA_DO reduce using rule 60 (simpleExp -> andExp .)
    PALABRA_RESERVADA_TO reduce using rule 60 (simpleExp -> andExp .)
    PALABRA_RESERVADA_BY reduce using rule 60 (simpleExp -> andExp .)
    PALABRA_RESERVADA_AND shift and go to state 65


state 33

    (62) andExp -> unaryRelExp .

    PALABRA_RESERVADA_AND reduce using rule 62 (andExp -> unaryRelExp .)
    PALABRA_RESERVADA_OR reduce using rule 62 (andExp -> unaryRelExp .)
    SEMICOLON       reduce using rule 62 (andExp -> unaryRelExp .)
    COMA            reduce using rule 62 (andExp -> unaryRelExp .)
    PARENTESIS_DERECHO reduce using rule 62 (andExp -> unaryRelExp .)
    CORCHETE_DERECHO reduce using rule 62 (andExp -> unaryRelExp .)
    PALABRA_RESERVADA_THEN reduce using rule 62 (andExp -> unaryRelExp .)
    PALABRA_RESERVADA_DO reduce using rule 62 (andExp -> unaryRelExp .)
    PALABRA_RESERVADA_TO reduce using rule 62 (andExp -> unaryRelExp .)
    PALABRA_RESERVADA_BY reduce using rule 62 (andExp -> unaryRelExp .)


state 34

    (63) unaryRelExp -> PALABRA_RESERVADA_NOT . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    VARIABLE        shift and go to state 50
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    unaryRelExp                    shift and go to state 66
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    mutable                        shift and go to state 46
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 35

    (64) unaryRelExp -> relExp .

    PALABRA_RESERVADA_AND reduce using rule 64 (unaryRelExp -> relExp .)
    PALABRA_RESERVADA_OR reduce using rule 64 (unaryRelExp -> relExp .)
    SEMICOLON       reduce using rule 64 (unaryRelExp -> relExp .)
    COMA            reduce using rule 64 (unaryRelExp -> relExp .)
    PARENTESIS_DERECHO reduce using rule 64 (unaryRelExp -> relExp .)
    CORCHETE_DERECHO reduce using rule 64 (unaryRelExp -> relExp .)
    PALABRA_RESERVADA_THEN reduce using rule 64 (unaryRelExp -> relExp .)
    PALABRA_RESERVADA_DO reduce using rule 64 (unaryRelExp -> relExp .)
    PALABRA_RESERVADA_TO reduce using rule 64 (unaryRelExp -> relExp .)
    PALABRA_RESERVADA_BY reduce using rule 64 (unaryRelExp -> relExp .)


state 36

    (65) relExp -> minmaxExp . relop minmaxExp
    (66) relExp -> minmaxExp .
    (73) minmaxExp -> minmaxExp . minmaxop sumExp
    (67) relop -> . MENOR_IGUAL
    (68) relop -> . MENOR
    (69) relop -> . MAYOR
    (70) relop -> . MAYOR_IGUAL
    (71) relop -> . IGUAL
    (72) relop -> . DISTINTO
    (75) minmaxop -> . PUNTOS_MAYOR_PUNTOS
    (76) minmaxop -> . PUNTOS_MENOR_PUNTOS

    PALABRA_RESERVADA_AND reduce using rule 66 (relExp -> minmaxExp .)
    PALABRA_RESERVADA_OR reduce using rule 66 (relExp -> minmaxExp .)
    SEMICOLON       reduce using rule 66 (relExp -> minmaxExp .)
    COMA            reduce using rule 66 (relExp -> minmaxExp .)
    PARENTESIS_DERECHO reduce using rule 66 (relExp -> minmaxExp .)
    CORCHETE_DERECHO reduce using rule 66 (relExp -> minmaxExp .)
    PALABRA_RESERVADA_THEN reduce using rule 66 (relExp -> minmaxExp .)
    PALABRA_RESERVADA_DO reduce using rule 66 (relExp -> minmaxExp .)
    PALABRA_RESERVADA_TO reduce using rule 66 (relExp -> minmaxExp .)
    PALABRA_RESERVADA_BY reduce using rule 66 (relExp -> minmaxExp .)
    MENOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70
    MAYOR           shift and go to state 71
    MAYOR_IGUAL     shift and go to state 72
    IGUAL           shift and go to state 73
    DISTINTO        shift and go to state 74
    PUNTOS_MAYOR_PUNTOS shift and go to state 75
    PUNTOS_MENOR_PUNTOS shift and go to state 76

    relop                          shift and go to state 67
    minmaxop                       shift and go to state 68

state 37

    (74) minmaxExp -> sumExp .
    (77) sumExp -> sumExp . sumop mulExp
    (79) sumop -> . OPERADOR_SUMA
    (80) sumop -> . OPERADOR_RESTA

    MENOR_IGUAL     reduce using rule 74 (minmaxExp -> sumExp .)
    MENOR           reduce using rule 74 (minmaxExp -> sumExp .)
    MAYOR           reduce using rule 74 (minmaxExp -> sumExp .)
    MAYOR_IGUAL     reduce using rule 74 (minmaxExp -> sumExp .)
    IGUAL           reduce using rule 74 (minmaxExp -> sumExp .)
    DISTINTO        reduce using rule 74 (minmaxExp -> sumExp .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 74 (minmaxExp -> sumExp .)
    PUNTOS_MENOR_PUNTOS reduce using rule 74 (minmaxExp -> sumExp .)
    PALABRA_RESERVADA_AND reduce using rule 74 (minmaxExp -> sumExp .)
    PALABRA_RESERVADA_OR reduce using rule 74 (minmaxExp -> sumExp .)
    SEMICOLON       reduce using rule 74 (minmaxExp -> sumExp .)
    COMA            reduce using rule 74 (minmaxExp -> sumExp .)
    PARENTESIS_DERECHO reduce using rule 74 (minmaxExp -> sumExp .)
    CORCHETE_DERECHO reduce using rule 74 (minmaxExp -> sumExp .)
    PALABRA_RESERVADA_THEN reduce using rule 74 (minmaxExp -> sumExp .)
    PALABRA_RESERVADA_DO reduce using rule 74 (minmaxExp -> sumExp .)
    PALABRA_RESERVADA_TO reduce using rule 74 (minmaxExp -> sumExp .)
    PALABRA_RESERVADA_BY reduce using rule 74 (minmaxExp -> sumExp .)
    OPERADOR_SUMA   shift and go to state 78
    OPERADOR_RESTA  shift and go to state 79

    sumop                          shift and go to state 77

state 38

    (78) sumExp -> mulExp .
    (81) mulExp -> mulExp . mulop unaryExp
    (83) mulop -> . OPERADOR_MULTIPLICAR
    (84) mulop -> . OPERADOR_DIVIDIR
    (85) mulop -> . OPERADOR_MODULO

    OPERADOR_SUMA   reduce using rule 78 (sumExp -> mulExp .)
    OPERADOR_RESTA  reduce using rule 78 (sumExp -> mulExp .)
    MENOR_IGUAL     reduce using rule 78 (sumExp -> mulExp .)
    MENOR           reduce using rule 78 (sumExp -> mulExp .)
    MAYOR           reduce using rule 78 (sumExp -> mulExp .)
    MAYOR_IGUAL     reduce using rule 78 (sumExp -> mulExp .)
    IGUAL           reduce using rule 78 (sumExp -> mulExp .)
    DISTINTO        reduce using rule 78 (sumExp -> mulExp .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 78 (sumExp -> mulExp .)
    PUNTOS_MENOR_PUNTOS reduce using rule 78 (sumExp -> mulExp .)
    PALABRA_RESERVADA_AND reduce using rule 78 (sumExp -> mulExp .)
    PALABRA_RESERVADA_OR reduce using rule 78 (sumExp -> mulExp .)
    SEMICOLON       reduce using rule 78 (sumExp -> mulExp .)
    COMA            reduce using rule 78 (sumExp -> mulExp .)
    PARENTESIS_DERECHO reduce using rule 78 (sumExp -> mulExp .)
    CORCHETE_DERECHO reduce using rule 78 (sumExp -> mulExp .)
    PALABRA_RESERVADA_THEN reduce using rule 78 (sumExp -> mulExp .)
    PALABRA_RESERVADA_DO reduce using rule 78 (sumExp -> mulExp .)
    PALABRA_RESERVADA_TO reduce using rule 78 (sumExp -> mulExp .)
    PALABRA_RESERVADA_BY reduce using rule 78 (sumExp -> mulExp .)
    OPERADOR_MULTIPLICAR shift and go to state 81
    OPERADOR_DIVIDIR shift and go to state 82
    OPERADOR_MODULO shift and go to state 83

    mulop                          shift and go to state 80

state 39

    (82) mulExp -> unaryExp .

    OPERADOR_MULTIPLICAR reduce using rule 82 (mulExp -> unaryExp .)
    OPERADOR_DIVIDIR reduce using rule 82 (mulExp -> unaryExp .)
    OPERADOR_MODULO reduce using rule 82 (mulExp -> unaryExp .)
    OPERADOR_SUMA   reduce using rule 82 (mulExp -> unaryExp .)
    OPERADOR_RESTA  reduce using rule 82 (mulExp -> unaryExp .)
    MENOR_IGUAL     reduce using rule 82 (mulExp -> unaryExp .)
    MENOR           reduce using rule 82 (mulExp -> unaryExp .)
    MAYOR           reduce using rule 82 (mulExp -> unaryExp .)
    MAYOR_IGUAL     reduce using rule 82 (mulExp -> unaryExp .)
    IGUAL           reduce using rule 82 (mulExp -> unaryExp .)
    DISTINTO        reduce using rule 82 (mulExp -> unaryExp .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 82 (mulExp -> unaryExp .)
    PUNTOS_MENOR_PUNTOS reduce using rule 82 (mulExp -> unaryExp .)
    PALABRA_RESERVADA_AND reduce using rule 82 (mulExp -> unaryExp .)
    PALABRA_RESERVADA_OR reduce using rule 82 (mulExp -> unaryExp .)
    SEMICOLON       reduce using rule 82 (mulExp -> unaryExp .)
    COMA            reduce using rule 82 (mulExp -> unaryExp .)
    PARENTESIS_DERECHO reduce using rule 82 (mulExp -> unaryExp .)
    CORCHETE_DERECHO reduce using rule 82 (mulExp -> unaryExp .)
    PALABRA_RESERVADA_THEN reduce using rule 82 (mulExp -> unaryExp .)
    PALABRA_RESERVADA_DO reduce using rule 82 (mulExp -> unaryExp .)
    PALABRA_RESERVADA_TO reduce using rule 82 (mulExp -> unaryExp .)
    PALABRA_RESERVADA_BY reduce using rule 82 (mulExp -> unaryExp .)


state 40

    (86) unaryExp -> unaryop . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    VARIABLE        shift and go to state 50
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    unaryop                        shift and go to state 40
    unaryExp                       shift and go to state 84
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    mutable                        shift and go to state 46
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 41

    (87) unaryExp -> factor .

    OPERADOR_MULTIPLICAR reduce using rule 87 (unaryExp -> factor .)
    OPERADOR_DIVIDIR reduce using rule 87 (unaryExp -> factor .)
    OPERADOR_MODULO reduce using rule 87 (unaryExp -> factor .)
    OPERADOR_SUMA   reduce using rule 87 (unaryExp -> factor .)
    OPERADOR_RESTA  reduce using rule 87 (unaryExp -> factor .)
    MENOR_IGUAL     reduce using rule 87 (unaryExp -> factor .)
    MENOR           reduce using rule 87 (unaryExp -> factor .)
    MAYOR           reduce using rule 87 (unaryExp -> factor .)
    MAYOR_IGUAL     reduce using rule 87 (unaryExp -> factor .)
    IGUAL           reduce using rule 87 (unaryExp -> factor .)
    DISTINTO        reduce using rule 87 (unaryExp -> factor .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 87 (unaryExp -> factor .)
    PUNTOS_MENOR_PUNTOS reduce using rule 87 (unaryExp -> factor .)
    PALABRA_RESERVADA_AND reduce using rule 87 (unaryExp -> factor .)
    PALABRA_RESERVADA_OR reduce using rule 87 (unaryExp -> factor .)
    SEMICOLON       reduce using rule 87 (unaryExp -> factor .)
    COMA            reduce using rule 87 (unaryExp -> factor .)
    PARENTESIS_DERECHO reduce using rule 87 (unaryExp -> factor .)
    CORCHETE_DERECHO reduce using rule 87 (unaryExp -> factor .)
    PALABRA_RESERVADA_THEN reduce using rule 87 (unaryExp -> factor .)
    PALABRA_RESERVADA_DO reduce using rule 87 (unaryExp -> factor .)
    PALABRA_RESERVADA_TO reduce using rule 87 (unaryExp -> factor .)
    PALABRA_RESERVADA_BY reduce using rule 87 (unaryExp -> factor .)


state 42

    (88) unaryop -> OPERADOR_RESTA .

    OPERADOR_RESTA  reduce using rule 88 (unaryop -> OPERADOR_RESTA .)
    OPERADOR_MULTIPLICAR reduce using rule 88 (unaryop -> OPERADOR_RESTA .)
    OP_TERNARIO     reduce using rule 88 (unaryop -> OPERADOR_RESTA .)
    PARENTESIS_IZQUIERDO reduce using rule 88 (unaryop -> OPERADOR_RESTA .)
    VARIABLE        reduce using rule 88 (unaryop -> OPERADOR_RESTA .)
    NUMERO_ENTERO   reduce using rule 88 (unaryop -> OPERADOR_RESTA .)
    NUMERO_DECIMAL  reduce using rule 88 (unaryop -> OPERADOR_RESTA .)
    CARACTER        reduce using rule 88 (unaryop -> OPERADOR_RESTA .)
    CADENA          reduce using rule 88 (unaryop -> OPERADOR_RESTA .)
    PALABRA_RESERVADA_TRUE reduce using rule 88 (unaryop -> OPERADOR_RESTA .)
    PALABRA_RESERVADA_FALSE reduce using rule 88 (unaryop -> OPERADOR_RESTA .)


state 43

    (89) unaryop -> OPERADOR_MULTIPLICAR .

    OPERADOR_RESTA  reduce using rule 89 (unaryop -> OPERADOR_MULTIPLICAR .)
    OPERADOR_MULTIPLICAR reduce using rule 89 (unaryop -> OPERADOR_MULTIPLICAR .)
    OP_TERNARIO     reduce using rule 89 (unaryop -> OPERADOR_MULTIPLICAR .)
    PARENTESIS_IZQUIERDO reduce using rule 89 (unaryop -> OPERADOR_MULTIPLICAR .)
    VARIABLE        reduce using rule 89 (unaryop -> OPERADOR_MULTIPLICAR .)
    NUMERO_ENTERO   reduce using rule 89 (unaryop -> OPERADOR_MULTIPLICAR .)
    NUMERO_DECIMAL  reduce using rule 89 (unaryop -> OPERADOR_MULTIPLICAR .)
    CARACTER        reduce using rule 89 (unaryop -> OPERADOR_MULTIPLICAR .)
    CADENA          reduce using rule 89 (unaryop -> OPERADOR_MULTIPLICAR .)
    PALABRA_RESERVADA_TRUE reduce using rule 89 (unaryop -> OPERADOR_MULTIPLICAR .)
    PALABRA_RESERVADA_FALSE reduce using rule 89 (unaryop -> OPERADOR_MULTIPLICAR .)


state 44

    (90) unaryop -> OP_TERNARIO .

    OPERADOR_RESTA  reduce using rule 90 (unaryop -> OP_TERNARIO .)
    OPERADOR_MULTIPLICAR reduce using rule 90 (unaryop -> OP_TERNARIO .)
    OP_TERNARIO     reduce using rule 90 (unaryop -> OP_TERNARIO .)
    PARENTESIS_IZQUIERDO reduce using rule 90 (unaryop -> OP_TERNARIO .)
    VARIABLE        reduce using rule 90 (unaryop -> OP_TERNARIO .)
    NUMERO_ENTERO   reduce using rule 90 (unaryop -> OP_TERNARIO .)
    NUMERO_DECIMAL  reduce using rule 90 (unaryop -> OP_TERNARIO .)
    CARACTER        reduce using rule 90 (unaryop -> OP_TERNARIO .)
    CADENA          reduce using rule 90 (unaryop -> OP_TERNARIO .)
    PALABRA_RESERVADA_TRUE reduce using rule 90 (unaryop -> OP_TERNARIO .)
    PALABRA_RESERVADA_FALSE reduce using rule 90 (unaryop -> OP_TERNARIO .)


state 45

    (91) factor -> immutable .

    OPERADOR_MULTIPLICAR reduce using rule 91 (factor -> immutable .)
    OPERADOR_DIVIDIR reduce using rule 91 (factor -> immutable .)
    OPERADOR_MODULO reduce using rule 91 (factor -> immutable .)
    OPERADOR_SUMA   reduce using rule 91 (factor -> immutable .)
    OPERADOR_RESTA  reduce using rule 91 (factor -> immutable .)
    MENOR_IGUAL     reduce using rule 91 (factor -> immutable .)
    MENOR           reduce using rule 91 (factor -> immutable .)
    MAYOR           reduce using rule 91 (factor -> immutable .)
    MAYOR_IGUAL     reduce using rule 91 (factor -> immutable .)
    IGUAL           reduce using rule 91 (factor -> immutable .)
    DISTINTO        reduce using rule 91 (factor -> immutable .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 91 (factor -> immutable .)
    PUNTOS_MENOR_PUNTOS reduce using rule 91 (factor -> immutable .)
    PALABRA_RESERVADA_AND reduce using rule 91 (factor -> immutable .)
    PALABRA_RESERVADA_OR reduce using rule 91 (factor -> immutable .)
    SEMICOLON       reduce using rule 91 (factor -> immutable .)
    COMA            reduce using rule 91 (factor -> immutable .)
    PARENTESIS_DERECHO reduce using rule 91 (factor -> immutable .)
    CORCHETE_DERECHO reduce using rule 91 (factor -> immutable .)
    PALABRA_RESERVADA_THEN reduce using rule 91 (factor -> immutable .)
    PALABRA_RESERVADA_DO reduce using rule 91 (factor -> immutable .)
    PALABRA_RESERVADA_TO reduce using rule 91 (factor -> immutable .)
    PALABRA_RESERVADA_BY reduce using rule 91 (factor -> immutable .)


state 46

    (92) factor -> mutable .

    OPERADOR_MULTIPLICAR reduce using rule 92 (factor -> mutable .)
    OPERADOR_DIVIDIR reduce using rule 92 (factor -> mutable .)
    OPERADOR_MODULO reduce using rule 92 (factor -> mutable .)
    OPERADOR_SUMA   reduce using rule 92 (factor -> mutable .)
    OPERADOR_RESTA  reduce using rule 92 (factor -> mutable .)
    MENOR_IGUAL     reduce using rule 92 (factor -> mutable .)
    MENOR           reduce using rule 92 (factor -> mutable .)
    MAYOR           reduce using rule 92 (factor -> mutable .)
    MAYOR_IGUAL     reduce using rule 92 (factor -> mutable .)
    IGUAL           reduce using rule 92 (factor -> mutable .)
    DISTINTO        reduce using rule 92 (factor -> mutable .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 92 (factor -> mutable .)
    PUNTOS_MENOR_PUNTOS reduce using rule 92 (factor -> mutable .)
    PALABRA_RESERVADA_AND reduce using rule 92 (factor -> mutable .)
    PALABRA_RESERVADA_OR reduce using rule 92 (factor -> mutable .)
    SEMICOLON       reduce using rule 92 (factor -> mutable .)
    COMA            reduce using rule 92 (factor -> mutable .)
    PARENTESIS_DERECHO reduce using rule 92 (factor -> mutable .)
    CORCHETE_DERECHO reduce using rule 92 (factor -> mutable .)
    PALABRA_RESERVADA_THEN reduce using rule 92 (factor -> mutable .)
    PALABRA_RESERVADA_DO reduce using rule 92 (factor -> mutable .)
    PALABRA_RESERVADA_TO reduce using rule 92 (factor -> mutable .)
    PALABRA_RESERVADA_BY reduce using rule 92 (factor -> mutable .)


state 47

    (95) immutable -> PARENTESIS_IZQUIERDO . exp PARENTESIS_DERECHO
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    exp                            shift and go to state 85
    mutable                        shift and go to state 86
    simpleExp                      shift and go to state 87
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 48

    (96) immutable -> call .

    OPERADOR_MULTIPLICAR reduce using rule 96 (immutable -> call .)
    OPERADOR_DIVIDIR reduce using rule 96 (immutable -> call .)
    OPERADOR_MODULO reduce using rule 96 (immutable -> call .)
    OPERADOR_SUMA   reduce using rule 96 (immutable -> call .)
    OPERADOR_RESTA  reduce using rule 96 (immutable -> call .)
    MENOR_IGUAL     reduce using rule 96 (immutable -> call .)
    MENOR           reduce using rule 96 (immutable -> call .)
    MAYOR           reduce using rule 96 (immutable -> call .)
    MAYOR_IGUAL     reduce using rule 96 (immutable -> call .)
    IGUAL           reduce using rule 96 (immutable -> call .)
    DISTINTO        reduce using rule 96 (immutable -> call .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 96 (immutable -> call .)
    PUNTOS_MENOR_PUNTOS reduce using rule 96 (immutable -> call .)
    PALABRA_RESERVADA_AND reduce using rule 96 (immutable -> call .)
    PALABRA_RESERVADA_OR reduce using rule 96 (immutable -> call .)
    SEMICOLON       reduce using rule 96 (immutable -> call .)
    COMA            reduce using rule 96 (immutable -> call .)
    PARENTESIS_DERECHO reduce using rule 96 (immutable -> call .)
    CORCHETE_DERECHO reduce using rule 96 (immutable -> call .)
    PALABRA_RESERVADA_THEN reduce using rule 96 (immutable -> call .)
    PALABRA_RESERVADA_DO reduce using rule 96 (immutable -> call .)
    PALABRA_RESERVADA_TO reduce using rule 96 (immutable -> call .)
    PALABRA_RESERVADA_BY reduce using rule 96 (immutable -> call .)


state 49

    (97) immutable -> constant .

    OPERADOR_MULTIPLICAR reduce using rule 97 (immutable -> constant .)
    OPERADOR_DIVIDIR reduce using rule 97 (immutable -> constant .)
    OPERADOR_MODULO reduce using rule 97 (immutable -> constant .)
    OPERADOR_SUMA   reduce using rule 97 (immutable -> constant .)
    OPERADOR_RESTA  reduce using rule 97 (immutable -> constant .)
    MENOR_IGUAL     reduce using rule 97 (immutable -> constant .)
    MENOR           reduce using rule 97 (immutable -> constant .)
    MAYOR           reduce using rule 97 (immutable -> constant .)
    MAYOR_IGUAL     reduce using rule 97 (immutable -> constant .)
    IGUAL           reduce using rule 97 (immutable -> constant .)
    DISTINTO        reduce using rule 97 (immutable -> constant .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 97 (immutable -> constant .)
    PUNTOS_MENOR_PUNTOS reduce using rule 97 (immutable -> constant .)
    PALABRA_RESERVADA_AND reduce using rule 97 (immutable -> constant .)
    PALABRA_RESERVADA_OR reduce using rule 97 (immutable -> constant .)
    SEMICOLON       reduce using rule 97 (immutable -> constant .)
    COMA            reduce using rule 97 (immutable -> constant .)
    PARENTESIS_DERECHO reduce using rule 97 (immutable -> constant .)
    CORCHETE_DERECHO reduce using rule 97 (immutable -> constant .)
    PALABRA_RESERVADA_THEN reduce using rule 97 (immutable -> constant .)
    PALABRA_RESERVADA_DO reduce using rule 97 (immutable -> constant .)
    PALABRA_RESERVADA_TO reduce using rule 97 (immutable -> constant .)
    PALABRA_RESERVADA_BY reduce using rule 97 (immutable -> constant .)


state 50

    (93) mutable -> VARIABLE .
    (94) mutable -> VARIABLE . CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (98) call -> VARIABLE . PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO

    OPERADOR_MULTIPLICAR reduce using rule 93 (mutable -> VARIABLE .)
    OPERADOR_DIVIDIR reduce using rule 93 (mutable -> VARIABLE .)
    OPERADOR_MODULO reduce using rule 93 (mutable -> VARIABLE .)
    OPERADOR_SUMA   reduce using rule 93 (mutable -> VARIABLE .)
    OPERADOR_RESTA  reduce using rule 93 (mutable -> VARIABLE .)
    MENOR_IGUAL     reduce using rule 93 (mutable -> VARIABLE .)
    MENOR           reduce using rule 93 (mutable -> VARIABLE .)
    MAYOR           reduce using rule 93 (mutable -> VARIABLE .)
    MAYOR_IGUAL     reduce using rule 93 (mutable -> VARIABLE .)
    IGUAL           reduce using rule 93 (mutable -> VARIABLE .)
    DISTINTO        reduce using rule 93 (mutable -> VARIABLE .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 93 (mutable -> VARIABLE .)
    PUNTOS_MENOR_PUNTOS reduce using rule 93 (mutable -> VARIABLE .)
    PALABRA_RESERVADA_AND reduce using rule 93 (mutable -> VARIABLE .)
    PALABRA_RESERVADA_OR reduce using rule 93 (mutable -> VARIABLE .)
    SEMICOLON       reduce using rule 93 (mutable -> VARIABLE .)
    COMA            reduce using rule 93 (mutable -> VARIABLE .)
    PARENTESIS_DERECHO reduce using rule 93 (mutable -> VARIABLE .)
    CORCHETE_DERECHO reduce using rule 93 (mutable -> VARIABLE .)
    PALABRA_RESERVADA_THEN reduce using rule 93 (mutable -> VARIABLE .)
    PALABRA_RESERVADA_DO reduce using rule 93 (mutable -> VARIABLE .)
    PALABRA_RESERVADA_TO reduce using rule 93 (mutable -> VARIABLE .)
    PALABRA_RESERVADA_BY reduce using rule 93 (mutable -> VARIABLE .)
    ASIGNACION      reduce using rule 93 (mutable -> VARIABLE .)
    SUMA_RESULTADO  reduce using rule 93 (mutable -> VARIABLE .)
    RESTA_RESULTADO reduce using rule 93 (mutable -> VARIABLE .)
    MULTI_RESULTADO reduce using rule 93 (mutable -> VARIABLE .)
    DIVI_RESULTADO  reduce using rule 93 (mutable -> VARIABLE .)
    INCREMENTO      reduce using rule 93 (mutable -> VARIABLE .)
    DECREMENTO      reduce using rule 93 (mutable -> VARIABLE .)
    CORCHETE_IZQUIERDO shift and go to state 88
    PARENTESIS_IZQUIERDO shift and go to state 89


state 51

    (103) constant -> NUMERO_ENTERO .

    OPERADOR_MULTIPLICAR reduce using rule 103 (constant -> NUMERO_ENTERO .)
    OPERADOR_DIVIDIR reduce using rule 103 (constant -> NUMERO_ENTERO .)
    OPERADOR_MODULO reduce using rule 103 (constant -> NUMERO_ENTERO .)
    OPERADOR_SUMA   reduce using rule 103 (constant -> NUMERO_ENTERO .)
    OPERADOR_RESTA  reduce using rule 103 (constant -> NUMERO_ENTERO .)
    MENOR_IGUAL     reduce using rule 103 (constant -> NUMERO_ENTERO .)
    MENOR           reduce using rule 103 (constant -> NUMERO_ENTERO .)
    MAYOR           reduce using rule 103 (constant -> NUMERO_ENTERO .)
    MAYOR_IGUAL     reduce using rule 103 (constant -> NUMERO_ENTERO .)
    IGUAL           reduce using rule 103 (constant -> NUMERO_ENTERO .)
    DISTINTO        reduce using rule 103 (constant -> NUMERO_ENTERO .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 103 (constant -> NUMERO_ENTERO .)
    PUNTOS_MENOR_PUNTOS reduce using rule 103 (constant -> NUMERO_ENTERO .)
    PALABRA_RESERVADA_AND reduce using rule 103 (constant -> NUMERO_ENTERO .)
    PALABRA_RESERVADA_OR reduce using rule 103 (constant -> NUMERO_ENTERO .)
    SEMICOLON       reduce using rule 103 (constant -> NUMERO_ENTERO .)
    COMA            reduce using rule 103 (constant -> NUMERO_ENTERO .)
    PARENTESIS_DERECHO reduce using rule 103 (constant -> NUMERO_ENTERO .)
    CORCHETE_DERECHO reduce using rule 103 (constant -> NUMERO_ENTERO .)
    PALABRA_RESERVADA_THEN reduce using rule 103 (constant -> NUMERO_ENTERO .)
    PALABRA_RESERVADA_DO reduce using rule 103 (constant -> NUMERO_ENTERO .)
    PALABRA_RESERVADA_TO reduce using rule 103 (constant -> NUMERO_ENTERO .)
    PALABRA_RESERVADA_BY reduce using rule 103 (constant -> NUMERO_ENTERO .)


state 52

    (104) constant -> NUMERO_DECIMAL .

    OPERADOR_MULTIPLICAR reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    OPERADOR_DIVIDIR reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    OPERADOR_MODULO reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    OPERADOR_SUMA   reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    OPERADOR_RESTA  reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    MENOR_IGUAL     reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    MENOR           reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    MAYOR           reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    MAYOR_IGUAL     reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    IGUAL           reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    DISTINTO        reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    PUNTOS_MENOR_PUNTOS reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    PALABRA_RESERVADA_AND reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    PALABRA_RESERVADA_OR reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    SEMICOLON       reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    COMA            reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    PARENTESIS_DERECHO reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    CORCHETE_DERECHO reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    PALABRA_RESERVADA_THEN reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    PALABRA_RESERVADA_DO reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    PALABRA_RESERVADA_TO reduce using rule 104 (constant -> NUMERO_DECIMAL .)
    PALABRA_RESERVADA_BY reduce using rule 104 (constant -> NUMERO_DECIMAL .)


state 53

    (105) constant -> CARACTER .

    OPERADOR_MULTIPLICAR reduce using rule 105 (constant -> CARACTER .)
    OPERADOR_DIVIDIR reduce using rule 105 (constant -> CARACTER .)
    OPERADOR_MODULO reduce using rule 105 (constant -> CARACTER .)
    OPERADOR_SUMA   reduce using rule 105 (constant -> CARACTER .)
    OPERADOR_RESTA  reduce using rule 105 (constant -> CARACTER .)
    MENOR_IGUAL     reduce using rule 105 (constant -> CARACTER .)
    MENOR           reduce using rule 105 (constant -> CARACTER .)
    MAYOR           reduce using rule 105 (constant -> CARACTER .)
    MAYOR_IGUAL     reduce using rule 105 (constant -> CARACTER .)
    IGUAL           reduce using rule 105 (constant -> CARACTER .)
    DISTINTO        reduce using rule 105 (constant -> CARACTER .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 105 (constant -> CARACTER .)
    PUNTOS_MENOR_PUNTOS reduce using rule 105 (constant -> CARACTER .)
    PALABRA_RESERVADA_AND reduce using rule 105 (constant -> CARACTER .)
    PALABRA_RESERVADA_OR reduce using rule 105 (constant -> CARACTER .)
    SEMICOLON       reduce using rule 105 (constant -> CARACTER .)
    COMA            reduce using rule 105 (constant -> CARACTER .)
    PARENTESIS_DERECHO reduce using rule 105 (constant -> CARACTER .)
    CORCHETE_DERECHO reduce using rule 105 (constant -> CARACTER .)
    PALABRA_RESERVADA_THEN reduce using rule 105 (constant -> CARACTER .)
    PALABRA_RESERVADA_DO reduce using rule 105 (constant -> CARACTER .)
    PALABRA_RESERVADA_TO reduce using rule 105 (constant -> CARACTER .)
    PALABRA_RESERVADA_BY reduce using rule 105 (constant -> CARACTER .)


state 54

    (106) constant -> CADENA .

    OPERADOR_MULTIPLICAR reduce using rule 106 (constant -> CADENA .)
    OPERADOR_DIVIDIR reduce using rule 106 (constant -> CADENA .)
    OPERADOR_MODULO reduce using rule 106 (constant -> CADENA .)
    OPERADOR_SUMA   reduce using rule 106 (constant -> CADENA .)
    OPERADOR_RESTA  reduce using rule 106 (constant -> CADENA .)
    MENOR_IGUAL     reduce using rule 106 (constant -> CADENA .)
    MENOR           reduce using rule 106 (constant -> CADENA .)
    MAYOR           reduce using rule 106 (constant -> CADENA .)
    MAYOR_IGUAL     reduce using rule 106 (constant -> CADENA .)
    IGUAL           reduce using rule 106 (constant -> CADENA .)
    DISTINTO        reduce using rule 106 (constant -> CADENA .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 106 (constant -> CADENA .)
    PUNTOS_MENOR_PUNTOS reduce using rule 106 (constant -> CADENA .)
    PALABRA_RESERVADA_AND reduce using rule 106 (constant -> CADENA .)
    PALABRA_RESERVADA_OR reduce using rule 106 (constant -> CADENA .)
    SEMICOLON       reduce using rule 106 (constant -> CADENA .)
    COMA            reduce using rule 106 (constant -> CADENA .)
    PARENTESIS_DERECHO reduce using rule 106 (constant -> CADENA .)
    CORCHETE_DERECHO reduce using rule 106 (constant -> CADENA .)
    PALABRA_RESERVADA_THEN reduce using rule 106 (constant -> CADENA .)
    PALABRA_RESERVADA_DO reduce using rule 106 (constant -> CADENA .)
    PALABRA_RESERVADA_TO reduce using rule 106 (constant -> CADENA .)
    PALABRA_RESERVADA_BY reduce using rule 106 (constant -> CADENA .)


state 55

    (107) constant -> PALABRA_RESERVADA_TRUE .

    OPERADOR_MULTIPLICAR reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    OPERADOR_DIVIDIR reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    OPERADOR_MODULO reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    OPERADOR_SUMA   reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    OPERADOR_RESTA  reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    MENOR_IGUAL     reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    MENOR           reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    MAYOR           reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    MAYOR_IGUAL     reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    IGUAL           reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    DISTINTO        reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    PUNTOS_MENOR_PUNTOS reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    PALABRA_RESERVADA_AND reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    PALABRA_RESERVADA_OR reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    SEMICOLON       reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    COMA            reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    PARENTESIS_DERECHO reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    CORCHETE_DERECHO reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    PALABRA_RESERVADA_THEN reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    PALABRA_RESERVADA_DO reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    PALABRA_RESERVADA_TO reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)
    PALABRA_RESERVADA_BY reduce using rule 107 (constant -> PALABRA_RESERVADA_TRUE .)


state 56

    (108) constant -> PALABRA_RESERVADA_FALSE .

    OPERADOR_MULTIPLICAR reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    OPERADOR_DIVIDIR reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    OPERADOR_MODULO reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    OPERADOR_SUMA   reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    OPERADOR_RESTA  reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    MENOR_IGUAL     reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    MENOR           reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    MAYOR           reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    MAYOR_IGUAL     reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    IGUAL           reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    DISTINTO        reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    PUNTOS_MENOR_PUNTOS reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    PALABRA_RESERVADA_AND reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    PALABRA_RESERVADA_OR reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    SEMICOLON       reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    COMA            reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    PARENTESIS_DERECHO reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    CORCHETE_DERECHO reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    PALABRA_RESERVADA_THEN reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    PALABRA_RESERVADA_DO reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    PALABRA_RESERVADA_TO reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)
    PALABRA_RESERVADA_BY reduce using rule 108 (constant -> PALABRA_RESERVADA_FALSE .)


state 57

    (19) funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO . stmt
    (29) stmt -> . expStmt
    (30) stmt -> . compoundStmt
    (31) stmt -> . selectStmt
    (32) stmt -> . iterStmt
    (33) stmt -> . returnStmt
    (34) stmt -> . breakStmt
    (35) expStmt -> . exp SEMICOLON
    (36) expStmt -> . SEMICOLON
    (37) compoundStmt -> . LLAVE_IZQ localDecls stmtList LLAVE_DER
    (42) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt
    (43) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (44) iterStmt -> . BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt
    (45) iterStmt -> . BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt
    (48) returnStmt -> . PALABRA_RESERVADA_RETURN SEMICOLON
    (49) returnStmt -> . PALABRA_RESERVADA_RETURN exp SEMICOLON
    (50) breakStmt -> . PALABRA_RESERVADA_BREAK SEMICOLON
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    SEMICOLON       shift and go to state 98
    LLAVE_IZQ       shift and go to state 99
    PALABRA_RESERVADA_IF shift and go to state 100
    BUCLE_WHILE     shift and go to state 101
    BUCLE_FOR       shift and go to state 102
    PALABRA_RESERVADA_RETURN shift and go to state 103
    PALABRA_RESERVADA_BREAK shift and go to state 104
    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    stmt                           shift and go to state 90
    expStmt                        shift and go to state 91
    compoundStmt                   shift and go to state 92
    selectStmt                     shift and go to state 93
    iterStmt                       shift and go to state 94
    returnStmt                     shift and go to state 95
    breakStmt                      shift and go to state 96
    exp                            shift and go to state 97
    simpleExp                      shift and go to state 87
    mutable                        shift and go to state 86
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 58

    (22) parmList -> parmList SEMICOLON . parmTypeList
    (24) parmTypeList -> . typeSpec parmIdList
    (15) typeSpec -> . TIPO_ENTERO
    (16) typeSpec -> . PALABRA_RESERVADA_BOOL
    (17) typeSpec -> . TIPO_CARACTER

    TIPO_ENTERO     shift and go to state 8
    PALABRA_RESERVADA_BOOL shift and go to state 9
    TIPO_CARACTER   shift and go to state 10

    parmTypeList                   shift and go to state 105
    typeSpec                       shift and go to state 26

state 59

    (24) parmTypeList -> typeSpec parmIdList .
    (25) parmIdList -> parmIdList . COMA parmId

    SEMICOLON       reduce using rule 24 (parmTypeList -> typeSpec parmIdList .)
    PARENTESIS_DERECHO reduce using rule 24 (parmTypeList -> typeSpec parmIdList .)
    COMA            shift and go to state 106


state 60

    (26) parmIdList -> parmId .

    COMA            reduce using rule 26 (parmIdList -> parmId .)
    SEMICOLON       reduce using rule 26 (parmIdList -> parmId .)
    PARENTESIS_DERECHO reduce using rule 26 (parmIdList -> parmId .)


state 61

    (27) parmId -> VARIABLE .
    (28) parmId -> VARIABLE . CORCHETE_IZQUIERDO CORCHETE_DERECHO

    COMA            reduce using rule 27 (parmId -> VARIABLE .)
    SEMICOLON       reduce using rule 27 (parmId -> VARIABLE .)
    PARENTESIS_DERECHO reduce using rule 27 (parmId -> VARIABLE .)
    CORCHETE_IZQUIERDO shift and go to state 107


state 62

    (18) funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO . stmt
    (29) stmt -> . expStmt
    (30) stmt -> . compoundStmt
    (31) stmt -> . selectStmt
    (32) stmt -> . iterStmt
    (33) stmt -> . returnStmt
    (34) stmt -> . breakStmt
    (35) expStmt -> . exp SEMICOLON
    (36) expStmt -> . SEMICOLON
    (37) compoundStmt -> . LLAVE_IZQ localDecls stmtList LLAVE_DER
    (42) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt
    (43) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (44) iterStmt -> . BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt
    (45) iterStmt -> . BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt
    (48) returnStmt -> . PALABRA_RESERVADA_RETURN SEMICOLON
    (49) returnStmt -> . PALABRA_RESERVADA_RETURN exp SEMICOLON
    (50) breakStmt -> . PALABRA_RESERVADA_BREAK SEMICOLON
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    SEMICOLON       shift and go to state 98
    LLAVE_IZQ       shift and go to state 99
    PALABRA_RESERVADA_IF shift and go to state 100
    BUCLE_WHILE     shift and go to state 101
    BUCLE_FOR       shift and go to state 102
    PALABRA_RESERVADA_RETURN shift and go to state 103
    PALABRA_RESERVADA_BREAK shift and go to state 104
    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    stmt                           shift and go to state 108
    expStmt                        shift and go to state 91
    compoundStmt                   shift and go to state 92
    selectStmt                     shift and go to state 93
    iterStmt                       shift and go to state 94
    returnStmt                     shift and go to state 95
    breakStmt                      shift and go to state 96
    exp                            shift and go to state 97
    simpleExp                      shift and go to state 87
    mutable                        shift and go to state 86
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 63

    (14) varDeclId -> VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO .

    COLON           reduce using rule 14 (varDeclId -> VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO .)
    SEMICOLON       reduce using rule 14 (varDeclId -> VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO .)
    COMA            reduce using rule 14 (varDeclId -> VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO .)


state 64

    (59) simpleExp -> simpleExp PALABRA_RESERVADA_OR . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    VARIABLE        shift and go to state 50
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    andExp                         shift and go to state 109
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    mutable                        shift and go to state 46
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 65

    (61) andExp -> andExp PALABRA_RESERVADA_AND . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    VARIABLE        shift and go to state 50
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    unaryRelExp                    shift and go to state 110
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    mutable                        shift and go to state 46
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 66

    (63) unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .

    PALABRA_RESERVADA_AND reduce using rule 63 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    PALABRA_RESERVADA_OR reduce using rule 63 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    SEMICOLON       reduce using rule 63 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    COMA            reduce using rule 63 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    PARENTESIS_DERECHO reduce using rule 63 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    CORCHETE_DERECHO reduce using rule 63 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    PALABRA_RESERVADA_THEN reduce using rule 63 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    PALABRA_RESERVADA_DO reduce using rule 63 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    PALABRA_RESERVADA_TO reduce using rule 63 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)
    PALABRA_RESERVADA_BY reduce using rule 63 (unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp .)


state 67

    (65) relExp -> minmaxExp relop . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    VARIABLE        shift and go to state 50
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    minmaxExp                      shift and go to state 111
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    mutable                        shift and go to state 46
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 68

    (73) minmaxExp -> minmaxExp minmaxop . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    VARIABLE        shift and go to state 50
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    sumExp                         shift and go to state 112
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    mutable                        shift and go to state 46
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 69

    (67) relop -> MENOR_IGUAL .

    OPERADOR_RESTA  reduce using rule 67 (relop -> MENOR_IGUAL .)
    OPERADOR_MULTIPLICAR reduce using rule 67 (relop -> MENOR_IGUAL .)
    OP_TERNARIO     reduce using rule 67 (relop -> MENOR_IGUAL .)
    PARENTESIS_IZQUIERDO reduce using rule 67 (relop -> MENOR_IGUAL .)
    VARIABLE        reduce using rule 67 (relop -> MENOR_IGUAL .)
    NUMERO_ENTERO   reduce using rule 67 (relop -> MENOR_IGUAL .)
    NUMERO_DECIMAL  reduce using rule 67 (relop -> MENOR_IGUAL .)
    CARACTER        reduce using rule 67 (relop -> MENOR_IGUAL .)
    CADENA          reduce using rule 67 (relop -> MENOR_IGUAL .)
    PALABRA_RESERVADA_TRUE reduce using rule 67 (relop -> MENOR_IGUAL .)
    PALABRA_RESERVADA_FALSE reduce using rule 67 (relop -> MENOR_IGUAL .)


state 70

    (68) relop -> MENOR .

    OPERADOR_RESTA  reduce using rule 68 (relop -> MENOR .)
    OPERADOR_MULTIPLICAR reduce using rule 68 (relop -> MENOR .)
    OP_TERNARIO     reduce using rule 68 (relop -> MENOR .)
    PARENTESIS_IZQUIERDO reduce using rule 68 (relop -> MENOR .)
    VARIABLE        reduce using rule 68 (relop -> MENOR .)
    NUMERO_ENTERO   reduce using rule 68 (relop -> MENOR .)
    NUMERO_DECIMAL  reduce using rule 68 (relop -> MENOR .)
    CARACTER        reduce using rule 68 (relop -> MENOR .)
    CADENA          reduce using rule 68 (relop -> MENOR .)
    PALABRA_RESERVADA_TRUE reduce using rule 68 (relop -> MENOR .)
    PALABRA_RESERVADA_FALSE reduce using rule 68 (relop -> MENOR .)


state 71

    (69) relop -> MAYOR .

    OPERADOR_RESTA  reduce using rule 69 (relop -> MAYOR .)
    OPERADOR_MULTIPLICAR reduce using rule 69 (relop -> MAYOR .)
    OP_TERNARIO     reduce using rule 69 (relop -> MAYOR .)
    PARENTESIS_IZQUIERDO reduce using rule 69 (relop -> MAYOR .)
    VARIABLE        reduce using rule 69 (relop -> MAYOR .)
    NUMERO_ENTERO   reduce using rule 69 (relop -> MAYOR .)
    NUMERO_DECIMAL  reduce using rule 69 (relop -> MAYOR .)
    CARACTER        reduce using rule 69 (relop -> MAYOR .)
    CADENA          reduce using rule 69 (relop -> MAYOR .)
    PALABRA_RESERVADA_TRUE reduce using rule 69 (relop -> MAYOR .)
    PALABRA_RESERVADA_FALSE reduce using rule 69 (relop -> MAYOR .)


state 72

    (70) relop -> MAYOR_IGUAL .

    OPERADOR_RESTA  reduce using rule 70 (relop -> MAYOR_IGUAL .)
    OPERADOR_MULTIPLICAR reduce using rule 70 (relop -> MAYOR_IGUAL .)
    OP_TERNARIO     reduce using rule 70 (relop -> MAYOR_IGUAL .)
    PARENTESIS_IZQUIERDO reduce using rule 70 (relop -> MAYOR_IGUAL .)
    VARIABLE        reduce using rule 70 (relop -> MAYOR_IGUAL .)
    NUMERO_ENTERO   reduce using rule 70 (relop -> MAYOR_IGUAL .)
    NUMERO_DECIMAL  reduce using rule 70 (relop -> MAYOR_IGUAL .)
    CARACTER        reduce using rule 70 (relop -> MAYOR_IGUAL .)
    CADENA          reduce using rule 70 (relop -> MAYOR_IGUAL .)
    PALABRA_RESERVADA_TRUE reduce using rule 70 (relop -> MAYOR_IGUAL .)
    PALABRA_RESERVADA_FALSE reduce using rule 70 (relop -> MAYOR_IGUAL .)


state 73

    (71) relop -> IGUAL .

    OPERADOR_RESTA  reduce using rule 71 (relop -> IGUAL .)
    OPERADOR_MULTIPLICAR reduce using rule 71 (relop -> IGUAL .)
    OP_TERNARIO     reduce using rule 71 (relop -> IGUAL .)
    PARENTESIS_IZQUIERDO reduce using rule 71 (relop -> IGUAL .)
    VARIABLE        reduce using rule 71 (relop -> IGUAL .)
    NUMERO_ENTERO   reduce using rule 71 (relop -> IGUAL .)
    NUMERO_DECIMAL  reduce using rule 71 (relop -> IGUAL .)
    CARACTER        reduce using rule 71 (relop -> IGUAL .)
    CADENA          reduce using rule 71 (relop -> IGUAL .)
    PALABRA_RESERVADA_TRUE reduce using rule 71 (relop -> IGUAL .)
    PALABRA_RESERVADA_FALSE reduce using rule 71 (relop -> IGUAL .)


state 74

    (72) relop -> DISTINTO .

    OPERADOR_RESTA  reduce using rule 72 (relop -> DISTINTO .)
    OPERADOR_MULTIPLICAR reduce using rule 72 (relop -> DISTINTO .)
    OP_TERNARIO     reduce using rule 72 (relop -> DISTINTO .)
    PARENTESIS_IZQUIERDO reduce using rule 72 (relop -> DISTINTO .)
    VARIABLE        reduce using rule 72 (relop -> DISTINTO .)
    NUMERO_ENTERO   reduce using rule 72 (relop -> DISTINTO .)
    NUMERO_DECIMAL  reduce using rule 72 (relop -> DISTINTO .)
    CARACTER        reduce using rule 72 (relop -> DISTINTO .)
    CADENA          reduce using rule 72 (relop -> DISTINTO .)
    PALABRA_RESERVADA_TRUE reduce using rule 72 (relop -> DISTINTO .)
    PALABRA_RESERVADA_FALSE reduce using rule 72 (relop -> DISTINTO .)


state 75

    (75) minmaxop -> PUNTOS_MAYOR_PUNTOS .

    OPERADOR_RESTA  reduce using rule 75 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    OPERADOR_MULTIPLICAR reduce using rule 75 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    OP_TERNARIO     reduce using rule 75 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    PARENTESIS_IZQUIERDO reduce using rule 75 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    VARIABLE        reduce using rule 75 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    NUMERO_ENTERO   reduce using rule 75 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    NUMERO_DECIMAL  reduce using rule 75 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    CARACTER        reduce using rule 75 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    CADENA          reduce using rule 75 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    PALABRA_RESERVADA_TRUE reduce using rule 75 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)
    PALABRA_RESERVADA_FALSE reduce using rule 75 (minmaxop -> PUNTOS_MAYOR_PUNTOS .)


state 76

    (76) minmaxop -> PUNTOS_MENOR_PUNTOS .

    OPERADOR_RESTA  reduce using rule 76 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    OPERADOR_MULTIPLICAR reduce using rule 76 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    OP_TERNARIO     reduce using rule 76 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    PARENTESIS_IZQUIERDO reduce using rule 76 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    VARIABLE        reduce using rule 76 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    NUMERO_ENTERO   reduce using rule 76 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    NUMERO_DECIMAL  reduce using rule 76 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    CARACTER        reduce using rule 76 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    CADENA          reduce using rule 76 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    PALABRA_RESERVADA_TRUE reduce using rule 76 (minmaxop -> PUNTOS_MENOR_PUNTOS .)
    PALABRA_RESERVADA_FALSE reduce using rule 76 (minmaxop -> PUNTOS_MENOR_PUNTOS .)


state 77

    (77) sumExp -> sumExp sumop . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    VARIABLE        shift and go to state 50
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    mulExp                         shift and go to state 113
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    mutable                        shift and go to state 46
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 78

    (79) sumop -> OPERADOR_SUMA .

    OPERADOR_RESTA  reduce using rule 79 (sumop -> OPERADOR_SUMA .)
    OPERADOR_MULTIPLICAR reduce using rule 79 (sumop -> OPERADOR_SUMA .)
    OP_TERNARIO     reduce using rule 79 (sumop -> OPERADOR_SUMA .)
    PARENTESIS_IZQUIERDO reduce using rule 79 (sumop -> OPERADOR_SUMA .)
    VARIABLE        reduce using rule 79 (sumop -> OPERADOR_SUMA .)
    NUMERO_ENTERO   reduce using rule 79 (sumop -> OPERADOR_SUMA .)
    NUMERO_DECIMAL  reduce using rule 79 (sumop -> OPERADOR_SUMA .)
    CARACTER        reduce using rule 79 (sumop -> OPERADOR_SUMA .)
    CADENA          reduce using rule 79 (sumop -> OPERADOR_SUMA .)
    PALABRA_RESERVADA_TRUE reduce using rule 79 (sumop -> OPERADOR_SUMA .)
    PALABRA_RESERVADA_FALSE reduce using rule 79 (sumop -> OPERADOR_SUMA .)


state 79

    (80) sumop -> OPERADOR_RESTA .

    OPERADOR_RESTA  reduce using rule 80 (sumop -> OPERADOR_RESTA .)
    OPERADOR_MULTIPLICAR reduce using rule 80 (sumop -> OPERADOR_RESTA .)
    OP_TERNARIO     reduce using rule 80 (sumop -> OPERADOR_RESTA .)
    PARENTESIS_IZQUIERDO reduce using rule 80 (sumop -> OPERADOR_RESTA .)
    VARIABLE        reduce using rule 80 (sumop -> OPERADOR_RESTA .)
    NUMERO_ENTERO   reduce using rule 80 (sumop -> OPERADOR_RESTA .)
    NUMERO_DECIMAL  reduce using rule 80 (sumop -> OPERADOR_RESTA .)
    CARACTER        reduce using rule 80 (sumop -> OPERADOR_RESTA .)
    CADENA          reduce using rule 80 (sumop -> OPERADOR_RESTA .)
    PALABRA_RESERVADA_TRUE reduce using rule 80 (sumop -> OPERADOR_RESTA .)
    PALABRA_RESERVADA_FALSE reduce using rule 80 (sumop -> OPERADOR_RESTA .)


state 80

    (81) mulExp -> mulExp mulop . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    VARIABLE        shift and go to state 50
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    unaryExp                       shift and go to state 114
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    mutable                        shift and go to state 46
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 81

    (83) mulop -> OPERADOR_MULTIPLICAR .

    OPERADOR_RESTA  reduce using rule 83 (mulop -> OPERADOR_MULTIPLICAR .)
    OPERADOR_MULTIPLICAR reduce using rule 83 (mulop -> OPERADOR_MULTIPLICAR .)
    OP_TERNARIO     reduce using rule 83 (mulop -> OPERADOR_MULTIPLICAR .)
    PARENTESIS_IZQUIERDO reduce using rule 83 (mulop -> OPERADOR_MULTIPLICAR .)
    VARIABLE        reduce using rule 83 (mulop -> OPERADOR_MULTIPLICAR .)
    NUMERO_ENTERO   reduce using rule 83 (mulop -> OPERADOR_MULTIPLICAR .)
    NUMERO_DECIMAL  reduce using rule 83 (mulop -> OPERADOR_MULTIPLICAR .)
    CARACTER        reduce using rule 83 (mulop -> OPERADOR_MULTIPLICAR .)
    CADENA          reduce using rule 83 (mulop -> OPERADOR_MULTIPLICAR .)
    PALABRA_RESERVADA_TRUE reduce using rule 83 (mulop -> OPERADOR_MULTIPLICAR .)
    PALABRA_RESERVADA_FALSE reduce using rule 83 (mulop -> OPERADOR_MULTIPLICAR .)


state 82

    (84) mulop -> OPERADOR_DIVIDIR .

    OPERADOR_RESTA  reduce using rule 84 (mulop -> OPERADOR_DIVIDIR .)
    OPERADOR_MULTIPLICAR reduce using rule 84 (mulop -> OPERADOR_DIVIDIR .)
    OP_TERNARIO     reduce using rule 84 (mulop -> OPERADOR_DIVIDIR .)
    PARENTESIS_IZQUIERDO reduce using rule 84 (mulop -> OPERADOR_DIVIDIR .)
    VARIABLE        reduce using rule 84 (mulop -> OPERADOR_DIVIDIR .)
    NUMERO_ENTERO   reduce using rule 84 (mulop -> OPERADOR_DIVIDIR .)
    NUMERO_DECIMAL  reduce using rule 84 (mulop -> OPERADOR_DIVIDIR .)
    CARACTER        reduce using rule 84 (mulop -> OPERADOR_DIVIDIR .)
    CADENA          reduce using rule 84 (mulop -> OPERADOR_DIVIDIR .)
    PALABRA_RESERVADA_TRUE reduce using rule 84 (mulop -> OPERADOR_DIVIDIR .)
    PALABRA_RESERVADA_FALSE reduce using rule 84 (mulop -> OPERADOR_DIVIDIR .)


state 83

    (85) mulop -> OPERADOR_MODULO .

    OPERADOR_RESTA  reduce using rule 85 (mulop -> OPERADOR_MODULO .)
    OPERADOR_MULTIPLICAR reduce using rule 85 (mulop -> OPERADOR_MODULO .)
    OP_TERNARIO     reduce using rule 85 (mulop -> OPERADOR_MODULO .)
    PARENTESIS_IZQUIERDO reduce using rule 85 (mulop -> OPERADOR_MODULO .)
    VARIABLE        reduce using rule 85 (mulop -> OPERADOR_MODULO .)
    NUMERO_ENTERO   reduce using rule 85 (mulop -> OPERADOR_MODULO .)
    NUMERO_DECIMAL  reduce using rule 85 (mulop -> OPERADOR_MODULO .)
    CARACTER        reduce using rule 85 (mulop -> OPERADOR_MODULO .)
    CADENA          reduce using rule 85 (mulop -> OPERADOR_MODULO .)
    PALABRA_RESERVADA_TRUE reduce using rule 85 (mulop -> OPERADOR_MODULO .)
    PALABRA_RESERVADA_FALSE reduce using rule 85 (mulop -> OPERADOR_MODULO .)


state 84

    (86) unaryExp -> unaryop unaryExp .

    OPERADOR_MULTIPLICAR reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    OPERADOR_DIVIDIR reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    OPERADOR_MODULO reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    OPERADOR_SUMA   reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    OPERADOR_RESTA  reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    MENOR_IGUAL     reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    MENOR           reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    MAYOR           reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    MAYOR_IGUAL     reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    IGUAL           reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    DISTINTO        reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    PUNTOS_MENOR_PUNTOS reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    PALABRA_RESERVADA_AND reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    PALABRA_RESERVADA_OR reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    SEMICOLON       reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    COMA            reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    PARENTESIS_DERECHO reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    CORCHETE_DERECHO reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    PALABRA_RESERVADA_THEN reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    PALABRA_RESERVADA_DO reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    PALABRA_RESERVADA_TO reduce using rule 86 (unaryExp -> unaryop unaryExp .)
    PALABRA_RESERVADA_BY reduce using rule 86 (unaryExp -> unaryop unaryExp .)


state 85

    (95) immutable -> PARENTESIS_IZQUIERDO exp . PARENTESIS_DERECHO

    PARENTESIS_DERECHO shift and go to state 115


state 86

    (51) exp -> mutable . ASIGNACION exp
    (52) exp -> mutable . SUMA_RESULTADO exp
    (53) exp -> mutable . RESTA_RESULTADO exp
    (54) exp -> mutable . MULTI_RESULTADO exp
    (55) exp -> mutable . DIVI_RESULTADO exp
    (56) exp -> mutable . INCREMENTO
    (57) exp -> mutable . DECREMENTO
    (92) factor -> mutable .

    ASIGNACION      shift and go to state 116
    SUMA_RESULTADO  shift and go to state 117
    RESTA_RESULTADO shift and go to state 118
    MULTI_RESULTADO shift and go to state 119
    DIVI_RESULTADO  shift and go to state 120
    INCREMENTO      shift and go to state 121
    DECREMENTO      shift and go to state 122
    OPERADOR_MULTIPLICAR reduce using rule 92 (factor -> mutable .)
    OPERADOR_DIVIDIR reduce using rule 92 (factor -> mutable .)
    OPERADOR_MODULO reduce using rule 92 (factor -> mutable .)
    OPERADOR_SUMA   reduce using rule 92 (factor -> mutable .)
    OPERADOR_RESTA  reduce using rule 92 (factor -> mutable .)
    MENOR_IGUAL     reduce using rule 92 (factor -> mutable .)
    MENOR           reduce using rule 92 (factor -> mutable .)
    MAYOR           reduce using rule 92 (factor -> mutable .)
    MAYOR_IGUAL     reduce using rule 92 (factor -> mutable .)
    IGUAL           reduce using rule 92 (factor -> mutable .)
    DISTINTO        reduce using rule 92 (factor -> mutable .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 92 (factor -> mutable .)
    PUNTOS_MENOR_PUNTOS reduce using rule 92 (factor -> mutable .)
    PALABRA_RESERVADA_AND reduce using rule 92 (factor -> mutable .)
    PALABRA_RESERVADA_OR reduce using rule 92 (factor -> mutable .)
    PARENTESIS_DERECHO reduce using rule 92 (factor -> mutable .)
    SEMICOLON       reduce using rule 92 (factor -> mutable .)
    CORCHETE_DERECHO reduce using rule 92 (factor -> mutable .)
    COMA            reduce using rule 92 (factor -> mutable .)


state 87

    (58) exp -> simpleExp .
    (59) simpleExp -> simpleExp . PALABRA_RESERVADA_OR andExp

    PARENTESIS_DERECHO reduce using rule 58 (exp -> simpleExp .)
    SEMICOLON       reduce using rule 58 (exp -> simpleExp .)
    CORCHETE_DERECHO reduce using rule 58 (exp -> simpleExp .)
    COMA            reduce using rule 58 (exp -> simpleExp .)
    PALABRA_RESERVADA_OR shift and go to state 64


state 88

    (94) mutable -> VARIABLE CORCHETE_IZQUIERDO . exp CORCHETE_DERECHO
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    exp                            shift and go to state 123
    mutable                        shift and go to state 86
    simpleExp                      shift and go to state 87
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 89

    (98) call -> VARIABLE PARENTESIS_IZQUIERDO . args PARENTESIS_DERECHO
    (99) args -> . argList
    (100) args -> . eps
    (101) argList -> . argList COMA exp
    (102) argList -> . exp
    (109) eps -> .
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    PARENTESIS_DERECHO reduce using rule 109 (eps -> .)
    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    args                           shift and go to state 124
    argList                        shift and go to state 125
    eps                            shift and go to state 126
    exp                            shift and go to state 127
    mutable                        shift and go to state 86
    simpleExp                      shift and go to state 87
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 90

    (19) funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .

    VARIABLE        reduce using rule 19 (funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    TIPO_ENTERO     reduce using rule 19 (funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 19 (funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    TIPO_CARACTER   reduce using rule 19 (funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    $end            reduce using rule 19 (funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)


state 91

    (29) stmt -> expStmt .

    VARIABLE        reduce using rule 29 (stmt -> expStmt .)
    TIPO_ENTERO     reduce using rule 29 (stmt -> expStmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 29 (stmt -> expStmt .)
    TIPO_CARACTER   reduce using rule 29 (stmt -> expStmt .)
    $end            reduce using rule 29 (stmt -> expStmt .)
    LLAVE_DER       reduce using rule 29 (stmt -> expStmt .)
    SEMICOLON       reduce using rule 29 (stmt -> expStmt .)
    LLAVE_IZQ       reduce using rule 29 (stmt -> expStmt .)
    PALABRA_RESERVADA_IF reduce using rule 29 (stmt -> expStmt .)
    BUCLE_WHILE     reduce using rule 29 (stmt -> expStmt .)
    BUCLE_FOR       reduce using rule 29 (stmt -> expStmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 29 (stmt -> expStmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 29 (stmt -> expStmt .)
    PALABRA_RESERVADA_NOT reduce using rule 29 (stmt -> expStmt .)
    OPERADOR_RESTA  reduce using rule 29 (stmt -> expStmt .)
    OPERADOR_MULTIPLICAR reduce using rule 29 (stmt -> expStmt .)
    OP_TERNARIO     reduce using rule 29 (stmt -> expStmt .)
    PARENTESIS_IZQUIERDO reduce using rule 29 (stmt -> expStmt .)
    NUMERO_ENTERO   reduce using rule 29 (stmt -> expStmt .)
    NUMERO_DECIMAL  reduce using rule 29 (stmt -> expStmt .)
    CARACTER        reduce using rule 29 (stmt -> expStmt .)
    CADENA          reduce using rule 29 (stmt -> expStmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 29 (stmt -> expStmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 29 (stmt -> expStmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 29 (stmt -> expStmt .)


state 92

    (30) stmt -> compoundStmt .

    VARIABLE        reduce using rule 30 (stmt -> compoundStmt .)
    TIPO_ENTERO     reduce using rule 30 (stmt -> compoundStmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 30 (stmt -> compoundStmt .)
    TIPO_CARACTER   reduce using rule 30 (stmt -> compoundStmt .)
    $end            reduce using rule 30 (stmt -> compoundStmt .)
    LLAVE_DER       reduce using rule 30 (stmt -> compoundStmt .)
    SEMICOLON       reduce using rule 30 (stmt -> compoundStmt .)
    LLAVE_IZQ       reduce using rule 30 (stmt -> compoundStmt .)
    PALABRA_RESERVADA_IF reduce using rule 30 (stmt -> compoundStmt .)
    BUCLE_WHILE     reduce using rule 30 (stmt -> compoundStmt .)
    BUCLE_FOR       reduce using rule 30 (stmt -> compoundStmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 30 (stmt -> compoundStmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 30 (stmt -> compoundStmt .)
    PALABRA_RESERVADA_NOT reduce using rule 30 (stmt -> compoundStmt .)
    OPERADOR_RESTA  reduce using rule 30 (stmt -> compoundStmt .)
    OPERADOR_MULTIPLICAR reduce using rule 30 (stmt -> compoundStmt .)
    OP_TERNARIO     reduce using rule 30 (stmt -> compoundStmt .)
    PARENTESIS_IZQUIERDO reduce using rule 30 (stmt -> compoundStmt .)
    NUMERO_ENTERO   reduce using rule 30 (stmt -> compoundStmt .)
    NUMERO_DECIMAL  reduce using rule 30 (stmt -> compoundStmt .)
    CARACTER        reduce using rule 30 (stmt -> compoundStmt .)
    CADENA          reduce using rule 30 (stmt -> compoundStmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 30 (stmt -> compoundStmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 30 (stmt -> compoundStmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 30 (stmt -> compoundStmt .)


state 93

    (31) stmt -> selectStmt .

    VARIABLE        reduce using rule 31 (stmt -> selectStmt .)
    TIPO_ENTERO     reduce using rule 31 (stmt -> selectStmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 31 (stmt -> selectStmt .)
    TIPO_CARACTER   reduce using rule 31 (stmt -> selectStmt .)
    $end            reduce using rule 31 (stmt -> selectStmt .)
    LLAVE_DER       reduce using rule 31 (stmt -> selectStmt .)
    SEMICOLON       reduce using rule 31 (stmt -> selectStmt .)
    LLAVE_IZQ       reduce using rule 31 (stmt -> selectStmt .)
    PALABRA_RESERVADA_IF reduce using rule 31 (stmt -> selectStmt .)
    BUCLE_WHILE     reduce using rule 31 (stmt -> selectStmt .)
    BUCLE_FOR       reduce using rule 31 (stmt -> selectStmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 31 (stmt -> selectStmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 31 (stmt -> selectStmt .)
    PALABRA_RESERVADA_NOT reduce using rule 31 (stmt -> selectStmt .)
    OPERADOR_RESTA  reduce using rule 31 (stmt -> selectStmt .)
    OPERADOR_MULTIPLICAR reduce using rule 31 (stmt -> selectStmt .)
    OP_TERNARIO     reduce using rule 31 (stmt -> selectStmt .)
    PARENTESIS_IZQUIERDO reduce using rule 31 (stmt -> selectStmt .)
    NUMERO_ENTERO   reduce using rule 31 (stmt -> selectStmt .)
    NUMERO_DECIMAL  reduce using rule 31 (stmt -> selectStmt .)
    CARACTER        reduce using rule 31 (stmt -> selectStmt .)
    CADENA          reduce using rule 31 (stmt -> selectStmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 31 (stmt -> selectStmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 31 (stmt -> selectStmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 31 (stmt -> selectStmt .)


state 94

    (32) stmt -> iterStmt .

    VARIABLE        reduce using rule 32 (stmt -> iterStmt .)
    TIPO_ENTERO     reduce using rule 32 (stmt -> iterStmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 32 (stmt -> iterStmt .)
    TIPO_CARACTER   reduce using rule 32 (stmt -> iterStmt .)
    $end            reduce using rule 32 (stmt -> iterStmt .)
    LLAVE_DER       reduce using rule 32 (stmt -> iterStmt .)
    SEMICOLON       reduce using rule 32 (stmt -> iterStmt .)
    LLAVE_IZQ       reduce using rule 32 (stmt -> iterStmt .)
    PALABRA_RESERVADA_IF reduce using rule 32 (stmt -> iterStmt .)
    BUCLE_WHILE     reduce using rule 32 (stmt -> iterStmt .)
    BUCLE_FOR       reduce using rule 32 (stmt -> iterStmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 32 (stmt -> iterStmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 32 (stmt -> iterStmt .)
    PALABRA_RESERVADA_NOT reduce using rule 32 (stmt -> iterStmt .)
    OPERADOR_RESTA  reduce using rule 32 (stmt -> iterStmt .)
    OPERADOR_MULTIPLICAR reduce using rule 32 (stmt -> iterStmt .)
    OP_TERNARIO     reduce using rule 32 (stmt -> iterStmt .)
    PARENTESIS_IZQUIERDO reduce using rule 32 (stmt -> iterStmt .)
    NUMERO_ENTERO   reduce using rule 32 (stmt -> iterStmt .)
    NUMERO_DECIMAL  reduce using rule 32 (stmt -> iterStmt .)
    CARACTER        reduce using rule 32 (stmt -> iterStmt .)
    CADENA          reduce using rule 32 (stmt -> iterStmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 32 (stmt -> iterStmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 32 (stmt -> iterStmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 32 (stmt -> iterStmt .)


state 95

    (33) stmt -> returnStmt .

    VARIABLE        reduce using rule 33 (stmt -> returnStmt .)
    TIPO_ENTERO     reduce using rule 33 (stmt -> returnStmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 33 (stmt -> returnStmt .)
    TIPO_CARACTER   reduce using rule 33 (stmt -> returnStmt .)
    $end            reduce using rule 33 (stmt -> returnStmt .)
    LLAVE_DER       reduce using rule 33 (stmt -> returnStmt .)
    SEMICOLON       reduce using rule 33 (stmt -> returnStmt .)
    LLAVE_IZQ       reduce using rule 33 (stmt -> returnStmt .)
    PALABRA_RESERVADA_IF reduce using rule 33 (stmt -> returnStmt .)
    BUCLE_WHILE     reduce using rule 33 (stmt -> returnStmt .)
    BUCLE_FOR       reduce using rule 33 (stmt -> returnStmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 33 (stmt -> returnStmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 33 (stmt -> returnStmt .)
    PALABRA_RESERVADA_NOT reduce using rule 33 (stmt -> returnStmt .)
    OPERADOR_RESTA  reduce using rule 33 (stmt -> returnStmt .)
    OPERADOR_MULTIPLICAR reduce using rule 33 (stmt -> returnStmt .)
    OP_TERNARIO     reduce using rule 33 (stmt -> returnStmt .)
    PARENTESIS_IZQUIERDO reduce using rule 33 (stmt -> returnStmt .)
    NUMERO_ENTERO   reduce using rule 33 (stmt -> returnStmt .)
    NUMERO_DECIMAL  reduce using rule 33 (stmt -> returnStmt .)
    CARACTER        reduce using rule 33 (stmt -> returnStmt .)
    CADENA          reduce using rule 33 (stmt -> returnStmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 33 (stmt -> returnStmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 33 (stmt -> returnStmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 33 (stmt -> returnStmt .)


state 96

    (34) stmt -> breakStmt .

    VARIABLE        reduce using rule 34 (stmt -> breakStmt .)
    TIPO_ENTERO     reduce using rule 34 (stmt -> breakStmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 34 (stmt -> breakStmt .)
    TIPO_CARACTER   reduce using rule 34 (stmt -> breakStmt .)
    $end            reduce using rule 34 (stmt -> breakStmt .)
    LLAVE_DER       reduce using rule 34 (stmt -> breakStmt .)
    SEMICOLON       reduce using rule 34 (stmt -> breakStmt .)
    LLAVE_IZQ       reduce using rule 34 (stmt -> breakStmt .)
    PALABRA_RESERVADA_IF reduce using rule 34 (stmt -> breakStmt .)
    BUCLE_WHILE     reduce using rule 34 (stmt -> breakStmt .)
    BUCLE_FOR       reduce using rule 34 (stmt -> breakStmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 34 (stmt -> breakStmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 34 (stmt -> breakStmt .)
    PALABRA_RESERVADA_NOT reduce using rule 34 (stmt -> breakStmt .)
    OPERADOR_RESTA  reduce using rule 34 (stmt -> breakStmt .)
    OPERADOR_MULTIPLICAR reduce using rule 34 (stmt -> breakStmt .)
    OP_TERNARIO     reduce using rule 34 (stmt -> breakStmt .)
    PARENTESIS_IZQUIERDO reduce using rule 34 (stmt -> breakStmt .)
    NUMERO_ENTERO   reduce using rule 34 (stmt -> breakStmt .)
    NUMERO_DECIMAL  reduce using rule 34 (stmt -> breakStmt .)
    CARACTER        reduce using rule 34 (stmt -> breakStmt .)
    CADENA          reduce using rule 34 (stmt -> breakStmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 34 (stmt -> breakStmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 34 (stmt -> breakStmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 34 (stmt -> breakStmt .)


state 97

    (35) expStmt -> exp . SEMICOLON

    SEMICOLON       shift and go to state 128


state 98

    (36) expStmt -> SEMICOLON .

    VARIABLE        reduce using rule 36 (expStmt -> SEMICOLON .)
    TIPO_ENTERO     reduce using rule 36 (expStmt -> SEMICOLON .)
    PALABRA_RESERVADA_BOOL reduce using rule 36 (expStmt -> SEMICOLON .)
    TIPO_CARACTER   reduce using rule 36 (expStmt -> SEMICOLON .)
    $end            reduce using rule 36 (expStmt -> SEMICOLON .)
    LLAVE_DER       reduce using rule 36 (expStmt -> SEMICOLON .)
    SEMICOLON       reduce using rule 36 (expStmt -> SEMICOLON .)
    LLAVE_IZQ       reduce using rule 36 (expStmt -> SEMICOLON .)
    PALABRA_RESERVADA_IF reduce using rule 36 (expStmt -> SEMICOLON .)
    BUCLE_WHILE     reduce using rule 36 (expStmt -> SEMICOLON .)
    BUCLE_FOR       reduce using rule 36 (expStmt -> SEMICOLON .)
    PALABRA_RESERVADA_RETURN reduce using rule 36 (expStmt -> SEMICOLON .)
    PALABRA_RESERVADA_BREAK reduce using rule 36 (expStmt -> SEMICOLON .)
    PALABRA_RESERVADA_NOT reduce using rule 36 (expStmt -> SEMICOLON .)
    OPERADOR_RESTA  reduce using rule 36 (expStmt -> SEMICOLON .)
    OPERADOR_MULTIPLICAR reduce using rule 36 (expStmt -> SEMICOLON .)
    OP_TERNARIO     reduce using rule 36 (expStmt -> SEMICOLON .)
    PARENTESIS_IZQUIERDO reduce using rule 36 (expStmt -> SEMICOLON .)
    NUMERO_ENTERO   reduce using rule 36 (expStmt -> SEMICOLON .)
    NUMERO_DECIMAL  reduce using rule 36 (expStmt -> SEMICOLON .)
    CARACTER        reduce using rule 36 (expStmt -> SEMICOLON .)
    CADENA          reduce using rule 36 (expStmt -> SEMICOLON .)
    PALABRA_RESERVADA_TRUE reduce using rule 36 (expStmt -> SEMICOLON .)
    PALABRA_RESERVADA_FALSE reduce using rule 36 (expStmt -> SEMICOLON .)
    PALABRA_RESERVADA_ELSE reduce using rule 36 (expStmt -> SEMICOLON .)


state 99

    (37) compoundStmt -> LLAVE_IZQ . localDecls stmtList LLAVE_DER
    (38) localDecls -> . localDecls scopedVarDecl
    (39) localDecls -> . eps
    (109) eps -> .

    PALABRA_RESERVADA_STATIC reduce using rule 109 (eps -> .)
    TIPO_ENTERO     reduce using rule 109 (eps -> .)
    PALABRA_RESERVADA_BOOL reduce using rule 109 (eps -> .)
    TIPO_CARACTER   reduce using rule 109 (eps -> .)
    LLAVE_DER       reduce using rule 109 (eps -> .)
    SEMICOLON       reduce using rule 109 (eps -> .)
    LLAVE_IZQ       reduce using rule 109 (eps -> .)
    PALABRA_RESERVADA_IF reduce using rule 109 (eps -> .)
    BUCLE_WHILE     reduce using rule 109 (eps -> .)
    BUCLE_FOR       reduce using rule 109 (eps -> .)
    PALABRA_RESERVADA_RETURN reduce using rule 109 (eps -> .)
    PALABRA_RESERVADA_BREAK reduce using rule 109 (eps -> .)
    VARIABLE        reduce using rule 109 (eps -> .)
    PALABRA_RESERVADA_NOT reduce using rule 109 (eps -> .)
    OPERADOR_RESTA  reduce using rule 109 (eps -> .)
    OPERADOR_MULTIPLICAR reduce using rule 109 (eps -> .)
    OP_TERNARIO     reduce using rule 109 (eps -> .)
    PARENTESIS_IZQUIERDO reduce using rule 109 (eps -> .)
    NUMERO_ENTERO   reduce using rule 109 (eps -> .)
    NUMERO_DECIMAL  reduce using rule 109 (eps -> .)
    CARACTER        reduce using rule 109 (eps -> .)
    CADENA          reduce using rule 109 (eps -> .)
    PALABRA_RESERVADA_TRUE reduce using rule 109 (eps -> .)
    PALABRA_RESERVADA_FALSE reduce using rule 109 (eps -> .)

    localDecls                     shift and go to state 129
    eps                            shift and go to state 130

state 100

    (42) selectStmt -> PALABRA_RESERVADA_IF . simpleExp PALABRA_RESERVADA_THEN stmt
    (43) selectStmt -> PALABRA_RESERVADA_IF . simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    VARIABLE        shift and go to state 50
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    simpleExp                      shift and go to state 131
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    mutable                        shift and go to state 46
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 101

    (44) iterStmt -> BUCLE_WHILE . simpleExp PALABRA_RESERVADA_DO stmt
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    VARIABLE        shift and go to state 50
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    simpleExp                      shift and go to state 132
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    mutable                        shift and go to state 46
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 102

    (45) iterStmt -> BUCLE_FOR . VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt

    VARIABLE        shift and go to state 133


state 103

    (48) returnStmt -> PALABRA_RESERVADA_RETURN . SEMICOLON
    (49) returnStmt -> PALABRA_RESERVADA_RETURN . exp SEMICOLON
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    SEMICOLON       shift and go to state 134
    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    exp                            shift and go to state 135
    mutable                        shift and go to state 86
    simpleExp                      shift and go to state 87
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 104

    (50) breakStmt -> PALABRA_RESERVADA_BREAK . SEMICOLON

    SEMICOLON       shift and go to state 136


state 105

    (22) parmList -> parmList SEMICOLON parmTypeList .

    SEMICOLON       reduce using rule 22 (parmList -> parmList SEMICOLON parmTypeList .)
    PARENTESIS_DERECHO reduce using rule 22 (parmList -> parmList SEMICOLON parmTypeList .)


state 106

    (25) parmIdList -> parmIdList COMA . parmId
    (27) parmId -> . VARIABLE
    (28) parmId -> . VARIABLE CORCHETE_IZQUIERDO CORCHETE_DERECHO

    VARIABLE        shift and go to state 61

    parmId                         shift and go to state 137

state 107

    (28) parmId -> VARIABLE CORCHETE_IZQUIERDO . CORCHETE_DERECHO

    CORCHETE_DERECHO shift and go to state 138


state 108

    (18) funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .

    VARIABLE        reduce using rule 18 (funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    TIPO_ENTERO     reduce using rule 18 (funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 18 (funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    TIPO_CARACTER   reduce using rule 18 (funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)
    $end            reduce using rule 18 (funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt .)


state 109

    (59) simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .
    (61) andExp -> andExp . PALABRA_RESERVADA_AND unaryRelExp

    PALABRA_RESERVADA_OR reduce using rule 59 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    SEMICOLON       reduce using rule 59 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    COMA            reduce using rule 59 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    PARENTESIS_DERECHO reduce using rule 59 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    CORCHETE_DERECHO reduce using rule 59 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    PALABRA_RESERVADA_THEN reduce using rule 59 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    PALABRA_RESERVADA_DO reduce using rule 59 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    PALABRA_RESERVADA_TO reduce using rule 59 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    PALABRA_RESERVADA_BY reduce using rule 59 (simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp .)
    PALABRA_RESERVADA_AND shift and go to state 65


state 110

    (61) andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .

    PALABRA_RESERVADA_AND reduce using rule 61 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    PALABRA_RESERVADA_OR reduce using rule 61 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    SEMICOLON       reduce using rule 61 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    COMA            reduce using rule 61 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    PARENTESIS_DERECHO reduce using rule 61 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    CORCHETE_DERECHO reduce using rule 61 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    PALABRA_RESERVADA_THEN reduce using rule 61 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    PALABRA_RESERVADA_DO reduce using rule 61 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    PALABRA_RESERVADA_TO reduce using rule 61 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)
    PALABRA_RESERVADA_BY reduce using rule 61 (andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp .)


state 111

    (65) relExp -> minmaxExp relop minmaxExp .
    (73) minmaxExp -> minmaxExp . minmaxop sumExp
    (75) minmaxop -> . PUNTOS_MAYOR_PUNTOS
    (76) minmaxop -> . PUNTOS_MENOR_PUNTOS

    PALABRA_RESERVADA_AND reduce using rule 65 (relExp -> minmaxExp relop minmaxExp .)
    PALABRA_RESERVADA_OR reduce using rule 65 (relExp -> minmaxExp relop minmaxExp .)
    SEMICOLON       reduce using rule 65 (relExp -> minmaxExp relop minmaxExp .)
    COMA            reduce using rule 65 (relExp -> minmaxExp relop minmaxExp .)
    PARENTESIS_DERECHO reduce using rule 65 (relExp -> minmaxExp relop minmaxExp .)
    CORCHETE_DERECHO reduce using rule 65 (relExp -> minmaxExp relop minmaxExp .)
    PALABRA_RESERVADA_THEN reduce using rule 65 (relExp -> minmaxExp relop minmaxExp .)
    PALABRA_RESERVADA_DO reduce using rule 65 (relExp -> minmaxExp relop minmaxExp .)
    PALABRA_RESERVADA_TO reduce using rule 65 (relExp -> minmaxExp relop minmaxExp .)
    PALABRA_RESERVADA_BY reduce using rule 65 (relExp -> minmaxExp relop minmaxExp .)
    PUNTOS_MAYOR_PUNTOS shift and go to state 75
    PUNTOS_MENOR_PUNTOS shift and go to state 76

    minmaxop                       shift and go to state 68

state 112

    (73) minmaxExp -> minmaxExp minmaxop sumExp .
    (77) sumExp -> sumExp . sumop mulExp
    (79) sumop -> . OPERADOR_SUMA
    (80) sumop -> . OPERADOR_RESTA

    MENOR_IGUAL     reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    MENOR           reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    MAYOR           reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    MAYOR_IGUAL     reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    IGUAL           reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    DISTINTO        reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PUNTOS_MENOR_PUNTOS reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PALABRA_RESERVADA_AND reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PALABRA_RESERVADA_OR reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    SEMICOLON       reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    COMA            reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PARENTESIS_DERECHO reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    CORCHETE_DERECHO reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PALABRA_RESERVADA_THEN reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PALABRA_RESERVADA_DO reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PALABRA_RESERVADA_TO reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    PALABRA_RESERVADA_BY reduce using rule 73 (minmaxExp -> minmaxExp minmaxop sumExp .)
    OPERADOR_SUMA   shift and go to state 78
    OPERADOR_RESTA  shift and go to state 79

    sumop                          shift and go to state 77

state 113

    (77) sumExp -> sumExp sumop mulExp .
    (81) mulExp -> mulExp . mulop unaryExp
    (83) mulop -> . OPERADOR_MULTIPLICAR
    (84) mulop -> . OPERADOR_DIVIDIR
    (85) mulop -> . OPERADOR_MODULO

    OPERADOR_SUMA   reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    OPERADOR_RESTA  reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    MENOR_IGUAL     reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    MENOR           reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    MAYOR           reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    MAYOR_IGUAL     reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    IGUAL           reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    DISTINTO        reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    PUNTOS_MENOR_PUNTOS reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    PALABRA_RESERVADA_AND reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    PALABRA_RESERVADA_OR reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    SEMICOLON       reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    COMA            reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    PARENTESIS_DERECHO reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    CORCHETE_DERECHO reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    PALABRA_RESERVADA_THEN reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    PALABRA_RESERVADA_DO reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    PALABRA_RESERVADA_TO reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    PALABRA_RESERVADA_BY reduce using rule 77 (sumExp -> sumExp sumop mulExp .)
    OPERADOR_MULTIPLICAR shift and go to state 81
    OPERADOR_DIVIDIR shift and go to state 82
    OPERADOR_MODULO shift and go to state 83

    mulop                          shift and go to state 80

state 114

    (81) mulExp -> mulExp mulop unaryExp .

    OPERADOR_MULTIPLICAR reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    OPERADOR_DIVIDIR reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    OPERADOR_MODULO reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    OPERADOR_SUMA   reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    OPERADOR_RESTA  reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    MENOR_IGUAL     reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    MENOR           reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    MAYOR           reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    MAYOR_IGUAL     reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    IGUAL           reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    DISTINTO        reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    PUNTOS_MENOR_PUNTOS reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    PALABRA_RESERVADA_AND reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    PALABRA_RESERVADA_OR reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    SEMICOLON       reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    COMA            reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    PARENTESIS_DERECHO reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    CORCHETE_DERECHO reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    PALABRA_RESERVADA_THEN reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    PALABRA_RESERVADA_DO reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    PALABRA_RESERVADA_TO reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)
    PALABRA_RESERVADA_BY reduce using rule 81 (mulExp -> mulExp mulop unaryExp .)


state 115

    (95) immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .

    OPERADOR_MULTIPLICAR reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    OPERADOR_DIVIDIR reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    OPERADOR_MODULO reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    OPERADOR_SUMA   reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    OPERADOR_RESTA  reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    MENOR_IGUAL     reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    MENOR           reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    MAYOR           reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    MAYOR_IGUAL     reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    IGUAL           reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    DISTINTO        reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PUNTOS_MENOR_PUNTOS reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_AND reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_OR reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    SEMICOLON       reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    COMA            reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PARENTESIS_DERECHO reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    CORCHETE_DERECHO reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_THEN reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_DO reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_TO reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_BY reduce using rule 95 (immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO .)


state 116

    (51) exp -> mutable ASIGNACION . exp
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    mutable                        shift and go to state 86
    exp                            shift and go to state 139
    simpleExp                      shift and go to state 87
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 117

    (52) exp -> mutable SUMA_RESULTADO . exp
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    mutable                        shift and go to state 86
    exp                            shift and go to state 140
    simpleExp                      shift and go to state 87
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 118

    (53) exp -> mutable RESTA_RESULTADO . exp
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    mutable                        shift and go to state 86
    exp                            shift and go to state 141
    simpleExp                      shift and go to state 87
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 119

    (54) exp -> mutable MULTI_RESULTADO . exp
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    mutable                        shift and go to state 86
    exp                            shift and go to state 142
    simpleExp                      shift and go to state 87
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 120

    (55) exp -> mutable DIVI_RESULTADO . exp
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    mutable                        shift and go to state 86
    exp                            shift and go to state 143
    simpleExp                      shift and go to state 87
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 121

    (56) exp -> mutable INCREMENTO .

    PARENTESIS_DERECHO reduce using rule 56 (exp -> mutable INCREMENTO .)
    SEMICOLON       reduce using rule 56 (exp -> mutable INCREMENTO .)
    CORCHETE_DERECHO reduce using rule 56 (exp -> mutable INCREMENTO .)
    COMA            reduce using rule 56 (exp -> mutable INCREMENTO .)


state 122

    (57) exp -> mutable DECREMENTO .

    PARENTESIS_DERECHO reduce using rule 57 (exp -> mutable DECREMENTO .)
    SEMICOLON       reduce using rule 57 (exp -> mutable DECREMENTO .)
    CORCHETE_DERECHO reduce using rule 57 (exp -> mutable DECREMENTO .)
    COMA            reduce using rule 57 (exp -> mutable DECREMENTO .)


state 123

    (94) mutable -> VARIABLE CORCHETE_IZQUIERDO exp . CORCHETE_DERECHO

    CORCHETE_DERECHO shift and go to state 144


state 124

    (98) call -> VARIABLE PARENTESIS_IZQUIERDO args . PARENTESIS_DERECHO

    PARENTESIS_DERECHO shift and go to state 145


state 125

    (99) args -> argList .
    (101) argList -> argList . COMA exp

    PARENTESIS_DERECHO reduce using rule 99 (args -> argList .)
    COMA            shift and go to state 146


state 126

    (100) args -> eps .

    PARENTESIS_DERECHO reduce using rule 100 (args -> eps .)


state 127

    (102) argList -> exp .

    COMA            reduce using rule 102 (argList -> exp .)
    PARENTESIS_DERECHO reduce using rule 102 (argList -> exp .)


state 128

    (35) expStmt -> exp SEMICOLON .

    VARIABLE        reduce using rule 35 (expStmt -> exp SEMICOLON .)
    TIPO_ENTERO     reduce using rule 35 (expStmt -> exp SEMICOLON .)
    PALABRA_RESERVADA_BOOL reduce using rule 35 (expStmt -> exp SEMICOLON .)
    TIPO_CARACTER   reduce using rule 35 (expStmt -> exp SEMICOLON .)
    $end            reduce using rule 35 (expStmt -> exp SEMICOLON .)
    LLAVE_DER       reduce using rule 35 (expStmt -> exp SEMICOLON .)
    SEMICOLON       reduce using rule 35 (expStmt -> exp SEMICOLON .)
    LLAVE_IZQ       reduce using rule 35 (expStmt -> exp SEMICOLON .)
    PALABRA_RESERVADA_IF reduce using rule 35 (expStmt -> exp SEMICOLON .)
    BUCLE_WHILE     reduce using rule 35 (expStmt -> exp SEMICOLON .)
    BUCLE_FOR       reduce using rule 35 (expStmt -> exp SEMICOLON .)
    PALABRA_RESERVADA_RETURN reduce using rule 35 (expStmt -> exp SEMICOLON .)
    PALABRA_RESERVADA_BREAK reduce using rule 35 (expStmt -> exp SEMICOLON .)
    PALABRA_RESERVADA_NOT reduce using rule 35 (expStmt -> exp SEMICOLON .)
    OPERADOR_RESTA  reduce using rule 35 (expStmt -> exp SEMICOLON .)
    OPERADOR_MULTIPLICAR reduce using rule 35 (expStmt -> exp SEMICOLON .)
    OP_TERNARIO     reduce using rule 35 (expStmt -> exp SEMICOLON .)
    PARENTESIS_IZQUIERDO reduce using rule 35 (expStmt -> exp SEMICOLON .)
    NUMERO_ENTERO   reduce using rule 35 (expStmt -> exp SEMICOLON .)
    NUMERO_DECIMAL  reduce using rule 35 (expStmt -> exp SEMICOLON .)
    CARACTER        reduce using rule 35 (expStmt -> exp SEMICOLON .)
    CADENA          reduce using rule 35 (expStmt -> exp SEMICOLON .)
    PALABRA_RESERVADA_TRUE reduce using rule 35 (expStmt -> exp SEMICOLON .)
    PALABRA_RESERVADA_FALSE reduce using rule 35 (expStmt -> exp SEMICOLON .)
    PALABRA_RESERVADA_ELSE reduce using rule 35 (expStmt -> exp SEMICOLON .)


state 129

    (37) compoundStmt -> LLAVE_IZQ localDecls . stmtList LLAVE_DER
    (38) localDecls -> localDecls . scopedVarDecl
    (40) stmtList -> . stmtList stmt
    (41) stmtList -> . eps
    (7) scopedVarDecl -> . PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON
    (8) scopedVarDecl -> . typeSpec varDeclList SEMICOLON
    (109) eps -> .
    (15) typeSpec -> . TIPO_ENTERO
    (16) typeSpec -> . PALABRA_RESERVADA_BOOL
    (17) typeSpec -> . TIPO_CARACTER

    PALABRA_RESERVADA_STATIC shift and go to state 150
    LLAVE_DER       reduce using rule 109 (eps -> .)
    SEMICOLON       reduce using rule 109 (eps -> .)
    LLAVE_IZQ       reduce using rule 109 (eps -> .)
    PALABRA_RESERVADA_IF reduce using rule 109 (eps -> .)
    BUCLE_WHILE     reduce using rule 109 (eps -> .)
    BUCLE_FOR       reduce using rule 109 (eps -> .)
    PALABRA_RESERVADA_RETURN reduce using rule 109 (eps -> .)
    PALABRA_RESERVADA_BREAK reduce using rule 109 (eps -> .)
    VARIABLE        reduce using rule 109 (eps -> .)
    PALABRA_RESERVADA_NOT reduce using rule 109 (eps -> .)
    OPERADOR_RESTA  reduce using rule 109 (eps -> .)
    OPERADOR_MULTIPLICAR reduce using rule 109 (eps -> .)
    OP_TERNARIO     reduce using rule 109 (eps -> .)
    PARENTESIS_IZQUIERDO reduce using rule 109 (eps -> .)
    NUMERO_ENTERO   reduce using rule 109 (eps -> .)
    NUMERO_DECIMAL  reduce using rule 109 (eps -> .)
    CARACTER        reduce using rule 109 (eps -> .)
    CADENA          reduce using rule 109 (eps -> .)
    PALABRA_RESERVADA_TRUE reduce using rule 109 (eps -> .)
    PALABRA_RESERVADA_FALSE reduce using rule 109 (eps -> .)
    TIPO_ENTERO     shift and go to state 8
    PALABRA_RESERVADA_BOOL shift and go to state 9
    TIPO_CARACTER   shift and go to state 10

    stmtList                       shift and go to state 147
    scopedVarDecl                  shift and go to state 148
    eps                            shift and go to state 149
    typeSpec                       shift and go to state 151

state 130

    (39) localDecls -> eps .

    PALABRA_RESERVADA_STATIC reduce using rule 39 (localDecls -> eps .)
    TIPO_ENTERO     reduce using rule 39 (localDecls -> eps .)
    PALABRA_RESERVADA_BOOL reduce using rule 39 (localDecls -> eps .)
    TIPO_CARACTER   reduce using rule 39 (localDecls -> eps .)
    LLAVE_DER       reduce using rule 39 (localDecls -> eps .)
    SEMICOLON       reduce using rule 39 (localDecls -> eps .)
    LLAVE_IZQ       reduce using rule 39 (localDecls -> eps .)
    PALABRA_RESERVADA_IF reduce using rule 39 (localDecls -> eps .)
    BUCLE_WHILE     reduce using rule 39 (localDecls -> eps .)
    BUCLE_FOR       reduce using rule 39 (localDecls -> eps .)
    PALABRA_RESERVADA_RETURN reduce using rule 39 (localDecls -> eps .)
    PALABRA_RESERVADA_BREAK reduce using rule 39 (localDecls -> eps .)
    VARIABLE        reduce using rule 39 (localDecls -> eps .)
    PALABRA_RESERVADA_NOT reduce using rule 39 (localDecls -> eps .)
    OPERADOR_RESTA  reduce using rule 39 (localDecls -> eps .)
    OPERADOR_MULTIPLICAR reduce using rule 39 (localDecls -> eps .)
    OP_TERNARIO     reduce using rule 39 (localDecls -> eps .)
    PARENTESIS_IZQUIERDO reduce using rule 39 (localDecls -> eps .)
    NUMERO_ENTERO   reduce using rule 39 (localDecls -> eps .)
    NUMERO_DECIMAL  reduce using rule 39 (localDecls -> eps .)
    CARACTER        reduce using rule 39 (localDecls -> eps .)
    CADENA          reduce using rule 39 (localDecls -> eps .)
    PALABRA_RESERVADA_TRUE reduce using rule 39 (localDecls -> eps .)
    PALABRA_RESERVADA_FALSE reduce using rule 39 (localDecls -> eps .)


state 131

    (42) selectStmt -> PALABRA_RESERVADA_IF simpleExp . PALABRA_RESERVADA_THEN stmt
    (43) selectStmt -> PALABRA_RESERVADA_IF simpleExp . PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (59) simpleExp -> simpleExp . PALABRA_RESERVADA_OR andExp

    PALABRA_RESERVADA_THEN shift and go to state 152
    PALABRA_RESERVADA_OR shift and go to state 64


state 132

    (44) iterStmt -> BUCLE_WHILE simpleExp . PALABRA_RESERVADA_DO stmt
    (59) simpleExp -> simpleExp . PALABRA_RESERVADA_OR andExp

    PALABRA_RESERVADA_DO shift and go to state 153
    PALABRA_RESERVADA_OR shift and go to state 64


state 133

    (45) iterStmt -> BUCLE_FOR VARIABLE . ASIGNACION iterRange PALABRA_RESERVADA_DO stmt

    ASIGNACION      shift and go to state 154


state 134

    (48) returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .

    VARIABLE        reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    TIPO_ENTERO     reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PALABRA_RESERVADA_BOOL reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    TIPO_CARACTER   reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    $end            reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    LLAVE_DER       reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    SEMICOLON       reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    LLAVE_IZQ       reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PALABRA_RESERVADA_IF reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    BUCLE_WHILE     reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    BUCLE_FOR       reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PALABRA_RESERVADA_RETURN reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PALABRA_RESERVADA_BREAK reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PALABRA_RESERVADA_NOT reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    OPERADOR_RESTA  reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    OPERADOR_MULTIPLICAR reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    OP_TERNARIO     reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PARENTESIS_IZQUIERDO reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    NUMERO_ENTERO   reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    NUMERO_DECIMAL  reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    CARACTER        reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    CADENA          reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PALABRA_RESERVADA_TRUE reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PALABRA_RESERVADA_FALSE reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)
    PALABRA_RESERVADA_ELSE reduce using rule 48 (returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON .)


state 135

    (49) returnStmt -> PALABRA_RESERVADA_RETURN exp . SEMICOLON

    SEMICOLON       shift and go to state 155


state 136

    (50) breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .

    VARIABLE        reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    TIPO_ENTERO     reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PALABRA_RESERVADA_BOOL reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    TIPO_CARACTER   reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    $end            reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    LLAVE_DER       reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    SEMICOLON       reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    LLAVE_IZQ       reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PALABRA_RESERVADA_IF reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    BUCLE_WHILE     reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    BUCLE_FOR       reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PALABRA_RESERVADA_RETURN reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PALABRA_RESERVADA_BREAK reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PALABRA_RESERVADA_NOT reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    OPERADOR_RESTA  reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    OPERADOR_MULTIPLICAR reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    OP_TERNARIO     reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PARENTESIS_IZQUIERDO reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    NUMERO_ENTERO   reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    NUMERO_DECIMAL  reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    CARACTER        reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    CADENA          reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PALABRA_RESERVADA_TRUE reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PALABRA_RESERVADA_FALSE reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)
    PALABRA_RESERVADA_ELSE reduce using rule 50 (breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON .)


state 137

    (25) parmIdList -> parmIdList COMA parmId .

    COMA            reduce using rule 25 (parmIdList -> parmIdList COMA parmId .)
    SEMICOLON       reduce using rule 25 (parmIdList -> parmIdList COMA parmId .)
    PARENTESIS_DERECHO reduce using rule 25 (parmIdList -> parmIdList COMA parmId .)


state 138

    (28) parmId -> VARIABLE CORCHETE_IZQUIERDO CORCHETE_DERECHO .

    COMA            reduce using rule 28 (parmId -> VARIABLE CORCHETE_IZQUIERDO CORCHETE_DERECHO .)
    SEMICOLON       reduce using rule 28 (parmId -> VARIABLE CORCHETE_IZQUIERDO CORCHETE_DERECHO .)
    PARENTESIS_DERECHO reduce using rule 28 (parmId -> VARIABLE CORCHETE_IZQUIERDO CORCHETE_DERECHO .)


state 139

    (51) exp -> mutable ASIGNACION exp .

    PARENTESIS_DERECHO reduce using rule 51 (exp -> mutable ASIGNACION exp .)
    SEMICOLON       reduce using rule 51 (exp -> mutable ASIGNACION exp .)
    CORCHETE_DERECHO reduce using rule 51 (exp -> mutable ASIGNACION exp .)
    COMA            reduce using rule 51 (exp -> mutable ASIGNACION exp .)


state 140

    (52) exp -> mutable SUMA_RESULTADO exp .

    PARENTESIS_DERECHO reduce using rule 52 (exp -> mutable SUMA_RESULTADO exp .)
    SEMICOLON       reduce using rule 52 (exp -> mutable SUMA_RESULTADO exp .)
    CORCHETE_DERECHO reduce using rule 52 (exp -> mutable SUMA_RESULTADO exp .)
    COMA            reduce using rule 52 (exp -> mutable SUMA_RESULTADO exp .)


state 141

    (53) exp -> mutable RESTA_RESULTADO exp .

    PARENTESIS_DERECHO reduce using rule 53 (exp -> mutable RESTA_RESULTADO exp .)
    SEMICOLON       reduce using rule 53 (exp -> mutable RESTA_RESULTADO exp .)
    CORCHETE_DERECHO reduce using rule 53 (exp -> mutable RESTA_RESULTADO exp .)
    COMA            reduce using rule 53 (exp -> mutable RESTA_RESULTADO exp .)


state 142

    (54) exp -> mutable MULTI_RESULTADO exp .

    PARENTESIS_DERECHO reduce using rule 54 (exp -> mutable MULTI_RESULTADO exp .)
    SEMICOLON       reduce using rule 54 (exp -> mutable MULTI_RESULTADO exp .)
    CORCHETE_DERECHO reduce using rule 54 (exp -> mutable MULTI_RESULTADO exp .)
    COMA            reduce using rule 54 (exp -> mutable MULTI_RESULTADO exp .)


state 143

    (55) exp -> mutable DIVI_RESULTADO exp .

    PARENTESIS_DERECHO reduce using rule 55 (exp -> mutable DIVI_RESULTADO exp .)
    SEMICOLON       reduce using rule 55 (exp -> mutable DIVI_RESULTADO exp .)
    CORCHETE_DERECHO reduce using rule 55 (exp -> mutable DIVI_RESULTADO exp .)
    COMA            reduce using rule 55 (exp -> mutable DIVI_RESULTADO exp .)


state 144

    (94) mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .

    OPERADOR_MULTIPLICAR reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    OPERADOR_DIVIDIR reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    OPERADOR_MODULO reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    OPERADOR_SUMA   reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    OPERADOR_RESTA  reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    MENOR_IGUAL     reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    MENOR           reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    MAYOR           reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    MAYOR_IGUAL     reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    IGUAL           reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    DISTINTO        reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PUNTOS_MENOR_PUNTOS reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PALABRA_RESERVADA_AND reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PALABRA_RESERVADA_OR reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    SEMICOLON       reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    COMA            reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PARENTESIS_DERECHO reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    CORCHETE_DERECHO reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PALABRA_RESERVADA_THEN reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PALABRA_RESERVADA_DO reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PALABRA_RESERVADA_TO reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    PALABRA_RESERVADA_BY reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    ASIGNACION      reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    SUMA_RESULTADO  reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    RESTA_RESULTADO reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    MULTI_RESULTADO reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    DIVI_RESULTADO  reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    INCREMENTO      reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)
    DECREMENTO      reduce using rule 94 (mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO .)


state 145

    (98) call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .

    OPERADOR_MULTIPLICAR reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    OPERADOR_DIVIDIR reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    OPERADOR_MODULO reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    OPERADOR_SUMA   reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    OPERADOR_RESTA  reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    MENOR_IGUAL     reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    MENOR           reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    MAYOR           reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    MAYOR_IGUAL     reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    IGUAL           reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    DISTINTO        reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PUNTOS_MAYOR_PUNTOS reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PUNTOS_MENOR_PUNTOS reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_AND reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_OR reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    SEMICOLON       reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    COMA            reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PARENTESIS_DERECHO reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    CORCHETE_DERECHO reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_THEN reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_DO reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_TO reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)
    PALABRA_RESERVADA_BY reduce using rule 98 (call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO .)


state 146

    (101) argList -> argList COMA . exp
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    exp                            shift and go to state 156
    mutable                        shift and go to state 86
    simpleExp                      shift and go to state 87
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 147

    (37) compoundStmt -> LLAVE_IZQ localDecls stmtList . LLAVE_DER
    (40) stmtList -> stmtList . stmt
    (29) stmt -> . expStmt
    (30) stmt -> . compoundStmt
    (31) stmt -> . selectStmt
    (32) stmt -> . iterStmt
    (33) stmt -> . returnStmt
    (34) stmt -> . breakStmt
    (35) expStmt -> . exp SEMICOLON
    (36) expStmt -> . SEMICOLON
    (37) compoundStmt -> . LLAVE_IZQ localDecls stmtList LLAVE_DER
    (42) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt
    (43) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (44) iterStmt -> . BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt
    (45) iterStmt -> . BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt
    (48) returnStmt -> . PALABRA_RESERVADA_RETURN SEMICOLON
    (49) returnStmt -> . PALABRA_RESERVADA_RETURN exp SEMICOLON
    (50) breakStmt -> . PALABRA_RESERVADA_BREAK SEMICOLON
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    LLAVE_DER       shift and go to state 157
    SEMICOLON       shift and go to state 98
    LLAVE_IZQ       shift and go to state 99
    PALABRA_RESERVADA_IF shift and go to state 100
    BUCLE_WHILE     shift and go to state 101
    BUCLE_FOR       shift and go to state 102
    PALABRA_RESERVADA_RETURN shift and go to state 103
    PALABRA_RESERVADA_BREAK shift and go to state 104
    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    stmt                           shift and go to state 158
    expStmt                        shift and go to state 91
    compoundStmt                   shift and go to state 92
    selectStmt                     shift and go to state 93
    iterStmt                       shift and go to state 94
    returnStmt                     shift and go to state 95
    breakStmt                      shift and go to state 96
    exp                            shift and go to state 97
    simpleExp                      shift and go to state 87
    mutable                        shift and go to state 86
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 148

    (38) localDecls -> localDecls scopedVarDecl .

    PALABRA_RESERVADA_STATIC reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    TIPO_ENTERO     reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    PALABRA_RESERVADA_BOOL reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    TIPO_CARACTER   reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    LLAVE_DER       reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    SEMICOLON       reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    LLAVE_IZQ       reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    PALABRA_RESERVADA_IF reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    BUCLE_WHILE     reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    BUCLE_FOR       reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    PALABRA_RESERVADA_RETURN reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    PALABRA_RESERVADA_BREAK reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    VARIABLE        reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    PALABRA_RESERVADA_NOT reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    OPERADOR_RESTA  reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    OPERADOR_MULTIPLICAR reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    OP_TERNARIO     reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    PARENTESIS_IZQUIERDO reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    NUMERO_ENTERO   reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    NUMERO_DECIMAL  reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    CARACTER        reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    CADENA          reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    PALABRA_RESERVADA_TRUE reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)
    PALABRA_RESERVADA_FALSE reduce using rule 38 (localDecls -> localDecls scopedVarDecl .)


state 149

    (41) stmtList -> eps .

    LLAVE_DER       reduce using rule 41 (stmtList -> eps .)
    SEMICOLON       reduce using rule 41 (stmtList -> eps .)
    LLAVE_IZQ       reduce using rule 41 (stmtList -> eps .)
    PALABRA_RESERVADA_IF reduce using rule 41 (stmtList -> eps .)
    BUCLE_WHILE     reduce using rule 41 (stmtList -> eps .)
    BUCLE_FOR       reduce using rule 41 (stmtList -> eps .)
    PALABRA_RESERVADA_RETURN reduce using rule 41 (stmtList -> eps .)
    PALABRA_RESERVADA_BREAK reduce using rule 41 (stmtList -> eps .)
    VARIABLE        reduce using rule 41 (stmtList -> eps .)
    PALABRA_RESERVADA_NOT reduce using rule 41 (stmtList -> eps .)
    OPERADOR_RESTA  reduce using rule 41 (stmtList -> eps .)
    OPERADOR_MULTIPLICAR reduce using rule 41 (stmtList -> eps .)
    OP_TERNARIO     reduce using rule 41 (stmtList -> eps .)
    PARENTESIS_IZQUIERDO reduce using rule 41 (stmtList -> eps .)
    NUMERO_ENTERO   reduce using rule 41 (stmtList -> eps .)
    NUMERO_DECIMAL  reduce using rule 41 (stmtList -> eps .)
    CARACTER        reduce using rule 41 (stmtList -> eps .)
    CADENA          reduce using rule 41 (stmtList -> eps .)
    PALABRA_RESERVADA_TRUE reduce using rule 41 (stmtList -> eps .)
    PALABRA_RESERVADA_FALSE reduce using rule 41 (stmtList -> eps .)


state 150

    (7) scopedVarDecl -> PALABRA_RESERVADA_STATIC . typeSpec varDeclList SEMICOLON
    (15) typeSpec -> . TIPO_ENTERO
    (16) typeSpec -> . PALABRA_RESERVADA_BOOL
    (17) typeSpec -> . TIPO_CARACTER

    TIPO_ENTERO     shift and go to state 8
    PALABRA_RESERVADA_BOOL shift and go to state 9
    TIPO_CARACTER   shift and go to state 10

    typeSpec                       shift and go to state 159

state 151

    (8) scopedVarDecl -> typeSpec . varDeclList SEMICOLON
    (9) varDeclList -> . varDeclList COMA varDeclInit
    (10) varDeclList -> . varDeclInit
    (11) varDeclInit -> . varDeclId
    (12) varDeclInit -> . varDeclId COLON simpleExp
    (13) varDeclId -> . VARIABLE
    (14) varDeclId -> . VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO

    VARIABLE        shift and go to state 28

    varDeclList                    shift and go to state 160
    varDeclInit                    shift and go to state 14
    varDeclId                      shift and go to state 15

state 152

    (42) selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN . stmt
    (43) selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN . stmt PALABRA_RESERVADA_ELSE stmt
    (29) stmt -> . expStmt
    (30) stmt -> . compoundStmt
    (31) stmt -> . selectStmt
    (32) stmt -> . iterStmt
    (33) stmt -> . returnStmt
    (34) stmt -> . breakStmt
    (35) expStmt -> . exp SEMICOLON
    (36) expStmt -> . SEMICOLON
    (37) compoundStmt -> . LLAVE_IZQ localDecls stmtList LLAVE_DER
    (42) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt
    (43) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (44) iterStmt -> . BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt
    (45) iterStmt -> . BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt
    (48) returnStmt -> . PALABRA_RESERVADA_RETURN SEMICOLON
    (49) returnStmt -> . PALABRA_RESERVADA_RETURN exp SEMICOLON
    (50) breakStmt -> . PALABRA_RESERVADA_BREAK SEMICOLON
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    SEMICOLON       shift and go to state 98
    LLAVE_IZQ       shift and go to state 99
    PALABRA_RESERVADA_IF shift and go to state 100
    BUCLE_WHILE     shift and go to state 101
    BUCLE_FOR       shift and go to state 102
    PALABRA_RESERVADA_RETURN shift and go to state 103
    PALABRA_RESERVADA_BREAK shift and go to state 104
    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    simpleExp                      shift and go to state 87
    stmt                           shift and go to state 161
    expStmt                        shift and go to state 91
    compoundStmt                   shift and go to state 92
    selectStmt                     shift and go to state 93
    iterStmt                       shift and go to state 94
    returnStmt                     shift and go to state 95
    breakStmt                      shift and go to state 96
    exp                            shift and go to state 97
    mutable                        shift and go to state 86
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 153

    (44) iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO . stmt
    (29) stmt -> . expStmt
    (30) stmt -> . compoundStmt
    (31) stmt -> . selectStmt
    (32) stmt -> . iterStmt
    (33) stmt -> . returnStmt
    (34) stmt -> . breakStmt
    (35) expStmt -> . exp SEMICOLON
    (36) expStmt -> . SEMICOLON
    (37) compoundStmt -> . LLAVE_IZQ localDecls stmtList LLAVE_DER
    (42) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt
    (43) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (44) iterStmt -> . BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt
    (45) iterStmt -> . BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt
    (48) returnStmt -> . PALABRA_RESERVADA_RETURN SEMICOLON
    (49) returnStmt -> . PALABRA_RESERVADA_RETURN exp SEMICOLON
    (50) breakStmt -> . PALABRA_RESERVADA_BREAK SEMICOLON
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    SEMICOLON       shift and go to state 98
    LLAVE_IZQ       shift and go to state 99
    PALABRA_RESERVADA_IF shift and go to state 100
    BUCLE_WHILE     shift and go to state 101
    BUCLE_FOR       shift and go to state 102
    PALABRA_RESERVADA_RETURN shift and go to state 103
    PALABRA_RESERVADA_BREAK shift and go to state 104
    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    simpleExp                      shift and go to state 87
    stmt                           shift and go to state 162
    expStmt                        shift and go to state 91
    compoundStmt                   shift and go to state 92
    selectStmt                     shift and go to state 93
    iterStmt                       shift and go to state 94
    returnStmt                     shift and go to state 95
    breakStmt                      shift and go to state 96
    exp                            shift and go to state 97
    mutable                        shift and go to state 86
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 154

    (45) iterStmt -> BUCLE_FOR VARIABLE ASIGNACION . iterRange PALABRA_RESERVADA_DO stmt
    (46) iterRange -> . simpleExp PALABRA_RESERVADA_TO simpleExp
    (47) iterRange -> . simpleExp PALABRA_RESERVADA_TO simpleExp PALABRA_RESERVADA_BY simpleExp
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    VARIABLE        shift and go to state 50
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    iterRange                      shift and go to state 163
    simpleExp                      shift and go to state 164
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    mutable                        shift and go to state 46
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 155

    (49) returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .

    VARIABLE        reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    TIPO_ENTERO     reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PALABRA_RESERVADA_BOOL reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    TIPO_CARACTER   reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    $end            reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    LLAVE_DER       reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    SEMICOLON       reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    LLAVE_IZQ       reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PALABRA_RESERVADA_IF reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    BUCLE_WHILE     reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    BUCLE_FOR       reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PALABRA_RESERVADA_RETURN reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PALABRA_RESERVADA_BREAK reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PALABRA_RESERVADA_NOT reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    OPERADOR_RESTA  reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    OPERADOR_MULTIPLICAR reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    OP_TERNARIO     reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PARENTESIS_IZQUIERDO reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    NUMERO_ENTERO   reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    NUMERO_DECIMAL  reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    CARACTER        reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    CADENA          reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PALABRA_RESERVADA_TRUE reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PALABRA_RESERVADA_FALSE reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)
    PALABRA_RESERVADA_ELSE reduce using rule 49 (returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON .)


state 156

    (101) argList -> argList COMA exp .

    COMA            reduce using rule 101 (argList -> argList COMA exp .)
    PARENTESIS_DERECHO reduce using rule 101 (argList -> argList COMA exp .)


state 157

    (37) compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .

    VARIABLE        reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    TIPO_ENTERO     reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PALABRA_RESERVADA_BOOL reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    TIPO_CARACTER   reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    $end            reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    LLAVE_DER       reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    SEMICOLON       reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    LLAVE_IZQ       reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PALABRA_RESERVADA_IF reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    BUCLE_WHILE     reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    BUCLE_FOR       reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PALABRA_RESERVADA_RETURN reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PALABRA_RESERVADA_BREAK reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PALABRA_RESERVADA_NOT reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    OPERADOR_RESTA  reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    OPERADOR_MULTIPLICAR reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    OP_TERNARIO     reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PARENTESIS_IZQUIERDO reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    NUMERO_ENTERO   reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    NUMERO_DECIMAL  reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    CARACTER        reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    CADENA          reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PALABRA_RESERVADA_TRUE reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PALABRA_RESERVADA_FALSE reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)
    PALABRA_RESERVADA_ELSE reduce using rule 37 (compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER .)


state 158

    (40) stmtList -> stmtList stmt .

    LLAVE_DER       reduce using rule 40 (stmtList -> stmtList stmt .)
    SEMICOLON       reduce using rule 40 (stmtList -> stmtList stmt .)
    LLAVE_IZQ       reduce using rule 40 (stmtList -> stmtList stmt .)
    PALABRA_RESERVADA_IF reduce using rule 40 (stmtList -> stmtList stmt .)
    BUCLE_WHILE     reduce using rule 40 (stmtList -> stmtList stmt .)
    BUCLE_FOR       reduce using rule 40 (stmtList -> stmtList stmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 40 (stmtList -> stmtList stmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 40 (stmtList -> stmtList stmt .)
    VARIABLE        reduce using rule 40 (stmtList -> stmtList stmt .)
    PALABRA_RESERVADA_NOT reduce using rule 40 (stmtList -> stmtList stmt .)
    OPERADOR_RESTA  reduce using rule 40 (stmtList -> stmtList stmt .)
    OPERADOR_MULTIPLICAR reduce using rule 40 (stmtList -> stmtList stmt .)
    OP_TERNARIO     reduce using rule 40 (stmtList -> stmtList stmt .)
    PARENTESIS_IZQUIERDO reduce using rule 40 (stmtList -> stmtList stmt .)
    NUMERO_ENTERO   reduce using rule 40 (stmtList -> stmtList stmt .)
    NUMERO_DECIMAL  reduce using rule 40 (stmtList -> stmtList stmt .)
    CARACTER        reduce using rule 40 (stmtList -> stmtList stmt .)
    CADENA          reduce using rule 40 (stmtList -> stmtList stmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 40 (stmtList -> stmtList stmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 40 (stmtList -> stmtList stmt .)


state 159

    (7) scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec . varDeclList SEMICOLON
    (9) varDeclList -> . varDeclList COMA varDeclInit
    (10) varDeclList -> . varDeclInit
    (11) varDeclInit -> . varDeclId
    (12) varDeclInit -> . varDeclId COLON simpleExp
    (13) varDeclId -> . VARIABLE
    (14) varDeclId -> . VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO

    VARIABLE        shift and go to state 28

    varDeclList                    shift and go to state 165
    varDeclInit                    shift and go to state 14
    varDeclId                      shift and go to state 15

state 160

    (8) scopedVarDecl -> typeSpec varDeclList . SEMICOLON
    (9) varDeclList -> varDeclList . COMA varDeclInit

    SEMICOLON       shift and go to state 166
    COMA            shift and go to state 18


state 161

    (42) selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .
    (43) selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt . PALABRA_RESERVADA_ELSE stmt

  ! shift/reduce conflict for PALABRA_RESERVADA_ELSE resolved as shift
    VARIABLE        reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    TIPO_ENTERO     reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    TIPO_CARACTER   reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    $end            reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    LLAVE_DER       reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    SEMICOLON       reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    LLAVE_IZQ       reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PALABRA_RESERVADA_IF reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    BUCLE_WHILE     reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    BUCLE_FOR       reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PALABRA_RESERVADA_NOT reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    OPERADOR_RESTA  reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    OPERADOR_MULTIPLICAR reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    OP_TERNARIO     reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PARENTESIS_IZQUIERDO reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    NUMERO_ENTERO   reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    NUMERO_DECIMAL  reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    CARACTER        reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    CADENA          reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .)
    PALABRA_RESERVADA_ELSE shift and go to state 167

  ! PALABRA_RESERVADA_ELSE [ reduce using rule 42 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt .) ]


state 162

    (44) iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .

    VARIABLE        reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    TIPO_ENTERO     reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    TIPO_CARACTER   reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    $end            reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    LLAVE_DER       reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    SEMICOLON       reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    LLAVE_IZQ       reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_IF reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    BUCLE_WHILE     reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    BUCLE_FOR       reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_NOT reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    OPERADOR_RESTA  reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    OPERADOR_MULTIPLICAR reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    OP_TERNARIO     reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PARENTESIS_IZQUIERDO reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    NUMERO_ENTERO   reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    NUMERO_DECIMAL  reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    CARACTER        reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    CADENA          reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 44 (iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt .)


state 163

    (45) iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange . PALABRA_RESERVADA_DO stmt

    PALABRA_RESERVADA_DO shift and go to state 168


state 164

    (46) iterRange -> simpleExp . PALABRA_RESERVADA_TO simpleExp
    (47) iterRange -> simpleExp . PALABRA_RESERVADA_TO simpleExp PALABRA_RESERVADA_BY simpleExp
    (59) simpleExp -> simpleExp . PALABRA_RESERVADA_OR andExp

    PALABRA_RESERVADA_TO shift and go to state 169
    PALABRA_RESERVADA_OR shift and go to state 64


state 165

    (7) scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList . SEMICOLON
    (9) varDeclList -> varDeclList . COMA varDeclInit

    SEMICOLON       shift and go to state 170
    COMA            shift and go to state 18


state 166

    (8) scopedVarDecl -> typeSpec varDeclList SEMICOLON .

    PALABRA_RESERVADA_STATIC reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    TIPO_ENTERO     reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_BOOL reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    TIPO_CARACTER   reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    LLAVE_DER       reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    SEMICOLON       reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    LLAVE_IZQ       reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_IF reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    BUCLE_WHILE     reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    BUCLE_FOR       reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_RETURN reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_BREAK reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    VARIABLE        reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_NOT reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    OPERADOR_RESTA  reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    OPERADOR_MULTIPLICAR reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    OP_TERNARIO     reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    PARENTESIS_IZQUIERDO reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    NUMERO_ENTERO   reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    NUMERO_DECIMAL  reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    CARACTER        reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    CADENA          reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_TRUE reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_FALSE reduce using rule 8 (scopedVarDecl -> typeSpec varDeclList SEMICOLON .)


state 167

    (43) selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE . stmt
    (29) stmt -> . expStmt
    (30) stmt -> . compoundStmt
    (31) stmt -> . selectStmt
    (32) stmt -> . iterStmt
    (33) stmt -> . returnStmt
    (34) stmt -> . breakStmt
    (35) expStmt -> . exp SEMICOLON
    (36) expStmt -> . SEMICOLON
    (37) compoundStmt -> . LLAVE_IZQ localDecls stmtList LLAVE_DER
    (42) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt
    (43) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (44) iterStmt -> . BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt
    (45) iterStmt -> . BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt
    (48) returnStmt -> . PALABRA_RESERVADA_RETURN SEMICOLON
    (49) returnStmt -> . PALABRA_RESERVADA_RETURN exp SEMICOLON
    (50) breakStmt -> . PALABRA_RESERVADA_BREAK SEMICOLON
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    SEMICOLON       shift and go to state 98
    LLAVE_IZQ       shift and go to state 99
    PALABRA_RESERVADA_IF shift and go to state 100
    BUCLE_WHILE     shift and go to state 101
    BUCLE_FOR       shift and go to state 102
    PALABRA_RESERVADA_RETURN shift and go to state 103
    PALABRA_RESERVADA_BREAK shift and go to state 104
    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    simpleExp                      shift and go to state 87
    stmt                           shift and go to state 171
    expStmt                        shift and go to state 91
    compoundStmt                   shift and go to state 92
    selectStmt                     shift and go to state 93
    iterStmt                       shift and go to state 94
    returnStmt                     shift and go to state 95
    breakStmt                      shift and go to state 96
    exp                            shift and go to state 97
    mutable                        shift and go to state 86
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 168

    (45) iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO . stmt
    (29) stmt -> . expStmt
    (30) stmt -> . compoundStmt
    (31) stmt -> . selectStmt
    (32) stmt -> . iterStmt
    (33) stmt -> . returnStmt
    (34) stmt -> . breakStmt
    (35) expStmt -> . exp SEMICOLON
    (36) expStmt -> . SEMICOLON
    (37) compoundStmt -> . LLAVE_IZQ localDecls stmtList LLAVE_DER
    (42) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt
    (43) selectStmt -> . PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt
    (44) iterStmt -> . BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt
    (45) iterStmt -> . BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt
    (48) returnStmt -> . PALABRA_RESERVADA_RETURN SEMICOLON
    (49) returnStmt -> . PALABRA_RESERVADA_RETURN exp SEMICOLON
    (50) breakStmt -> . PALABRA_RESERVADA_BREAK SEMICOLON
    (51) exp -> . mutable ASIGNACION exp
    (52) exp -> . mutable SUMA_RESULTADO exp
    (53) exp -> . mutable RESTA_RESULTADO exp
    (54) exp -> . mutable MULTI_RESULTADO exp
    (55) exp -> . mutable DIVI_RESULTADO exp
    (56) exp -> . mutable INCREMENTO
    (57) exp -> . mutable DECREMENTO
    (58) exp -> . simpleExp
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    SEMICOLON       shift and go to state 98
    LLAVE_IZQ       shift and go to state 99
    PALABRA_RESERVADA_IF shift and go to state 100
    BUCLE_WHILE     shift and go to state 101
    BUCLE_FOR       shift and go to state 102
    PALABRA_RESERVADA_RETURN shift and go to state 103
    PALABRA_RESERVADA_BREAK shift and go to state 104
    VARIABLE        shift and go to state 50
    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    stmt                           shift and go to state 172
    expStmt                        shift and go to state 91
    compoundStmt                   shift and go to state 92
    selectStmt                     shift and go to state 93
    iterStmt                       shift and go to state 94
    returnStmt                     shift and go to state 95
    breakStmt                      shift and go to state 96
    exp                            shift and go to state 97
    simpleExp                      shift and go to state 87
    mutable                        shift and go to state 86
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 169

    (46) iterRange -> simpleExp PALABRA_RESERVADA_TO . simpleExp
    (47) iterRange -> simpleExp PALABRA_RESERVADA_TO . simpleExp PALABRA_RESERVADA_BY simpleExp
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    VARIABLE        shift and go to state 50
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    simpleExp                      shift and go to state 173
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    mutable                        shift and go to state 46
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 170

    (7) scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .

    PALABRA_RESERVADA_STATIC reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    TIPO_ENTERO     reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_BOOL reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    TIPO_CARACTER   reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    LLAVE_DER       reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    SEMICOLON       reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    LLAVE_IZQ       reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_IF reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    BUCLE_WHILE     reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    BUCLE_FOR       reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_RETURN reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_BREAK reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    VARIABLE        reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_NOT reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    OPERADOR_RESTA  reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    OPERADOR_MULTIPLICAR reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    OP_TERNARIO     reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    PARENTESIS_IZQUIERDO reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    NUMERO_ENTERO   reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    NUMERO_DECIMAL  reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    CARACTER        reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    CADENA          reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_TRUE reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)
    PALABRA_RESERVADA_FALSE reduce using rule 7 (scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON .)


state 171

    (43) selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .

    VARIABLE        reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    TIPO_ENTERO     reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    TIPO_CARACTER   reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    $end            reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    LLAVE_DER       reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    SEMICOLON       reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    LLAVE_IZQ       reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PALABRA_RESERVADA_IF reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    BUCLE_WHILE     reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    BUCLE_FOR       reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PALABRA_RESERVADA_NOT reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    OPERADOR_RESTA  reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    OPERADOR_MULTIPLICAR reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    OP_TERNARIO     reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PARENTESIS_IZQUIERDO reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    NUMERO_ENTERO   reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    NUMERO_DECIMAL  reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    CARACTER        reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    CADENA          reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 43 (selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt .)


state 172

    (45) iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .

    VARIABLE        reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    TIPO_ENTERO     reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_BOOL reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    TIPO_CARACTER   reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    $end            reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    LLAVE_DER       reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    SEMICOLON       reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    LLAVE_IZQ       reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_IF reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    BUCLE_WHILE     reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    BUCLE_FOR       reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_RETURN reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_BREAK reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_NOT reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    OPERADOR_RESTA  reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    OPERADOR_MULTIPLICAR reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    OP_TERNARIO     reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PARENTESIS_IZQUIERDO reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    NUMERO_ENTERO   reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    NUMERO_DECIMAL  reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    CARACTER        reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    CADENA          reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_TRUE reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_FALSE reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)
    PALABRA_RESERVADA_ELSE reduce using rule 45 (iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt .)


state 173

    (46) iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp .
    (47) iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp . PALABRA_RESERVADA_BY simpleExp
    (59) simpleExp -> simpleExp . PALABRA_RESERVADA_OR andExp

    PALABRA_RESERVADA_DO reduce using rule 46 (iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp .)
    PALABRA_RESERVADA_BY shift and go to state 174
    PALABRA_RESERVADA_OR shift and go to state 64


state 174

    (47) iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp PALABRA_RESERVADA_BY . simpleExp
    (59) simpleExp -> . simpleExp PALABRA_RESERVADA_OR andExp
    (60) simpleExp -> . andExp
    (61) andExp -> . andExp PALABRA_RESERVADA_AND unaryRelExp
    (62) andExp -> . unaryRelExp
    (63) unaryRelExp -> . PALABRA_RESERVADA_NOT unaryRelExp
    (64) unaryRelExp -> . relExp
    (65) relExp -> . minmaxExp relop minmaxExp
    (66) relExp -> . minmaxExp
    (73) minmaxExp -> . minmaxExp minmaxop sumExp
    (74) minmaxExp -> . sumExp
    (77) sumExp -> . sumExp sumop mulExp
    (78) sumExp -> . mulExp
    (81) mulExp -> . mulExp mulop unaryExp
    (82) mulExp -> . unaryExp
    (86) unaryExp -> . unaryop unaryExp
    (87) unaryExp -> . factor
    (88) unaryop -> . OPERADOR_RESTA
    (89) unaryop -> . OPERADOR_MULTIPLICAR
    (90) unaryop -> . OP_TERNARIO
    (91) factor -> . immutable
    (92) factor -> . mutable
    (95) immutable -> . PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO
    (96) immutable -> . call
    (97) immutable -> . constant
    (93) mutable -> . VARIABLE
    (94) mutable -> . VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO
    (98) call -> . VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO
    (103) constant -> . NUMERO_ENTERO
    (104) constant -> . NUMERO_DECIMAL
    (105) constant -> . CARACTER
    (106) constant -> . CADENA
    (107) constant -> . PALABRA_RESERVADA_TRUE
    (108) constant -> . PALABRA_RESERVADA_FALSE

    PALABRA_RESERVADA_NOT shift and go to state 34
    OPERADOR_RESTA  shift and go to state 42
    OPERADOR_MULTIPLICAR shift and go to state 43
    OP_TERNARIO     shift and go to state 44
    PARENTESIS_IZQUIERDO shift and go to state 47
    VARIABLE        shift and go to state 50
    NUMERO_ENTERO   shift and go to state 51
    NUMERO_DECIMAL  shift and go to state 52
    CARACTER        shift and go to state 53
    CADENA          shift and go to state 54
    PALABRA_RESERVADA_TRUE shift and go to state 55
    PALABRA_RESERVADA_FALSE shift and go to state 56

    simpleExp                      shift and go to state 175
    andExp                         shift and go to state 32
    unaryRelExp                    shift and go to state 33
    relExp                         shift and go to state 35
    minmaxExp                      shift and go to state 36
    sumExp                         shift and go to state 37
    mulExp                         shift and go to state 38
    unaryExp                       shift and go to state 39
    unaryop                        shift and go to state 40
    factor                         shift and go to state 41
    immutable                      shift and go to state 45
    mutable                        shift and go to state 46
    call                           shift and go to state 48
    constant                       shift and go to state 49

state 175

    (47) iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp PALABRA_RESERVADA_BY simpleExp .
    (59) simpleExp -> simpleExp . PALABRA_RESERVADA_OR andExp

    PALABRA_RESERVADA_DO reduce using rule 47 (iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp PALABRA_RESERVADA_BY simpleExp .)
    PALABRA_RESERVADA_OR shift and go to state 64

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PALABRA_RESERVADA_ELSE in state 161 resolved as shift
