
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIGNACION BUCLE_FOR BUCLE_WHILE CADENA CARACTER CARACTER_ERROR COLON COMA COMENTARIOS COMENTARIO_BLOQUE CORCHETE_DERECHO CORCHETE_IZQUIERDO DECREMENTO DISTINTO DIVI_RESULTADO ENTERO_SOBREPASADO IGUAL INCREMENTO LINEAS LLAVE_DER LLAVE_IZQ MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MULTI_RESULTADO NUMERO_DECIMAL NUMERO_DECIMAL_CON_ERROR NUMERO_DECIMAL_CON_ERROR2 NUMERO_ENTERO OPERADOR_DIVIDIR OPERADOR_MODULO OPERADOR_MULTIPLICAR OPERADOR_RESTA OPERADOR_SUMA OP_TERNARIO PALABRA_RESERVADA_AND PALABRA_RESERVADA_BOOL PALABRA_RESERVADA_BREAK PALABRA_RESERVADA_BY PALABRA_RESERVADA_DO PALABRA_RESERVADA_ELSE PALABRA_RESERVADA_FALSE PALABRA_RESERVADA_IF PALABRA_RESERVADA_MAIN PALABRA_RESERVADA_NOT PALABRA_RESERVADA_NULL PALABRA_RESERVADA_OR PALABRA_RESERVADA_RETURN PALABRA_RESERVADA_STATIC PALABRA_RESERVADA_THEN PALABRA_RESERVADA_TO PALABRA_RESERVADA_TRUE PARENTESIS_DERECHO PARENTESIS_IZQUIERDO PUNTOS_MAYOR_PUNTOS PUNTOS_MENOR_PUNTOS RESTA_RESULTADO SEMICOLON SUMA_RESULTADO TIPO_CARACTER TIPO_DECIMAL TIPO_ENTERO VARIABLE VARIABLE_ERRORprogram : declListdeclList : declList decl\n    | decldecl : varDecl\n    | funDeclvarDecl : typeSpec varDeclList SEMICOLONscopedVarDecl : PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON\n    | typeSpec varDeclList SEMICOLONvarDeclList : varDeclList COMA varDeclInit\n    | varDeclInitvarDeclInit : varDeclId \n    | varDeclId COLON simpleExpvarDeclId : VARIABLE\n    | VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHOtypeSpec : TIPO_ENTERO\n    | PALABRA_RESERVADA_BOOL\n    | TIPO_CARACTERfunDecl : typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt\n    | VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmtparms : parmList\n    | epsparmList : parmList SEMICOLON parmTypeList\n    | parmTypeListparmTypeList : typeSpec parmIdListparmIdList : parmIdList COMA parmId\n    | parmIdparmId : VARIABLE\n    | VARIABLE CORCHETE_IZQUIERDO CORCHETE_DERECHOstmt : expStmt\n    | compoundStmt\n    | selectStmt\n    | iterStmt\n    | returnStmt\n    | breakStmtexpStmt : exp SEMICOLON\n    | SEMICOLONcompoundStmt : LLAVE_IZQ localDecls stmtList LLAVE_DERlocalDecls : localDecls scopedVarDecl\n    | epsstmtList : stmtList stmt\n    | epsselectStmt : PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt\n    | PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmtiterStmt : BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt\n    | BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmtiterRange : simpleExp PALABRA_RESERVADA_TO simpleExp\n    | simpleExp PALABRA_RESERVADA_TO simpleExp PALABRA_RESERVADA_BY simpleExpreturnStmt : PALABRA_RESERVADA_RETURN SEMICOLON\n    | PALABRA_RESERVADA_RETURN exp SEMICOLONbreakStmt : PALABRA_RESERVADA_BREAK SEMICOLONexp : mutable ASIGNACION exp\n    | mutable SUMA_RESULTADO exp\n    | mutable RESTA_RESULTADO exp\n    | mutable MULTI_RESULTADO exp\n    | mutable DIVI_RESULTADO exp\n    | mutable INCREMENTO\n    | mutable DECREMENTO\n    | simpleExpsimpleExp : simpleExp PALABRA_RESERVADA_OR andExp\n    | andExpandExp : andExp PALABRA_RESERVADA_AND unaryRelExp\n    | unaryRelExpunaryRelExp : PALABRA_RESERVADA_NOT unaryRelExp\n    | relExprelExp : minmaxExp relop minmaxExp\n    | minmaxExprelop : MENOR_IGUAL\n    | MENOR\n    | MAYOR\n    | MAYOR_IGUAL\n    | IGUAL\n    | DISTINTOminmaxExp : minmaxExp minmaxop sumExp\n    | sumExpminmaxop : PUNTOS_MAYOR_PUNTOS\n    | PUNTOS_MENOR_PUNTOSsumExp : sumExp sumop mulExp\n    | mulExpsumop : OPERADOR_SUMA\n    | OPERADOR_RESTAmulExp : mulExp mulop unaryExp\n    | unaryExpmulop : OPERADOR_MULTIPLICAR\n    | OPERADOR_DIVIDIR\n    | OPERADOR_MODULOunaryExp : unaryop unaryExp\n    | factorunaryop : OPERADOR_RESTA\n    | OPERADOR_MULTIPLICAR\n    | OP_TERNARIOfactor : immutable\n    | mutablemutable : VARIABLE\n    | VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHOimmutable : PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO\n    | call\n    | constantcall : VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHOargs : argList\n    | epsargList : argList COMA exp\n    | expconstant : NUMERO_ENTERO\n    | NUMERO_DECIMAL\n    | CARACTER\n    | CADENA\n    | PALABRA_RESERVADA_TRUE\n    | PALABRA_RESERVADA_FALSEeps : '
    
_lr_action_items = {'VARIABLE':([0,2,3,4,5,6,8,9,10,11,17,18,21,26,34,40,42,43,44,47,57,62,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,106,108,116,117,118,119,120,128,129,130,134,136,146,147,148,149,151,152,153,154,155,157,158,159,161,162,166,167,168,169,170,171,172,174,],[7,7,-3,-4,-5,13,-15,-16,-17,-2,-6,28,50,61,50,50,-88,-89,-90,50,50,50,50,50,50,50,-67,-68,-69,-70,-71,-72,-75,-76,50,-79,-80,50,-83,-84,-85,50,50,-19,-29,-30,-31,-32,-33,-34,-36,-109,50,50,133,50,61,-18,50,50,50,50,50,-35,-109,-39,-48,-50,50,50,-38,-41,28,50,50,50,-49,-37,-40,28,-42,-44,-8,50,50,50,-7,-43,-45,50,]),'TIPO_ENTERO':([0,2,3,4,5,11,16,17,19,58,90,91,92,93,94,95,96,98,99,108,128,129,130,134,136,148,150,155,157,161,162,166,170,171,172,],[8,8,-3,-4,-5,-2,8,-6,8,8,-19,-29,-30,-31,-32,-33,-34,-36,-109,-18,-35,8,-39,-48,-50,-38,8,-49,-37,-42,-44,-8,-7,-43,-45,]),'PALABRA_RESERVADA_BOOL':([0,2,3,4,5,11,16,17,19,58,90,91,92,93,94,95,96,98,99,108,128,129,130,134,136,148,150,155,157,161,162,166,170,171,172,],[9,9,-3,-4,-5,-2,9,-6,9,9,-19,-29,-30,-31,-32,-33,-34,-36,-109,-18,-35,9,-39,-48,-50,-38,9,-49,-37,-42,-44,-8,-7,-43,-45,]),'TIPO_CARACTER':([0,2,3,4,5,11,16,17,19,58,90,91,92,93,94,95,96,98,99,108,128,129,130,134,136,148,150,155,157,161,162,166,170,171,172,],[10,10,-3,-4,-5,-2,10,-6,10,10,-19,-29,-30,-31,-32,-33,-34,-36,-109,-18,-35,10,-39,-48,-50,-38,10,-49,-37,-42,-44,-8,-7,-43,-45,]),'$end':([1,2,3,4,5,11,17,90,91,92,93,94,95,96,98,108,128,134,136,155,157,161,162,171,172,],[0,-1,-3,-4,-5,-2,-6,-19,-29,-30,-31,-32,-33,-34,-36,-18,-35,-48,-50,-49,-37,-42,-44,-43,-45,]),'PARENTESIS_IZQUIERDO':([7,13,21,34,40,42,43,44,47,50,57,62,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,92,93,94,95,96,98,99,100,101,103,116,117,118,119,120,128,129,130,134,136,146,147,148,149,152,153,154,155,157,158,161,162,166,167,168,169,170,171,172,174,],[16,19,47,47,47,-88,-89,-90,47,89,47,47,47,47,47,47,-67,-68,-69,-70,-71,-72,-75,-76,47,-79,-80,47,-83,-84,-85,47,47,-29,-30,-31,-32,-33,-34,-36,-109,47,47,47,47,47,47,47,47,-35,-109,-39,-48,-50,47,47,-38,-41,47,47,47,-49,-37,-40,-42,-44,-8,47,47,47,-7,-43,-45,47,]),'SEMICOLON':([12,13,14,15,23,25,27,28,31,32,33,35,36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,66,84,86,87,91,92,93,94,95,96,97,98,99,103,104,105,109,110,111,112,113,114,115,121,122,128,129,130,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,152,153,155,157,158,160,161,162,165,166,167,168,170,171,172,],[17,-13,-10,-11,58,-23,-9,-13,-12,-60,-62,-64,-66,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,98,-24,-26,-27,98,-14,-63,-86,-92,-58,-29,-30,-31,-32,-33,-34,128,-36,-109,134,136,-22,-59,-61,-65,-73,-77,-81,-95,-56,-57,-35,-109,-39,-48,155,-50,-25,-28,-51,-52,-53,-54,-55,-94,-98,98,-38,-41,98,98,-49,-37,-40,166,-42,-44,170,-8,98,98,-7,-43,-45,]),'COMA':([12,13,14,15,27,28,31,32,33,35,36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,59,60,61,63,66,84,86,87,109,110,111,112,113,114,115,121,122,125,127,137,138,139,140,141,142,143,144,145,156,160,165,],[18,-13,-10,-11,-9,-13,-12,-60,-62,-64,-66,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,106,-26,-27,-14,-63,-86,-92,-58,-59,-61,-65,-73,-77,-81,-95,-56,-57,146,-102,-25,-28,-51,-52,-53,-54,-55,-94,-98,-101,18,18,]),'COLON':([13,15,28,63,],[-13,21,-13,-14,]),'CORCHETE_IZQUIERDO':([13,28,50,61,],[20,20,88,107,]),'PARENTESIS_DERECHO':([16,19,22,23,24,25,29,32,33,35,36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,59,60,61,66,84,85,86,87,89,105,109,110,111,112,113,114,115,121,122,124,125,126,127,137,138,139,140,141,142,143,144,145,156,],[-109,-109,57,-20,-21,-23,62,-60,-62,-64,-66,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-24,-26,-27,-63,-86,115,-92,-58,-109,-22,-59,-61,-65,-73,-77,-81,-95,-56,-57,145,-99,-100,-102,-25,-28,-51,-52,-53,-54,-55,-94,-98,-101,]),'NUMERO_ENTERO':([20,21,34,40,42,43,44,47,57,62,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,92,93,94,95,96,98,99,100,101,103,116,117,118,119,120,128,129,130,134,136,146,147,148,149,152,153,154,155,157,158,161,162,166,167,168,169,170,171,172,174,],[30,51,51,51,-88,-89,-90,51,51,51,51,51,51,51,-67,-68,-69,-70,-71,-72,-75,-76,51,-79,-80,51,-83,-84,-85,51,51,-29,-30,-31,-32,-33,-34,-36,-109,51,51,51,51,51,51,51,51,-35,-109,-39,-48,-50,51,51,-38,-41,51,51,51,-49,-37,-40,-42,-44,-8,51,51,51,-7,-43,-45,51,]),'PALABRA_RESERVADA_NOT':([21,34,47,57,62,64,65,88,89,91,92,93,94,95,96,98,99,100,101,103,116,117,118,119,120,128,129,130,134,136,146,147,148,149,152,153,154,155,157,158,161,162,166,167,168,169,170,171,172,174,],[34,34,34,34,34,34,34,34,34,-29,-30,-31,-32,-33,-34,-36,-109,34,34,34,34,34,34,34,34,-35,-109,-39,-48,-50,34,34,-38,-41,34,34,34,-49,-37,-40,-42,-44,-8,34,34,34,-7,-43,-45,34,]),'OPERADOR_RESTA':([21,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,88,89,91,92,93,94,95,96,98,99,100,101,103,112,113,114,115,116,117,118,119,120,128,129,130,134,136,144,145,146,147,148,149,152,153,154,155,157,158,161,162,166,167,168,169,170,171,172,174,],[42,42,79,-78,-82,42,-87,-88,-89,-90,-91,-92,42,-96,-97,-93,-103,-104,-105,-106,-107,-108,42,42,42,42,42,42,-67,-68,-69,-70,-71,-72,-75,-76,42,-79,-80,42,-83,-84,-85,-86,-92,42,42,-29,-30,-31,-32,-33,-34,-36,-109,42,42,42,79,-77,-81,-95,42,42,42,42,42,-35,-109,-39,-48,-50,-94,-98,42,42,-38,-41,42,42,42,-49,-37,-40,-42,-44,-8,42,42,42,-7,-43,-45,42,]),'OPERADOR_MULTIPLICAR':([21,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,88,89,91,92,93,94,95,96,98,99,100,101,103,113,114,115,116,117,118,119,120,128,129,130,134,136,144,145,146,147,148,149,152,153,154,155,157,158,161,162,166,167,168,169,170,171,172,174,],[43,43,81,-82,43,-87,-88,-89,-90,-91,-92,43,-96,-97,-93,-103,-104,-105,-106,-107,-108,43,43,43,43,43,43,-67,-68,-69,-70,-71,-72,-75,-76,43,-79,-80,43,-83,-84,-85,-86,-92,43,43,-29,-30,-31,-32,-33,-34,-36,-109,43,43,43,81,-81,-95,43,43,43,43,43,-35,-109,-39,-48,-50,-94,-98,43,43,-38,-41,43,43,43,-49,-37,-40,-42,-44,-8,43,43,43,-7,-43,-45,43,]),'OP_TERNARIO':([21,34,40,42,43,44,47,57,62,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,92,93,94,95,96,98,99,100,101,103,116,117,118,119,120,128,129,130,134,136,146,147,148,149,152,153,154,155,157,158,161,162,166,167,168,169,170,171,172,174,],[44,44,44,-88,-89,-90,44,44,44,44,44,44,44,-67,-68,-69,-70,-71,-72,-75,-76,44,-79,-80,44,-83,-84,-85,44,44,-29,-30,-31,-32,-33,-34,-36,-109,44,44,44,44,44,44,44,44,-35,-109,-39,-48,-50,44,44,-38,-41,44,44,44,-49,-37,-40,-42,-44,-8,44,44,44,-7,-43,-45,44,]),'NUMERO_DECIMAL':([21,34,40,42,43,44,47,57,62,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,92,93,94,95,96,98,99,100,101,103,116,117,118,119,120,128,129,130,134,136,146,147,148,149,152,153,154,155,157,158,161,162,166,167,168,169,170,171,172,174,],[52,52,52,-88,-89,-90,52,52,52,52,52,52,52,-67,-68,-69,-70,-71,-72,-75,-76,52,-79,-80,52,-83,-84,-85,52,52,-29,-30,-31,-32,-33,-34,-36,-109,52,52,52,52,52,52,52,52,-35,-109,-39,-48,-50,52,52,-38,-41,52,52,52,-49,-37,-40,-42,-44,-8,52,52,52,-7,-43,-45,52,]),'CARACTER':([21,34,40,42,43,44,47,57,62,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,92,93,94,95,96,98,99,100,101,103,116,117,118,119,120,128,129,130,134,136,146,147,148,149,152,153,154,155,157,158,161,162,166,167,168,169,170,171,172,174,],[53,53,53,-88,-89,-90,53,53,53,53,53,53,53,-67,-68,-69,-70,-71,-72,-75,-76,53,-79,-80,53,-83,-84,-85,53,53,-29,-30,-31,-32,-33,-34,-36,-109,53,53,53,53,53,53,53,53,-35,-109,-39,-48,-50,53,53,-38,-41,53,53,53,-49,-37,-40,-42,-44,-8,53,53,53,-7,-43,-45,53,]),'CADENA':([21,34,40,42,43,44,47,57,62,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,92,93,94,95,96,98,99,100,101,103,116,117,118,119,120,128,129,130,134,136,146,147,148,149,152,153,154,155,157,158,161,162,166,167,168,169,170,171,172,174,],[54,54,54,-88,-89,-90,54,54,54,54,54,54,54,-67,-68,-69,-70,-71,-72,-75,-76,54,-79,-80,54,-83,-84,-85,54,54,-29,-30,-31,-32,-33,-34,-36,-109,54,54,54,54,54,54,54,54,-35,-109,-39,-48,-50,54,54,-38,-41,54,54,54,-49,-37,-40,-42,-44,-8,54,54,54,-7,-43,-45,54,]),'PALABRA_RESERVADA_TRUE':([21,34,40,42,43,44,47,57,62,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,92,93,94,95,96,98,99,100,101,103,116,117,118,119,120,128,129,130,134,136,146,147,148,149,152,153,154,155,157,158,161,162,166,167,168,169,170,171,172,174,],[55,55,55,-88,-89,-90,55,55,55,55,55,55,55,-67,-68,-69,-70,-71,-72,-75,-76,55,-79,-80,55,-83,-84,-85,55,55,-29,-30,-31,-32,-33,-34,-36,-109,55,55,55,55,55,55,55,55,-35,-109,-39,-48,-50,55,55,-38,-41,55,55,55,-49,-37,-40,-42,-44,-8,55,55,55,-7,-43,-45,55,]),'PALABRA_RESERVADA_FALSE':([21,34,40,42,43,44,47,57,62,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,92,93,94,95,96,98,99,100,101,103,116,117,118,119,120,128,129,130,134,136,146,147,148,149,152,153,154,155,157,158,161,162,166,167,168,169,170,171,172,174,],[56,56,56,-88,-89,-90,56,56,56,56,56,56,56,-67,-68,-69,-70,-71,-72,-75,-76,56,-79,-80,56,-83,-84,-85,56,56,-29,-30,-31,-32,-33,-34,-36,-109,56,56,56,56,56,56,56,56,-35,-109,-39,-48,-50,56,56,-38,-41,56,56,56,-49,-37,-40,-42,-44,-8,56,56,56,-7,-43,-45,56,]),'CORCHETE_DERECHO':([30,32,33,35,36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,66,84,86,87,107,109,110,111,112,113,114,115,121,122,123,139,140,141,142,143,144,145,],[63,-60,-62,-64,-66,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-63,-86,-92,-58,138,-59,-61,-65,-73,-77,-81,-95,-56,-57,144,-51,-52,-53,-54,-55,-94,-98,]),'PALABRA_RESERVADA_OR':([31,32,33,35,36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,66,84,86,87,109,110,111,112,113,114,115,131,132,144,145,164,173,175,],[64,-60,-62,-64,-66,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-63,-86,-92,64,-59,-61,-65,-73,-77,-81,-95,64,64,-94,-98,64,64,64,]),'PALABRA_RESERVADA_THEN':([32,33,35,36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,66,84,109,110,111,112,113,114,115,131,144,145,],[-60,-62,-64,-66,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-63,-86,-59,-61,-65,-73,-77,-81,-95,152,-94,-98,]),'PALABRA_RESERVADA_DO':([32,33,35,36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,66,84,109,110,111,112,113,114,115,132,144,145,163,173,175,],[-60,-62,-64,-66,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-63,-86,-59,-61,-65,-73,-77,-81,-95,153,-94,-98,168,-46,-47,]),'PALABRA_RESERVADA_TO':([32,33,35,36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,66,84,109,110,111,112,113,114,115,144,145,164,],[-60,-62,-64,-66,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-63,-86,-59,-61,-65,-73,-77,-81,-95,-94,-98,169,]),'PALABRA_RESERVADA_BY':([32,33,35,36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,66,84,109,110,111,112,113,114,115,144,145,173,],[-60,-62,-64,-66,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-63,-86,-59,-61,-65,-73,-77,-81,-95,-94,-98,174,]),'PALABRA_RESERVADA_AND':([32,33,35,36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,66,84,86,109,110,111,112,113,114,115,144,145,],[65,-62,-64,-66,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-63,-86,-92,65,-61,-65,-73,-77,-81,-95,-94,-98,]),'MENOR_IGUAL':([36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,84,86,112,113,114,115,144,145,],[69,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-86,-92,-73,-77,-81,-95,-94,-98,]),'MENOR':([36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,84,86,112,113,114,115,144,145,],[70,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-86,-92,-73,-77,-81,-95,-94,-98,]),'MAYOR':([36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,84,86,112,113,114,115,144,145,],[71,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-86,-92,-73,-77,-81,-95,-94,-98,]),'MAYOR_IGUAL':([36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,84,86,112,113,114,115,144,145,],[72,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-86,-92,-73,-77,-81,-95,-94,-98,]),'IGUAL':([36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,84,86,112,113,114,115,144,145,],[73,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-86,-92,-73,-77,-81,-95,-94,-98,]),'DISTINTO':([36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,84,86,112,113,114,115,144,145,],[74,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-86,-92,-73,-77,-81,-95,-94,-98,]),'PUNTOS_MAYOR_PUNTOS':([36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,84,86,111,112,113,114,115,144,145,],[75,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-86,-92,75,-73,-77,-81,-95,-94,-98,]),'PUNTOS_MENOR_PUNTOS':([36,37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,84,86,111,112,113,114,115,144,145,],[76,-74,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-86,-92,76,-73,-77,-81,-95,-94,-98,]),'OPERADOR_SUMA':([37,38,39,41,45,46,48,49,50,51,52,53,54,55,56,84,86,112,113,114,115,144,145,],[78,-78,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-86,-92,78,-77,-81,-95,-94,-98,]),'OPERADOR_DIVIDIR':([38,39,41,45,46,48,49,50,51,52,53,54,55,56,84,86,113,114,115,144,145,],[82,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-86,-92,82,-81,-95,-94,-98,]),'OPERADOR_MODULO':([38,39,41,45,46,48,49,50,51,52,53,54,55,56,84,86,113,114,115,144,145,],[83,-82,-87,-91,-92,-96,-97,-93,-103,-104,-105,-106,-107,-108,-86,-92,83,-81,-95,-94,-98,]),'ASIGNACION':([50,86,133,144,],[-93,116,154,-94,]),'SUMA_RESULTADO':([50,86,144,],[-93,117,-94,]),'RESTA_RESULTADO':([50,86,144,],[-93,118,-94,]),'MULTI_RESULTADO':([50,86,144,],[-93,119,-94,]),'DIVI_RESULTADO':([50,86,144,],[-93,120,-94,]),'INCREMENTO':([50,86,144,],[-93,121,-94,]),'DECREMENTO':([50,86,144,],[-93,122,-94,]),'LLAVE_IZQ':([57,62,91,92,93,94,95,96,98,99,128,129,130,134,136,147,148,149,152,153,155,157,158,161,162,166,167,168,170,171,172,],[99,99,-29,-30,-31,-32,-33,-34,-36,-109,-35,-109,-39,-48,-50,99,-38,-41,99,99,-49,-37,-40,-42,-44,-8,99,99,-7,-43,-45,]),'PALABRA_RESERVADA_IF':([57,62,91,92,93,94,95,96,98,99,128,129,130,134,136,147,148,149,152,153,155,157,158,161,162,166,167,168,170,171,172,],[100,100,-29,-30,-31,-32,-33,-34,-36,-109,-35,-109,-39,-48,-50,100,-38,-41,100,100,-49,-37,-40,-42,-44,-8,100,100,-7,-43,-45,]),'BUCLE_WHILE':([57,62,91,92,93,94,95,96,98,99,128,129,130,134,136,147,148,149,152,153,155,157,158,161,162,166,167,168,170,171,172,],[101,101,-29,-30,-31,-32,-33,-34,-36,-109,-35,-109,-39,-48,-50,101,-38,-41,101,101,-49,-37,-40,-42,-44,-8,101,101,-7,-43,-45,]),'BUCLE_FOR':([57,62,91,92,93,94,95,96,98,99,128,129,130,134,136,147,148,149,152,153,155,157,158,161,162,166,167,168,170,171,172,],[102,102,-29,-30,-31,-32,-33,-34,-36,-109,-35,-109,-39,-48,-50,102,-38,-41,102,102,-49,-37,-40,-42,-44,-8,102,102,-7,-43,-45,]),'PALABRA_RESERVADA_RETURN':([57,62,91,92,93,94,95,96,98,99,128,129,130,134,136,147,148,149,152,153,155,157,158,161,162,166,167,168,170,171,172,],[103,103,-29,-30,-31,-32,-33,-34,-36,-109,-35,-109,-39,-48,-50,103,-38,-41,103,103,-49,-37,-40,-42,-44,-8,103,103,-7,-43,-45,]),'PALABRA_RESERVADA_BREAK':([57,62,91,92,93,94,95,96,98,99,128,129,130,134,136,147,148,149,152,153,155,157,158,161,162,166,167,168,170,171,172,],[104,104,-29,-30,-31,-32,-33,-34,-36,-109,-35,-109,-39,-48,-50,104,-38,-41,104,104,-49,-37,-40,-42,-44,-8,104,104,-7,-43,-45,]),'LLAVE_DER':([91,92,93,94,95,96,98,99,128,129,130,134,136,147,148,149,155,157,158,161,162,166,170,171,172,],[-29,-30,-31,-32,-33,-34,-36,-109,-35,-109,-39,-48,-50,157,-38,-41,-49,-37,-40,-42,-44,-8,-7,-43,-45,]),'PALABRA_RESERVADA_ELSE':([91,92,93,94,95,96,98,128,134,136,155,157,161,162,171,172,],[-29,-30,-31,-32,-33,-34,-36,-35,-48,-50,-49,-37,167,-44,-43,-45,]),'PALABRA_RESERVADA_STATIC':([99,129,130,148,166,170,],[-109,150,-39,-38,-8,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declList':([0,],[2,]),'decl':([0,2,],[3,11,]),'varDecl':([0,2,],[4,4,]),'funDecl':([0,2,],[5,5,]),'typeSpec':([0,2,16,19,58,129,150,],[6,6,26,26,26,151,159,]),'varDeclList':([6,151,159,],[12,160,165,]),'varDeclInit':([6,18,151,159,],[14,27,14,14,]),'varDeclId':([6,18,151,159,],[15,15,15,15,]),'parms':([16,19,],[22,29,]),'parmList':([16,19,],[23,23,]),'eps':([16,19,89,99,129,],[24,24,126,130,149,]),'parmTypeList':([16,19,58,],[25,25,105,]),'simpleExp':([21,47,57,62,88,89,100,101,103,116,117,118,119,120,146,147,152,153,154,167,168,169,174,],[31,87,87,87,87,87,131,132,87,87,87,87,87,87,87,87,87,87,164,87,87,173,175,]),'andExp':([21,47,57,62,64,88,89,100,101,103,116,117,118,119,120,146,147,152,153,154,167,168,169,174,],[32,32,32,32,109,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'unaryRelExp':([21,34,47,57,62,64,65,88,89,100,101,103,116,117,118,119,120,146,147,152,153,154,167,168,169,174,],[33,66,33,33,33,33,110,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'relExp':([21,34,47,57,62,64,65,88,89,100,101,103,116,117,118,119,120,146,147,152,153,154,167,168,169,174,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'minmaxExp':([21,34,47,57,62,64,65,67,88,89,100,101,103,116,117,118,119,120,146,147,152,153,154,167,168,169,174,],[36,36,36,36,36,36,36,111,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'sumExp':([21,34,47,57,62,64,65,67,68,88,89,100,101,103,116,117,118,119,120,146,147,152,153,154,167,168,169,174,],[37,37,37,37,37,37,37,37,112,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'mulExp':([21,34,47,57,62,64,65,67,68,77,88,89,100,101,103,116,117,118,119,120,146,147,152,153,154,167,168,169,174,],[38,38,38,38,38,38,38,38,38,113,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'unaryExp':([21,34,40,47,57,62,64,65,67,68,77,80,88,89,100,101,103,116,117,118,119,120,146,147,152,153,154,167,168,169,174,],[39,39,84,39,39,39,39,39,39,39,39,114,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'unaryop':([21,34,40,47,57,62,64,65,67,68,77,80,88,89,100,101,103,116,117,118,119,120,146,147,152,153,154,167,168,169,174,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'factor':([21,34,40,47,57,62,64,65,67,68,77,80,88,89,100,101,103,116,117,118,119,120,146,147,152,153,154,167,168,169,174,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'immutable':([21,34,40,47,57,62,64,65,67,68,77,80,88,89,100,101,103,116,117,118,119,120,146,147,152,153,154,167,168,169,174,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'mutable':([21,34,40,47,57,62,64,65,67,68,77,80,88,89,100,101,103,116,117,118,119,120,146,147,152,153,154,167,168,169,174,],[46,46,46,86,86,86,46,46,46,46,46,46,86,86,46,46,86,86,86,86,86,86,86,86,86,86,46,86,86,46,46,]),'call':([21,34,40,47,57,62,64,65,67,68,77,80,88,89,100,101,103,116,117,118,119,120,146,147,152,153,154,167,168,169,174,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'constant':([21,34,40,47,57,62,64,65,67,68,77,80,88,89,100,101,103,116,117,118,119,120,146,147,152,153,154,167,168,169,174,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'parmIdList':([26,],[59,]),'parmId':([26,106,],[60,137,]),'relop':([36,],[67,]),'minmaxop':([36,111,],[68,68,]),'sumop':([37,112,],[77,77,]),'mulop':([38,113,],[80,80,]),'exp':([47,57,62,88,89,103,116,117,118,119,120,146,147,152,153,167,168,],[85,97,97,123,127,135,139,140,141,142,143,156,97,97,97,97,97,]),'stmt':([57,62,147,152,153,167,168,],[90,108,158,161,162,171,172,]),'expStmt':([57,62,147,152,153,167,168,],[91,91,91,91,91,91,91,]),'compoundStmt':([57,62,147,152,153,167,168,],[92,92,92,92,92,92,92,]),'selectStmt':([57,62,147,152,153,167,168,],[93,93,93,93,93,93,93,]),'iterStmt':([57,62,147,152,153,167,168,],[94,94,94,94,94,94,94,]),'returnStmt':([57,62,147,152,153,167,168,],[95,95,95,95,95,95,95,]),'breakStmt':([57,62,147,152,153,167,168,],[96,96,96,96,96,96,96,]),'args':([89,],[124,]),'argList':([89,],[125,]),'localDecls':([99,],[129,]),'stmtList':([129,],[147,]),'scopedVarDecl':([129,],[148,]),'iterRange':([154,],[163,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declList','program',1,'p_program','pro.py',398),
  ('declList -> declList decl','declList',2,'p_declList','pro.py',401),
  ('declList -> decl','declList',1,'p_declList','pro.py',402),
  ('decl -> varDecl','decl',1,'p_decl','pro.py',405),
  ('decl -> funDecl','decl',1,'p_decl','pro.py',406),
  ('varDecl -> typeSpec varDeclList SEMICOLON','varDecl',3,'p_varDecl','pro.py',409),
  ('scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON','scopedVarDecl',4,'p_scopedVarDecl','pro.py',412),
  ('scopedVarDecl -> typeSpec varDeclList SEMICOLON','scopedVarDecl',3,'p_scopedVarDecl','pro.py',413),
  ('varDeclList -> varDeclList COMA varDeclInit','varDeclList',3,'p_varDeclList','pro.py',416),
  ('varDeclList -> varDeclInit','varDeclList',1,'p_varDeclList','pro.py',417),
  ('varDeclInit -> varDeclId','varDeclInit',1,'p_varDeclInit','pro.py',420),
  ('varDeclInit -> varDeclId COLON simpleExp','varDeclInit',3,'p_varDeclInit','pro.py',421),
  ('varDeclId -> VARIABLE','varDeclId',1,'p_varDeclId','pro.py',424),
  ('varDeclId -> VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO','varDeclId',4,'p_varDeclId','pro.py',425),
  ('typeSpec -> TIPO_ENTERO','typeSpec',1,'p_typeSpec','pro.py',428),
  ('typeSpec -> PALABRA_RESERVADA_BOOL','typeSpec',1,'p_typeSpec','pro.py',429),
  ('typeSpec -> TIPO_CARACTER','typeSpec',1,'p_typeSpec','pro.py',430),
  ('funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt','funDecl',6,'p_funDecl','pro.py',433),
  ('funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt','funDecl',5,'p_funDecl','pro.py',434),
  ('parms -> parmList','parms',1,'p_parms','pro.py',437),
  ('parms -> eps','parms',1,'p_parms','pro.py',438),
  ('parmList -> parmList SEMICOLON parmTypeList','parmList',3,'p_parmList','pro.py',441),
  ('parmList -> parmTypeList','parmList',1,'p_parmList','pro.py',442),
  ('parmTypeList -> typeSpec parmIdList','parmTypeList',2,'p_parmTypeList','pro.py',445),
  ('parmIdList -> parmIdList COMA parmId','parmIdList',3,'p_parmIdList','pro.py',448),
  ('parmIdList -> parmId','parmIdList',1,'p_parmIdList','pro.py',449),
  ('parmId -> VARIABLE','parmId',1,'p_parmId','pro.py',452),
  ('parmId -> VARIABLE CORCHETE_IZQUIERDO CORCHETE_DERECHO','parmId',3,'p_parmId','pro.py',453),
  ('stmt -> expStmt','stmt',1,'p_stmt','pro.py',456),
  ('stmt -> compoundStmt','stmt',1,'p_stmt','pro.py',457),
  ('stmt -> selectStmt','stmt',1,'p_stmt','pro.py',458),
  ('stmt -> iterStmt','stmt',1,'p_stmt','pro.py',459),
  ('stmt -> returnStmt','stmt',1,'p_stmt','pro.py',460),
  ('stmt -> breakStmt','stmt',1,'p_stmt','pro.py',461),
  ('expStmt -> exp SEMICOLON','expStmt',2,'p_expStmt','pro.py',464),
  ('expStmt -> SEMICOLON','expStmt',1,'p_expStmt','pro.py',465),
  ('compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER','compoundStmt',4,'p_compoundStmt','pro.py',468),
  ('localDecls -> localDecls scopedVarDecl','localDecls',2,'p_localDecls','pro.py',471),
  ('localDecls -> eps','localDecls',1,'p_localDecls','pro.py',472),
  ('stmtList -> stmtList stmt','stmtList',2,'p_stmtList','pro.py',475),
  ('stmtList -> eps','stmtList',1,'p_stmtList','pro.py',476),
  ('selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt','selectStmt',4,'p_selectStmt','pro.py',479),
  ('selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt','selectStmt',6,'p_selectStmt','pro.py',480),
  ('iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO stmt','iterStmt',4,'p_iterStmt','pro.py',483),
  ('iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt','iterStmt',6,'p_iterStmt','pro.py',484),
  ('iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp','iterRange',3,'p_iterRange','pro.py',487),
  ('iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp PALABRA_RESERVADA_BY simpleExp','iterRange',5,'p_iterRange','pro.py',488),
  ('returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON','returnStmt',2,'p_returnStmt','pro.py',491),
  ('returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON','returnStmt',3,'p_returnStmt','pro.py',492),
  ('breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON','breakStmt',2,'p_breakStmt','pro.py',495),
  ('exp -> mutable ASIGNACION exp','exp',3,'p_exp','pro.py',498),
  ('exp -> mutable SUMA_RESULTADO exp','exp',3,'p_exp','pro.py',499),
  ('exp -> mutable RESTA_RESULTADO exp','exp',3,'p_exp','pro.py',500),
  ('exp -> mutable MULTI_RESULTADO exp','exp',3,'p_exp','pro.py',501),
  ('exp -> mutable DIVI_RESULTADO exp','exp',3,'p_exp','pro.py',502),
  ('exp -> mutable INCREMENTO','exp',2,'p_exp','pro.py',503),
  ('exp -> mutable DECREMENTO','exp',2,'p_exp','pro.py',504),
  ('exp -> simpleExp','exp',1,'p_exp','pro.py',505),
  ('simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp','simpleExp',3,'p_simpleExp','pro.py',508),
  ('simpleExp -> andExp','simpleExp',1,'p_simpleExp','pro.py',509),
  ('andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp','andExp',3,'p_andExp','pro.py',512),
  ('andExp -> unaryRelExp','andExp',1,'p_andExp','pro.py',513),
  ('unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp','unaryRelExp',2,'p_unaryRelExp','pro.py',516),
  ('unaryRelExp -> relExp','unaryRelExp',1,'p_unaryRelExp','pro.py',517),
  ('relExp -> minmaxExp relop minmaxExp','relExp',3,'p_relExp','pro.py',520),
  ('relExp -> minmaxExp','relExp',1,'p_relExp','pro.py',521),
  ('relop -> MENOR_IGUAL','relop',1,'p_relop','pro.py',524),
  ('relop -> MENOR','relop',1,'p_relop','pro.py',525),
  ('relop -> MAYOR','relop',1,'p_relop','pro.py',526),
  ('relop -> MAYOR_IGUAL','relop',1,'p_relop','pro.py',527),
  ('relop -> IGUAL','relop',1,'p_relop','pro.py',528),
  ('relop -> DISTINTO','relop',1,'p_relop','pro.py',529),
  ('minmaxExp -> minmaxExp minmaxop sumExp','minmaxExp',3,'p_minmaxExp','pro.py',532),
  ('minmaxExp -> sumExp','minmaxExp',1,'p_minmaxExp','pro.py',533),
  ('minmaxop -> PUNTOS_MAYOR_PUNTOS','minmaxop',1,'p_minmaxop','pro.py',536),
  ('minmaxop -> PUNTOS_MENOR_PUNTOS','minmaxop',1,'p_minmaxop','pro.py',537),
  ('sumExp -> sumExp sumop mulExp','sumExp',3,'p_sumExp','pro.py',540),
  ('sumExp -> mulExp','sumExp',1,'p_sumExp','pro.py',541),
  ('sumop -> OPERADOR_SUMA','sumop',1,'p_sumop','pro.py',544),
  ('sumop -> OPERADOR_RESTA','sumop',1,'p_sumop','pro.py',545),
  ('mulExp -> mulExp mulop unaryExp','mulExp',3,'p_mulExp','pro.py',548),
  ('mulExp -> unaryExp','mulExp',1,'p_mulExp','pro.py',549),
  ('mulop -> OPERADOR_MULTIPLICAR','mulop',1,'p_mulop','pro.py',552),
  ('mulop -> OPERADOR_DIVIDIR','mulop',1,'p_mulop','pro.py',553),
  ('mulop -> OPERADOR_MODULO','mulop',1,'p_mulop','pro.py',554),
  ('unaryExp -> unaryop unaryExp','unaryExp',2,'p_unaryExp','pro.py',557),
  ('unaryExp -> factor','unaryExp',1,'p_unaryExp','pro.py',558),
  ('unaryop -> OPERADOR_RESTA','unaryop',1,'p_unaryop','pro.py',561),
  ('unaryop -> OPERADOR_MULTIPLICAR','unaryop',1,'p_unaryop','pro.py',562),
  ('unaryop -> OP_TERNARIO','unaryop',1,'p_unaryop','pro.py',563),
  ('factor -> immutable','factor',1,'p_factor','pro.py',566),
  ('factor -> mutable','factor',1,'p_factor','pro.py',567),
  ('mutable -> VARIABLE','mutable',1,'p_mutable','pro.py',570),
  ('mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO','mutable',4,'p_mutable','pro.py',571),
  ('immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO','immutable',3,'p_immutable','pro.py',574),
  ('immutable -> call','immutable',1,'p_immutable','pro.py',575),
  ('immutable -> constant','immutable',1,'p_immutable','pro.py',576),
  ('call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO','call',4,'p_call','pro.py',579),
  ('args -> argList','args',1,'p_args','pro.py',582),
  ('args -> eps','args',1,'p_args','pro.py',583),
  ('argList -> argList COMA exp','argList',3,'p_argList','pro.py',586),
  ('argList -> exp','argList',1,'p_argList','pro.py',587),
  ('constant -> NUMERO_ENTERO','constant',1,'p_constant','pro.py',590),
  ('constant -> NUMERO_DECIMAL','constant',1,'p_constant','pro.py',591),
  ('constant -> CARACTER','constant',1,'p_constant','pro.py',592),
  ('constant -> CADENA','constant',1,'p_constant','pro.py',593),
  ('constant -> PALABRA_RESERVADA_TRUE','constant',1,'p_constant','pro.py',594),
  ('constant -> PALABRA_RESERVADA_FALSE','constant',1,'p_constant','pro.py',595),
  ('eps -> <empty>','eps',0,'p_eps','pro.py',599),
]
