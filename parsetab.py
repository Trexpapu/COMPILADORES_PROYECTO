
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIGNACION BUCLE_FOR BUCLE_WHILE CADENA CARACTER CARACTER_ERROR COLON COMA COMENTARIOS COMENTARIO_BLOQUE CORCHETE_DERECHO CORCHETE_IZQUIERDO DECREMENTO DISTINTO DIVI_RESULTADO ENTERO_SOBREPASADO IGUAL INCREMENTO LINEAS LLAVE_DER LLAVE_IZQ MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MULTI_RESULTADO NUMERO_DECIMAL NUMERO_DECIMAL_CON_ERROR NUMERO_DECIMAL_CON_ERROR2 NUMERO_ENTERO OPERADOR_DIVIDIR OPERADOR_MODULO OPERADOR_MULTIPLICAR OPERADOR_RESTA OPERADOR_SUMA OP_TERNARIO PALABRA_RESERVADA_AND PALABRA_RESERVADA_BOOL PALABRA_RESERVADA_BREAK PALABRA_RESERVADA_BY PALABRA_RESERVADA_DO PALABRA_RESERVADA_ELSE PALABRA_RESERVADA_FALSE PALABRA_RESERVADA_IF PALABRA_RESERVADA_MAIN PALABRA_RESERVADA_NOT PALABRA_RESERVADA_NULL PALABRA_RESERVADA_OR PALABRA_RESERVADA_RETURN PALABRA_RESERVADA_STATIC PALABRA_RESERVADA_THEN PALABRA_RESERVADA_TO PALABRA_RESERVADA_TRUE PARENTESIS_DERECHO PARENTESIS_IZQUIERDO PUNTOS_MAYOR_PUNTOS PUNTOS_MENOR_PUNTOS RESTA_RESULTADO SEMICOLON SUMA_RESULTADO TIPO_CARACTER TIPO_DECIMAL TIPO_ENTERO VARIABLE VARIABLE_ERRORprogram : declListeps :declList : declList decl\n                | decldecl : varDecl\n            | funDeclvarDecl : typeSpec varDeclListscopedVarDecl : PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON\n                     | typeSpec varDeclList SEMICOLON varDeclList : varDeclList COMA varDeclInit\n                    | varDeclInitvarDeclInit : varDeclId \n                   | varDeclId COLON simpleExpvarDeclId : VARIABLE\n                 | VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHOtypeSpec : TIPO_ENTERO\n                | TIPO_CARACTER\n                | PALABRA_RESERVADA_BOOLfunDecl : typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt\n               | VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmtparms : parmList\n             | epsparmList : parmList SEMICOLON parmTypeList\n                | parmTypeListparmTypeList : typeSpec parmIdListparmIdList : parmIdList COMA parmId\n                  | parmIdparmId : VARIABLE\n              | VARIABLE PARENTESIS_IZQUIERDO PARENTESIS_DERECHOstmt : expStmt\n            | compoundStmt\n            | selectStmt\n            | iterStmt\n            | returnStmt\n            | breakStmtexpStmt : exp SEMICOLON\n               | SEMICOLONcompoundStmt : LLAVE_IZQ localDecls stmtList LLAVE_DERlocalDecls : localDecls scopedVarDecl\n                  | epsstmtList : stmtList stmt\n                | epsselectStmt : PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt\n                  | PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmtiterStmt : BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO\n                | BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmtiterRange : simpleExp PALABRA_RESERVADA_TO simpleExp\n                 | simpleExp PALABRA_RESERVADA_TO simpleExp PALABRA_RESERVADA_BY simpleExpreturnStmt : PALABRA_RESERVADA_RETURN SEMICOLON\n                  | PALABRA_RESERVADA_RETURN exp SEMICOLONbreakStmt : PALABRA_RESERVADA_BREAK SEMICOLONexp : mutable ASIGNACION exp\n           | mutable SUMA_RESULTADO exp\n           | mutable RESTA_RESULTADO exp\n           | mutable MULTI_RESULTADO exp\n           | mutable DIVI_RESULTADO exp\n           | mutable INCREMENTO\n           | mutable DECREMENTO\n           | simpleExpsimpleExp : simpleExp PALABRA_RESERVADA_OR andExp\n                 | andExpandExp : andExp PALABRA_RESERVADA_AND unaryRelExp\n              | unaryRelExpunaryRelExp : PALABRA_RESERVADA_NOT unaryRelExp\n                   | relExprelExp : minmaxExp relop minmaxExp\n              | minmaxExprelop : MENOR_IGUAL\n            | MENOR\n            | MAYOR\n            | MAYOR_IGUAL\n            | IGUAL\n            | DISTINTOminmaxExp : minmaxExp minmaxop sumExp \n                 | sumExpminmaxop : PUNTOS_MAYOR_PUNTOS\n                | PUNTOS_MENOR_PUNTOSsumExp : sumExp sumop mulExp\n              | mulExpsumop : OPERADOR_SUMA\n             | OPERADOR_RESTAmulExp : mulExp mulOp unaryExp\n              | unaryExpmulOp : OPERADOR_MULTIPLICAR\n             | OPERADOR_DIVIDIR\n             | OPERADOR_MODULOunaryExp : unaryOp unaryExp\n                | factorunaryOp : OPERADOR_RESTA\n               | OPERADOR_MULTIPLICAR\n               | OP_TERNARIOfactor : immutable\n              | mutablemutable : VARIABLE\n               | VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHOimmutable : PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO\n                 | call\n                 | constantcall : VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHOargs : argList\n            | epsargList : argList COMA exp\n               | expconstant : NUMERO_ENTERO\n                | NUMERO_DECIMAL\n                | CARACTER\n                | CADENA\n                | PALABRA_RESERVADA_TRUE\n                | PALABRA_RESERVADA_FALSE'
    
_lr_action_items = {'VARIABLE':([0,2,3,4,5,6,8,9,10,11,12,13,14,15,17,20,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,105,107,108,109,110,111,112,113,114,115,116,117,118,119,127,128,129,133,135,143,144,145,146,147,148,150,151,152,153,154,156,157,158,160,164,165,166,167,168,169,170,172,],[7,7,-4,-5,-6,13,-16,-17,-18,-3,-7,-14,-11,-12,27,49,60,-10,-14,-13,-61,-63,49,-65,-67,-75,-79,-83,49,-88,-89,-90,-91,-92,-93,49,-97,-98,-94,-104,-105,-106,-107,-108,-109,49,49,-15,49,49,-64,49,49,-68,-69,-70,-71,-72,-73,-76,-77,49,-80,-81,49,-84,-85,-86,-87,49,49,-20,-30,-31,-32,-33,-34,-35,-37,-2,49,49,132,49,60,-19,-60,-62,-66,-74,-78,-82,-96,49,49,49,49,49,-36,-2,-40,-49,-51,-95,-99,49,49,-39,-42,27,49,-45,49,-50,-38,-41,27,-43,-9,49,49,49,-8,-44,-46,49,]),'TIPO_ENTERO':([0,2,3,4,5,11,12,13,14,15,16,18,26,27,30,31,32,34,35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,57,62,65,83,89,90,91,92,93,94,95,97,98,107,108,109,110,111,112,113,114,127,128,129,133,135,143,144,147,149,152,154,156,160,164,168,169,170,],[8,8,-4,-5,-6,-3,-7,-14,-11,-12,8,8,-10,-14,-13,-61,-63,-65,-67,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,8,-15,-64,-87,-20,-30,-31,-32,-33,-34,-35,-37,-2,-19,-60,-62,-66,-74,-78,-82,-96,-36,8,-40,-49,-51,-95,-99,-39,8,-45,-50,-38,-43,-9,-8,-44,-46,]),'TIPO_CARACTER':([0,2,3,4,5,11,12,13,14,15,16,18,26,27,30,31,32,34,35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,57,62,65,83,89,90,91,92,93,94,95,97,98,107,108,109,110,111,112,113,114,127,128,129,133,135,143,144,147,149,152,154,156,160,164,168,169,170,],[9,9,-4,-5,-6,-3,-7,-14,-11,-12,9,9,-10,-14,-13,-61,-63,-65,-67,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,9,-15,-64,-87,-20,-30,-31,-32,-33,-34,-35,-37,-2,-19,-60,-62,-66,-74,-78,-82,-96,-36,9,-40,-49,-51,-95,-99,-39,9,-45,-50,-38,-43,-9,-8,-44,-46,]),'PALABRA_RESERVADA_BOOL':([0,2,3,4,5,11,12,13,14,15,16,18,26,27,30,31,32,34,35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,57,62,65,83,89,90,91,92,93,94,95,97,98,107,108,109,110,111,112,113,114,127,128,129,133,135,143,144,147,149,152,154,156,160,164,168,169,170,],[10,10,-4,-5,-6,-3,-7,-14,-11,-12,10,10,-10,-14,-13,-61,-63,-65,-67,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,10,-15,-64,-87,-20,-30,-31,-32,-33,-34,-35,-37,-2,-19,-60,-62,-66,-74,-78,-82,-96,-36,10,-40,-49,-51,-95,-99,-39,10,-45,-50,-38,-43,-9,-8,-44,-46,]),'$end':([1,2,3,4,5,11,12,13,14,15,26,27,30,31,32,34,35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,62,65,83,89,90,91,92,93,94,95,97,107,108,109,110,111,112,113,114,127,133,135,143,144,152,154,156,160,169,170,],[0,-1,-4,-5,-6,-3,-7,-14,-11,-12,-10,-14,-13,-61,-63,-65,-67,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-15,-64,-87,-20,-30,-31,-32,-33,-34,-35,-37,-19,-60,-62,-66,-74,-78,-82,-96,-36,-49,-51,-95,-99,-45,-50,-38,-43,-44,-46,]),'PARENTESIS_IZQUIERDO':([7,13,20,33,39,41,42,43,46,49,56,60,61,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,90,91,92,93,94,95,97,98,99,100,102,115,116,117,118,119,127,128,129,133,135,145,146,147,148,151,152,153,154,156,157,160,164,165,166,167,168,169,170,172,],[16,18,46,46,46,-89,-90,-91,46,88,46,106,46,46,46,46,46,-68,-69,-70,-71,-72,-73,-76,-77,46,-80,-81,46,-84,-85,-86,46,46,-30,-31,-32,-33,-34,-35,-37,-2,46,46,46,46,46,46,46,46,-36,-2,-40,-49,-51,46,46,-39,-42,46,-45,46,-50,-38,-41,-43,-9,46,46,46,-8,-44,-46,46,]),'COMA':([12,13,14,15,26,27,30,31,32,34,35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,58,59,60,62,65,83,85,86,108,109,110,111,112,113,114,120,121,124,126,136,137,138,139,140,141,142,143,144,155,159,163,],[17,-14,-11,-12,-10,-14,-13,-61,-63,-65,-67,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,105,-27,-28,-15,-64,-87,-93,-59,-60,-62,-66,-74,-78,-82,-96,-57,-58,145,-103,-26,-29,-52,-53,-54,-55,-56,-95,-99,-102,17,17,]),'COLON':([13,15,27,62,],[-14,20,-14,-15,]),'CORCHETE_IZQUIERDO':([13,27,49,],[19,19,87,]),'SEMICOLON':([14,15,22,24,26,27,30,31,32,34,35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,65,83,85,86,90,91,92,93,94,95,96,97,98,102,103,104,108,109,110,111,112,113,114,120,121,127,128,129,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,151,152,154,156,157,159,160,163,164,165,166,168,169,170,],[-11,-12,57,-24,-10,-14,-13,-61,-63,-65,-67,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,97,-25,-27,-28,97,-15,-64,-87,-93,-59,-30,-31,-32,-33,-34,-35,127,-37,-2,133,135,-23,-60,-62,-66,-74,-78,-82,-96,-57,-58,-36,-2,-40,-49,154,-51,-26,-29,-52,-53,-54,-55,-56,-95,-99,97,-39,-42,97,-45,-50,-38,-41,164,-43,168,-9,97,97,-8,-44,-46,]),'PARENTESIS_DERECHO':([16,18,21,22,23,24,28,31,32,34,35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,58,59,60,65,83,84,85,86,88,104,106,108,109,110,111,112,113,114,120,121,123,124,125,126,136,137,138,139,140,141,142,143,144,155,],[-2,-2,56,-21,-22,-24,61,-61,-63,-65,-67,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-25,-27,-28,-64,-87,114,-93,-59,-2,-23,137,-60,-62,-66,-74,-78,-82,-96,-57,-58,144,-100,-101,-103,-26,-29,-52,-53,-54,-55,-56,-95,-99,-102,]),'NUMERO_ENTERO':([19,20,33,39,41,42,43,46,56,61,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,90,91,92,93,94,95,97,98,99,100,102,115,116,117,118,119,127,128,129,133,135,145,146,147,148,151,152,153,154,156,157,160,164,165,166,167,168,169,170,172,],[29,50,50,50,-89,-90,-91,50,50,50,50,50,50,50,-68,-69,-70,-71,-72,-73,-76,-77,50,-80,-81,50,-84,-85,-86,50,50,-30,-31,-32,-33,-34,-35,-37,-2,50,50,50,50,50,50,50,50,-36,-2,-40,-49,-51,50,50,-39,-42,50,-45,50,-50,-38,-41,-43,-9,50,50,50,-8,-44,-46,50,]),'PALABRA_RESERVADA_NOT':([20,33,46,56,61,63,64,87,88,90,91,92,93,94,95,97,98,99,100,102,115,116,117,118,119,127,128,129,133,135,145,146,147,148,151,152,153,154,156,157,160,164,165,166,167,168,169,170,172,],[33,33,33,33,33,33,33,33,33,-30,-31,-32,-33,-34,-35,-37,-2,33,33,33,33,33,33,33,33,-36,-2,-40,-49,-51,33,33,-39,-42,33,-45,33,-50,-38,-41,-43,-9,33,33,33,-8,-44,-46,33,]),'OPERADOR_RESTA':([20,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,87,88,90,91,92,93,94,95,97,98,99,100,102,111,112,113,114,115,116,117,118,119,127,128,129,133,135,143,144,145,146,147,148,151,152,153,154,156,157,160,164,165,166,167,168,169,170,172,],[41,41,78,-79,-83,41,-88,-89,-90,-91,-92,-93,41,-97,-98,-94,-104,-105,-106,-107,-108,-109,41,41,41,41,41,41,-68,-69,-70,-71,-72,-73,-76,-77,41,-80,-81,41,-84,-85,-86,-87,-93,41,41,-30,-31,-32,-33,-34,-35,-37,-2,41,41,41,78,-78,-82,-96,41,41,41,41,41,-36,-2,-40,-49,-51,-95,-99,41,41,-39,-42,41,-45,41,-50,-38,-41,-43,-9,41,41,41,-8,-44,-46,41,]),'OPERADOR_MULTIPLICAR':([20,33,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,87,88,90,91,92,93,94,95,97,98,99,100,102,112,113,114,115,116,117,118,119,127,128,129,133,135,143,144,145,146,147,148,151,152,153,154,156,157,160,164,165,166,167,168,169,170,172,],[42,42,80,-83,42,-88,-89,-90,-91,-92,-93,42,-97,-98,-94,-104,-105,-106,-107,-108,-109,42,42,42,42,42,42,-68,-69,-70,-71,-72,-73,-76,-77,42,-80,-81,42,-84,-85,-86,-87,-93,42,42,-30,-31,-32,-33,-34,-35,-37,-2,42,42,42,80,-82,-96,42,42,42,42,42,-36,-2,-40,-49,-51,-95,-99,42,42,-39,-42,42,-45,42,-50,-38,-41,-43,-9,42,42,42,-8,-44,-46,42,]),'OP_TERNARIO':([20,33,39,41,42,43,46,56,61,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,90,91,92,93,94,95,97,98,99,100,102,115,116,117,118,119,127,128,129,133,135,145,146,147,148,151,152,153,154,156,157,160,164,165,166,167,168,169,170,172,],[43,43,43,-89,-90,-91,43,43,43,43,43,43,43,-68,-69,-70,-71,-72,-73,-76,-77,43,-80,-81,43,-84,-85,-86,43,43,-30,-31,-32,-33,-34,-35,-37,-2,43,43,43,43,43,43,43,43,-36,-2,-40,-49,-51,43,43,-39,-42,43,-45,43,-50,-38,-41,-43,-9,43,43,43,-8,-44,-46,43,]),'NUMERO_DECIMAL':([20,33,39,41,42,43,46,56,61,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,90,91,92,93,94,95,97,98,99,100,102,115,116,117,118,119,127,128,129,133,135,145,146,147,148,151,152,153,154,156,157,160,164,165,166,167,168,169,170,172,],[51,51,51,-89,-90,-91,51,51,51,51,51,51,51,-68,-69,-70,-71,-72,-73,-76,-77,51,-80,-81,51,-84,-85,-86,51,51,-30,-31,-32,-33,-34,-35,-37,-2,51,51,51,51,51,51,51,51,-36,-2,-40,-49,-51,51,51,-39,-42,51,-45,51,-50,-38,-41,-43,-9,51,51,51,-8,-44,-46,51,]),'CARACTER':([20,33,39,41,42,43,46,56,61,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,90,91,92,93,94,95,97,98,99,100,102,115,116,117,118,119,127,128,129,133,135,145,146,147,148,151,152,153,154,156,157,160,164,165,166,167,168,169,170,172,],[52,52,52,-89,-90,-91,52,52,52,52,52,52,52,-68,-69,-70,-71,-72,-73,-76,-77,52,-80,-81,52,-84,-85,-86,52,52,-30,-31,-32,-33,-34,-35,-37,-2,52,52,52,52,52,52,52,52,-36,-2,-40,-49,-51,52,52,-39,-42,52,-45,52,-50,-38,-41,-43,-9,52,52,52,-8,-44,-46,52,]),'CADENA':([20,33,39,41,42,43,46,56,61,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,90,91,92,93,94,95,97,98,99,100,102,115,116,117,118,119,127,128,129,133,135,145,146,147,148,151,152,153,154,156,157,160,164,165,166,167,168,169,170,172,],[53,53,53,-89,-90,-91,53,53,53,53,53,53,53,-68,-69,-70,-71,-72,-73,-76,-77,53,-80,-81,53,-84,-85,-86,53,53,-30,-31,-32,-33,-34,-35,-37,-2,53,53,53,53,53,53,53,53,-36,-2,-40,-49,-51,53,53,-39,-42,53,-45,53,-50,-38,-41,-43,-9,53,53,53,-8,-44,-46,53,]),'PALABRA_RESERVADA_TRUE':([20,33,39,41,42,43,46,56,61,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,90,91,92,93,94,95,97,98,99,100,102,115,116,117,118,119,127,128,129,133,135,145,146,147,148,151,152,153,154,156,157,160,164,165,166,167,168,169,170,172,],[54,54,54,-89,-90,-91,54,54,54,54,54,54,54,-68,-69,-70,-71,-72,-73,-76,-77,54,-80,-81,54,-84,-85,-86,54,54,-30,-31,-32,-33,-34,-35,-37,-2,54,54,54,54,54,54,54,54,-36,-2,-40,-49,-51,54,54,-39,-42,54,-45,54,-50,-38,-41,-43,-9,54,54,54,-8,-44,-46,54,]),'PALABRA_RESERVADA_FALSE':([20,33,39,41,42,43,46,56,61,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,90,91,92,93,94,95,97,98,99,100,102,115,116,117,118,119,127,128,129,133,135,145,146,147,148,151,152,153,154,156,157,160,164,165,166,167,168,169,170,172,],[55,55,55,-89,-90,-91,55,55,55,55,55,55,55,-68,-69,-70,-71,-72,-73,-76,-77,55,-80,-81,55,-84,-85,-86,55,55,-30,-31,-32,-33,-34,-35,-37,-2,55,55,55,55,55,55,55,55,-36,-2,-40,-49,-51,55,55,-39,-42,55,-45,55,-50,-38,-41,-43,-9,55,55,55,-8,-44,-46,55,]),'CORCHETE_DERECHO':([29,31,32,34,35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,65,83,85,86,108,109,110,111,112,113,114,120,121,122,138,139,140,141,142,143,144,],[62,-61,-63,-65,-67,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-64,-87,-93,-59,-60,-62,-66,-74,-78,-82,-96,-57,-58,143,-52,-53,-54,-55,-56,-95,-99,]),'PALABRA_RESERVADA_OR':([30,31,32,34,35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,65,83,85,86,108,109,110,111,112,113,114,130,131,143,144,162,171,173,],[63,-61,-63,-65,-67,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-64,-87,-93,63,-60,-62,-66,-74,-78,-82,-96,63,63,-95,-99,63,63,63,]),'PALABRA_RESERVADA_THEN':([31,32,34,35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,65,83,108,109,110,111,112,113,114,130,143,144,],[-61,-63,-65,-67,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-64,-87,-60,-62,-66,-74,-78,-82,-96,151,-95,-99,]),'PALABRA_RESERVADA_DO':([31,32,34,35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,65,83,108,109,110,111,112,113,114,131,143,144,161,171,173,],[-61,-63,-65,-67,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-64,-87,-60,-62,-66,-74,-78,-82,-96,152,-95,-99,166,-47,-48,]),'PALABRA_RESERVADA_TO':([31,32,34,35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,65,83,108,109,110,111,112,113,114,143,144,162,],[-61,-63,-65,-67,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-64,-87,-60,-62,-66,-74,-78,-82,-96,-95,-99,167,]),'PALABRA_RESERVADA_BY':([31,32,34,35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,65,83,108,109,110,111,112,113,114,143,144,171,],[-61,-63,-65,-67,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-64,-87,-60,-62,-66,-74,-78,-82,-96,-95,-99,172,]),'PALABRA_RESERVADA_AND':([31,32,34,35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,65,83,85,108,109,110,111,112,113,114,143,144,],[64,-63,-65,-67,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-64,-87,-93,64,-62,-66,-74,-78,-82,-96,-95,-99,]),'MENOR_IGUAL':([35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,83,85,111,112,113,114,143,144,],[68,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-87,-93,-74,-78,-82,-96,-95,-99,]),'MENOR':([35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,83,85,111,112,113,114,143,144,],[69,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-87,-93,-74,-78,-82,-96,-95,-99,]),'MAYOR':([35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,83,85,111,112,113,114,143,144,],[70,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-87,-93,-74,-78,-82,-96,-95,-99,]),'MAYOR_IGUAL':([35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,83,85,111,112,113,114,143,144,],[71,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-87,-93,-74,-78,-82,-96,-95,-99,]),'IGUAL':([35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,83,85,111,112,113,114,143,144,],[72,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-87,-93,-74,-78,-82,-96,-95,-99,]),'DISTINTO':([35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,83,85,111,112,113,114,143,144,],[73,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-87,-93,-74,-78,-82,-96,-95,-99,]),'PUNTOS_MAYOR_PUNTOS':([35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,83,85,110,111,112,113,114,143,144,],[74,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-87,-93,74,-74,-78,-82,-96,-95,-99,]),'PUNTOS_MENOR_PUNTOS':([35,36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,83,85,110,111,112,113,114,143,144,],[75,-75,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-87,-93,75,-74,-78,-82,-96,-95,-99,]),'OPERADOR_SUMA':([36,37,38,40,44,45,47,48,49,50,51,52,53,54,55,83,85,111,112,113,114,143,144,],[77,-79,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-87,-93,77,-78,-82,-96,-95,-99,]),'OPERADOR_DIVIDIR':([37,38,40,44,45,47,48,49,50,51,52,53,54,55,83,85,112,113,114,143,144,],[81,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-87,-93,81,-82,-96,-95,-99,]),'OPERADOR_MODULO':([37,38,40,44,45,47,48,49,50,51,52,53,54,55,83,85,112,113,114,143,144,],[82,-83,-88,-92,-93,-97,-98,-94,-104,-105,-106,-107,-108,-109,-87,-93,82,-82,-96,-95,-99,]),'ASIGNACION':([49,85,132,143,],[-94,115,153,-95,]),'SUMA_RESULTADO':([49,85,143,],[-94,116,-95,]),'RESTA_RESULTADO':([49,85,143,],[-94,117,-95,]),'MULTI_RESULTADO':([49,85,143,],[-94,118,-95,]),'DIVI_RESULTADO':([49,85,143,],[-94,119,-95,]),'INCREMENTO':([49,85,143,],[-94,120,-95,]),'DECREMENTO':([49,85,143,],[-94,121,-95,]),'LLAVE_IZQ':([56,61,90,91,92,93,94,95,97,98,127,128,129,133,135,146,147,148,151,152,154,156,157,160,164,165,166,168,169,170,],[98,98,-30,-31,-32,-33,-34,-35,-37,-2,-36,-2,-40,-49,-51,98,-39,-42,98,-45,-50,-38,-41,-43,-9,98,98,-8,-44,-46,]),'PALABRA_RESERVADA_IF':([56,61,90,91,92,93,94,95,97,98,127,128,129,133,135,146,147,148,151,152,154,156,157,160,164,165,166,168,169,170,],[99,99,-30,-31,-32,-33,-34,-35,-37,-2,-36,-2,-40,-49,-51,99,-39,-42,99,-45,-50,-38,-41,-43,-9,99,99,-8,-44,-46,]),'BUCLE_WHILE':([56,61,90,91,92,93,94,95,97,98,127,128,129,133,135,146,147,148,151,152,154,156,157,160,164,165,166,168,169,170,],[100,100,-30,-31,-32,-33,-34,-35,-37,-2,-36,-2,-40,-49,-51,100,-39,-42,100,-45,-50,-38,-41,-43,-9,100,100,-8,-44,-46,]),'BUCLE_FOR':([56,61,90,91,92,93,94,95,97,98,127,128,129,133,135,146,147,148,151,152,154,156,157,160,164,165,166,168,169,170,],[101,101,-30,-31,-32,-33,-34,-35,-37,-2,-36,-2,-40,-49,-51,101,-39,-42,101,-45,-50,-38,-41,-43,-9,101,101,-8,-44,-46,]),'PALABRA_RESERVADA_RETURN':([56,61,90,91,92,93,94,95,97,98,127,128,129,133,135,146,147,148,151,152,154,156,157,160,164,165,166,168,169,170,],[102,102,-30,-31,-32,-33,-34,-35,-37,-2,-36,-2,-40,-49,-51,102,-39,-42,102,-45,-50,-38,-41,-43,-9,102,102,-8,-44,-46,]),'PALABRA_RESERVADA_BREAK':([56,61,90,91,92,93,94,95,97,98,127,128,129,133,135,146,147,148,151,152,154,156,157,160,164,165,166,168,169,170,],[103,103,-30,-31,-32,-33,-34,-35,-37,-2,-36,-2,-40,-49,-51,103,-39,-42,103,-45,-50,-38,-41,-43,-9,103,103,-8,-44,-46,]),'LLAVE_DER':([90,91,92,93,94,95,97,98,127,128,129,133,135,146,147,148,152,154,156,157,160,164,168,169,170,],[-30,-31,-32,-33,-34,-35,-37,-2,-36,-2,-40,-49,-51,156,-39,-42,-45,-50,-38,-41,-43,-9,-8,-44,-46,]),'PALABRA_RESERVADA_ELSE':([90,91,92,93,94,95,97,127,133,135,152,154,156,160,169,170,],[-30,-31,-32,-33,-34,-35,-37,-36,-49,-51,-45,-50,-38,165,-44,-46,]),'PALABRA_RESERVADA_STATIC':([98,128,129,147,164,168,],[-2,149,-40,-39,-9,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declList':([0,],[2,]),'decl':([0,2,],[3,11,]),'varDecl':([0,2,],[4,4,]),'funDecl':([0,2,],[5,5,]),'typeSpec':([0,2,16,18,57,128,149,],[6,6,25,25,25,150,158,]),'varDeclList':([6,150,158,],[12,159,163,]),'varDeclInit':([6,17,150,158,],[14,26,14,14,]),'varDeclId':([6,17,150,158,],[15,15,15,15,]),'parms':([16,18,],[21,28,]),'parmList':([16,18,],[22,22,]),'eps':([16,18,88,98,128,],[23,23,125,129,148,]),'parmTypeList':([16,18,57,],[24,24,104,]),'simpleExp':([20,46,56,61,87,88,99,100,102,115,116,117,118,119,145,146,151,153,165,166,167,172,],[30,86,86,86,86,86,130,131,86,86,86,86,86,86,86,86,86,162,86,86,171,173,]),'andExp':([20,46,56,61,63,87,88,99,100,102,115,116,117,118,119,145,146,151,153,165,166,167,172,],[31,31,31,31,108,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'unaryRelExp':([20,33,46,56,61,63,64,87,88,99,100,102,115,116,117,118,119,145,146,151,153,165,166,167,172,],[32,65,32,32,32,32,109,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'relExp':([20,33,46,56,61,63,64,87,88,99,100,102,115,116,117,118,119,145,146,151,153,165,166,167,172,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'minmaxExp':([20,33,46,56,61,63,64,66,87,88,99,100,102,115,116,117,118,119,145,146,151,153,165,166,167,172,],[35,35,35,35,35,35,35,110,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'sumExp':([20,33,46,56,61,63,64,66,67,87,88,99,100,102,115,116,117,118,119,145,146,151,153,165,166,167,172,],[36,36,36,36,36,36,36,36,111,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'mulExp':([20,33,46,56,61,63,64,66,67,76,87,88,99,100,102,115,116,117,118,119,145,146,151,153,165,166,167,172,],[37,37,37,37,37,37,37,37,37,112,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'unaryExp':([20,33,39,46,56,61,63,64,66,67,76,79,87,88,99,100,102,115,116,117,118,119,145,146,151,153,165,166,167,172,],[38,38,83,38,38,38,38,38,38,38,38,113,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'unaryOp':([20,33,39,46,56,61,63,64,66,67,76,79,87,88,99,100,102,115,116,117,118,119,145,146,151,153,165,166,167,172,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'factor':([20,33,39,46,56,61,63,64,66,67,76,79,87,88,99,100,102,115,116,117,118,119,145,146,151,153,165,166,167,172,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'immutable':([20,33,39,46,56,61,63,64,66,67,76,79,87,88,99,100,102,115,116,117,118,119,145,146,151,153,165,166,167,172,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'mutable':([20,33,39,46,56,61,63,64,66,67,76,79,87,88,99,100,102,115,116,117,118,119,145,146,151,153,165,166,167,172,],[45,45,45,85,85,85,45,45,45,45,45,45,85,85,45,45,85,85,85,85,85,85,85,85,85,45,85,85,45,45,]),'call':([20,33,39,46,56,61,63,64,66,67,76,79,87,88,99,100,102,115,116,117,118,119,145,146,151,153,165,166,167,172,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'constant':([20,33,39,46,56,61,63,64,66,67,76,79,87,88,99,100,102,115,116,117,118,119,145,146,151,153,165,166,167,172,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'parmIdList':([25,],[58,]),'parmId':([25,105,],[59,136,]),'relop':([35,],[66,]),'minmaxop':([35,110,],[67,67,]),'sumop':([36,111,],[76,76,]),'mulOp':([37,112,],[79,79,]),'exp':([46,56,61,87,88,102,115,116,117,118,119,145,146,151,165,166,],[84,96,96,122,126,134,138,139,140,141,142,155,96,96,96,96,]),'stmt':([56,61,146,151,165,166,],[89,107,157,160,169,170,]),'expStmt':([56,61,146,151,165,166,],[90,90,90,90,90,90,]),'compoundStmt':([56,61,146,151,165,166,],[91,91,91,91,91,91,]),'selectStmt':([56,61,146,151,165,166,],[92,92,92,92,92,92,]),'iterStmt':([56,61,146,151,165,166,],[93,93,93,93,93,93,]),'returnStmt':([56,61,146,151,165,166,],[94,94,94,94,94,94,]),'breakStmt':([56,61,146,151,165,166,],[95,95,95,95,95,95,]),'args':([88,],[123,]),'argList':([88,],[124,]),'localDecls':([98,],[128,]),'stmtList':([128,],[146,]),'scopedVarDecl':([128,],[147,]),'iterRange':([153,],[161,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declList','program',1,'p_program','proyecto1.py',397),
  ('eps -> <empty>','eps',0,'p_eps','proyecto1.py',400),
  ('declList -> declList decl','declList',2,'p_declList','proyecto1.py',404),
  ('declList -> decl','declList',1,'p_declList','proyecto1.py',405),
  ('decl -> varDecl','decl',1,'p_decl','proyecto1.py',408),
  ('decl -> funDecl','decl',1,'p_decl','proyecto1.py',409),
  ('varDecl -> typeSpec varDeclList','varDecl',2,'p_varDecl','proyecto1.py',414),
  ('scopedVarDecl -> PALABRA_RESERVADA_STATIC typeSpec varDeclList SEMICOLON','scopedVarDecl',4,'p_scopedVarDecl','proyecto1.py',418),
  ('scopedVarDecl -> typeSpec varDeclList SEMICOLON','scopedVarDecl',3,'p_scopedVarDecl','proyecto1.py',419),
  ('varDeclList -> varDeclList COMA varDeclInit','varDeclList',3,'p_varDeclList','proyecto1.py',422),
  ('varDeclList -> varDeclInit','varDeclList',1,'p_varDeclList','proyecto1.py',423),
  ('varDeclInit -> varDeclId','varDeclInit',1,'p_varDeclInit','proyecto1.py',426),
  ('varDeclInit -> varDeclId COLON simpleExp','varDeclInit',3,'p_varDeclInit','proyecto1.py',427),
  ('varDeclId -> VARIABLE','varDeclId',1,'p_varDeclId','proyecto1.py',430),
  ('varDeclId -> VARIABLE CORCHETE_IZQUIERDO NUMERO_ENTERO CORCHETE_DERECHO','varDeclId',4,'p_varDeclId','proyecto1.py',431),
  ('typeSpec -> TIPO_ENTERO','typeSpec',1,'p_typeSpec','proyecto1.py',434),
  ('typeSpec -> TIPO_CARACTER','typeSpec',1,'p_typeSpec','proyecto1.py',435),
  ('typeSpec -> PALABRA_RESERVADA_BOOL','typeSpec',1,'p_typeSpec','proyecto1.py',436),
  ('funDecl -> typeSpec VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt','funDecl',6,'p_funDecl','proyecto1.py',441),
  ('funDecl -> VARIABLE PARENTESIS_IZQUIERDO parms PARENTESIS_DERECHO stmt','funDecl',5,'p_funDecl','proyecto1.py',442),
  ('parms -> parmList','parms',1,'p_parms','proyecto1.py',445),
  ('parms -> eps','parms',1,'p_parms','proyecto1.py',446),
  ('parmList -> parmList SEMICOLON parmTypeList','parmList',3,'p_parmList','proyecto1.py',449),
  ('parmList -> parmTypeList','parmList',1,'p_parmList','proyecto1.py',450),
  ('parmTypeList -> typeSpec parmIdList','parmTypeList',2,'p_parmTypeList','proyecto1.py',453),
  ('parmIdList -> parmIdList COMA parmId','parmIdList',3,'p_parmIdList','proyecto1.py',456),
  ('parmIdList -> parmId','parmIdList',1,'p_parmIdList','proyecto1.py',457),
  ('parmId -> VARIABLE','parmId',1,'p_parmId','proyecto1.py',460),
  ('parmId -> VARIABLE PARENTESIS_IZQUIERDO PARENTESIS_DERECHO','parmId',3,'p_parmId','proyecto1.py',461),
  ('stmt -> expStmt','stmt',1,'p_stmt','proyecto1.py',466),
  ('stmt -> compoundStmt','stmt',1,'p_stmt','proyecto1.py',467),
  ('stmt -> selectStmt','stmt',1,'p_stmt','proyecto1.py',468),
  ('stmt -> iterStmt','stmt',1,'p_stmt','proyecto1.py',469),
  ('stmt -> returnStmt','stmt',1,'p_stmt','proyecto1.py',470),
  ('stmt -> breakStmt','stmt',1,'p_stmt','proyecto1.py',471),
  ('expStmt -> exp SEMICOLON','expStmt',2,'p_expStmt','proyecto1.py',474),
  ('expStmt -> SEMICOLON','expStmt',1,'p_expStmt','proyecto1.py',475),
  ('compoundStmt -> LLAVE_IZQ localDecls stmtList LLAVE_DER','compoundStmt',4,'p_compoundStmt','proyecto1.py',478),
  ('localDecls -> localDecls scopedVarDecl','localDecls',2,'p_localDecls','proyecto1.py',481),
  ('localDecls -> eps','localDecls',1,'p_localDecls','proyecto1.py',482),
  ('stmtList -> stmtList stmt','stmtList',2,'p_stmtList','proyecto1.py',485),
  ('stmtList -> eps','stmtList',1,'p_stmtList','proyecto1.py',486),
  ('selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt','selectStmt',4,'p_selectStmt','proyecto1.py',489),
  ('selectStmt -> PALABRA_RESERVADA_IF simpleExp PALABRA_RESERVADA_THEN stmt PALABRA_RESERVADA_ELSE stmt','selectStmt',6,'p_selectStmt','proyecto1.py',490),
  ('iterStmt -> BUCLE_WHILE simpleExp PALABRA_RESERVADA_DO','iterStmt',3,'p_iterStmt','proyecto1.py',493),
  ('iterStmt -> BUCLE_FOR VARIABLE ASIGNACION iterRange PALABRA_RESERVADA_DO stmt','iterStmt',6,'p_iterStmt','proyecto1.py',494),
  ('iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp','iterRange',3,'p_iterRange','proyecto1.py',497),
  ('iterRange -> simpleExp PALABRA_RESERVADA_TO simpleExp PALABRA_RESERVADA_BY simpleExp','iterRange',5,'p_iterRange','proyecto1.py',498),
  ('returnStmt -> PALABRA_RESERVADA_RETURN SEMICOLON','returnStmt',2,'p_returnStmt','proyecto1.py',501),
  ('returnStmt -> PALABRA_RESERVADA_RETURN exp SEMICOLON','returnStmt',3,'p_returnStmt','proyecto1.py',502),
  ('breakStmt -> PALABRA_RESERVADA_BREAK SEMICOLON','breakStmt',2,'p_breakStmt','proyecto1.py',505),
  ('exp -> mutable ASIGNACION exp','exp',3,'p_exp','proyecto1.py',510),
  ('exp -> mutable SUMA_RESULTADO exp','exp',3,'p_exp','proyecto1.py',511),
  ('exp -> mutable RESTA_RESULTADO exp','exp',3,'p_exp','proyecto1.py',512),
  ('exp -> mutable MULTI_RESULTADO exp','exp',3,'p_exp','proyecto1.py',513),
  ('exp -> mutable DIVI_RESULTADO exp','exp',3,'p_exp','proyecto1.py',514),
  ('exp -> mutable INCREMENTO','exp',2,'p_exp','proyecto1.py',515),
  ('exp -> mutable DECREMENTO','exp',2,'p_exp','proyecto1.py',516),
  ('exp -> simpleExp','exp',1,'p_exp','proyecto1.py',517),
  ('simpleExp -> simpleExp PALABRA_RESERVADA_OR andExp','simpleExp',3,'p_simpleExp','proyecto1.py',520),
  ('simpleExp -> andExp','simpleExp',1,'p_simpleExp','proyecto1.py',521),
  ('andExp -> andExp PALABRA_RESERVADA_AND unaryRelExp','andExp',3,'p_andExp','proyecto1.py',524),
  ('andExp -> unaryRelExp','andExp',1,'p_andExp','proyecto1.py',525),
  ('unaryRelExp -> PALABRA_RESERVADA_NOT unaryRelExp','unaryRelExp',2,'p_unaryRelExp','proyecto1.py',528),
  ('unaryRelExp -> relExp','unaryRelExp',1,'p_unaryRelExp','proyecto1.py',529),
  ('relExp -> minmaxExp relop minmaxExp','relExp',3,'p_relExp','proyecto1.py',532),
  ('relExp -> minmaxExp','relExp',1,'p_relExp','proyecto1.py',533),
  ('relop -> MENOR_IGUAL','relop',1,'p_relop','proyecto1.py',536),
  ('relop -> MENOR','relop',1,'p_relop','proyecto1.py',537),
  ('relop -> MAYOR','relop',1,'p_relop','proyecto1.py',538),
  ('relop -> MAYOR_IGUAL','relop',1,'p_relop','proyecto1.py',539),
  ('relop -> IGUAL','relop',1,'p_relop','proyecto1.py',540),
  ('relop -> DISTINTO','relop',1,'p_relop','proyecto1.py',541),
  ('minmaxExp -> minmaxExp minmaxop sumExp','minmaxExp',3,'p_minmaxExp','proyecto1.py',544),
  ('minmaxExp -> sumExp','minmaxExp',1,'p_minmaxExp','proyecto1.py',545),
  ('minmaxop -> PUNTOS_MAYOR_PUNTOS','minmaxop',1,'p_minmaxop','proyecto1.py',548),
  ('minmaxop -> PUNTOS_MENOR_PUNTOS','minmaxop',1,'p_minmaxop','proyecto1.py',549),
  ('sumExp -> sumExp sumop mulExp','sumExp',3,'p_sumExp','proyecto1.py',552),
  ('sumExp -> mulExp','sumExp',1,'p_sumExp','proyecto1.py',553),
  ('sumop -> OPERADOR_SUMA','sumop',1,'p_sumop','proyecto1.py',556),
  ('sumop -> OPERADOR_RESTA','sumop',1,'p_sumop','proyecto1.py',557),
  ('mulExp -> mulExp mulOp unaryExp','mulExp',3,'p_mulExp','proyecto1.py',564),
  ('mulExp -> unaryExp','mulExp',1,'p_mulExp','proyecto1.py',565),
  ('mulOp -> OPERADOR_MULTIPLICAR','mulOp',1,'p_mulop','proyecto1.py',568),
  ('mulOp -> OPERADOR_DIVIDIR','mulOp',1,'p_mulop','proyecto1.py',569),
  ('mulOp -> OPERADOR_MODULO','mulOp',1,'p_mulop','proyecto1.py',570),
  ('unaryExp -> unaryOp unaryExp','unaryExp',2,'p_unaryExp','proyecto1.py',573),
  ('unaryExp -> factor','unaryExp',1,'p_unaryExp','proyecto1.py',574),
  ('unaryOp -> OPERADOR_RESTA','unaryOp',1,'p_unaryop','proyecto1.py',577),
  ('unaryOp -> OPERADOR_MULTIPLICAR','unaryOp',1,'p_unaryop','proyecto1.py',578),
  ('unaryOp -> OP_TERNARIO','unaryOp',1,'p_unaryop','proyecto1.py',579),
  ('factor -> immutable','factor',1,'p_factor','proyecto1.py',582),
  ('factor -> mutable','factor',1,'p_factor','proyecto1.py',583),
  ('mutable -> VARIABLE','mutable',1,'p_mutable','proyecto1.py',586),
  ('mutable -> VARIABLE CORCHETE_IZQUIERDO exp CORCHETE_DERECHO','mutable',4,'p_mutable','proyecto1.py',587),
  ('immutable -> PARENTESIS_IZQUIERDO exp PARENTESIS_DERECHO','immutable',3,'p_immutable','proyecto1.py',590),
  ('immutable -> call','immutable',1,'p_immutable','proyecto1.py',591),
  ('immutable -> constant','immutable',1,'p_immutable','proyecto1.py',592),
  ('call -> VARIABLE PARENTESIS_IZQUIERDO args PARENTESIS_DERECHO','call',4,'p_call','proyecto1.py',595),
  ('args -> argList','args',1,'p_args','proyecto1.py',598),
  ('args -> eps','args',1,'p_args','proyecto1.py',599),
  ('argList -> argList COMA exp','argList',3,'p_argList','proyecto1.py',602),
  ('argList -> exp','argList',1,'p_argList','proyecto1.py',603),
  ('constant -> NUMERO_ENTERO','constant',1,'p_constant','proyecto1.py',606),
  ('constant -> NUMERO_DECIMAL','constant',1,'p_constant','proyecto1.py',607),
  ('constant -> CARACTER','constant',1,'p_constant','proyecto1.py',608),
  ('constant -> CADENA','constant',1,'p_constant','proyecto1.py',609),
  ('constant -> PALABRA_RESERVADA_TRUE','constant',1,'p_constant','proyecto1.py',610),
  ('constant -> PALABRA_RESERVADA_FALSE','constant',1,'p_constant','proyecto1.py',611),
]
